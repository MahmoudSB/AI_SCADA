<?xml version="1.0" encoding="utf-8"?>
<ReportDocument xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://progea.com">
  <_ReportData>/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v17.1, Version=17.1.8.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.XtraReports.v17.1\v4.0_17.1.8.0__b88d1754d700e49a\DevExpress.XtraReports.v17.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>en-US</Localization>
///   <Version>17.1</Version>
///   <Resources>
///     <Resource Name="XtraReportSerialization.XtraReport">
/// zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAFAAAAAAAAAFBBRFBBRFBBY+SPgIP1jyDz3wdDb+BKOIXbfisAAAAAAAAAVgAAAKcAAAD4AAAAJwIAACZjAHUAcwB0AG8AbQBTAHEAbABRAHUAZQByAHkAMgAuAFMAcQBsAAAAAAAmYwB1AHMAdABvAG0AUwBxAGwAUQB1AGUAcgB5ADMALgBTAHEAbAAHAQAATHAAaQBjAHQAdQByAGUAQgBvAHgAMQAuAEkAbQBhAGcAZQAmAFMAeQBzAHQAZQBtAC4ARAByAGEAdwBpAG4AZwAuAEkA
/// bQBhAGcAZQCNAgAATHAAaQBjAHQAdQByAGUAQgBvAHgAMgAuAEkAbQBhAGcAZQAmAFMAeQBzAHQAZQBtAC4ARAByAGEAdwBpAG4AZwAuAEkAbQBhAGcAZQDYnwAATnMAcQBsAEQAYQB0AGEAUwBvAHUAcgBjAGUAMQAuAFIAZQBzAHUAbAB0AFMAYwBoAGUAbQBhAFMAZQByAGkAYQBsAGkAegBhAGIAbABlAOTaAAABhAJzZWxlY3QgIlZMX0ZpbHRlcmVkX1ZTUnh4Ii4iTG9jYWxUaW1lQ29sIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfVlNSeHgiLiJDaGFtYl9QcmVzc19WU1IiLA0KICAgICAgICJWTF9GaWx0ZXJlZF9WU1J4eCIuIkNoYW1wX1RlbXBfVlNSIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfVlNSeHgiLiJDb3Jja19UZW1wX1ZTUiIsDQogICAgICAgIlZMX0Zp
/// bHRlcmVkX1ZTUnh4Ii4iUHVtcF9QcmVzc19WU1IiDQogIGZyb20gImRibyIuIlZMX0ZpbHRlcmVkX1ZTUnh4IgGDA3NlbGVjdCAiVkxfRmlsdGVyZWRfVHJlYXRtZW50X1ZTUnh4Ii4iVlNSIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfVHJlYXRtZW50X1ZTUnh4Ii4iU3RhcnQgVGltZSIsDQogICAgICAgIlZMX0ZpbHRlcmVkX1RyZWF0bWVudF9WU1J4eCIuIlN0YXJ0IERhdGUiLA0KICAgICAgICJWTF9GaWx0ZXJlZF9UcmVhdG1lbnRfVlNSeHgiLiJFbmQgVGltZSIsDQogICAgICAgIlZMX0ZpbHRlcmVkX1RyZWF0bWVudF9WU1J4eCIuIkVuZCBEYXRlIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfVHJlYXRtZW50X1ZTUnh4Ii4iTG9jYWxUaW1lQ29sIiwNCgkgIlZM
/// X0ZpbHRlcmVkX1RyZWF0bWVudF9WU1J4eCIuIlN0YXR1cyINCiAgZnJvbSAiZGJvIi4iVkxfRmlsdGVyZWRfVHJlYXRtZW50X1ZTUnh4IiBGnQAAiVBORw0KGgoAAAANSUhEUgAAApoAAAB0CAYAAAAl3ZIkAAAABGdBTUEAALGPC/xhBQAAnP1JREFUeF7tvdu/ZUWV51sv5+l8Pufx/APnvJSApnU+/TmFUv3UNtDVD+dTXshMsCVz78zUgrxYXQokWGqCJReBKiUh0/IGmd5a7iDgBeTiDchE7RYygaoWEqVaAavUTNTCzTzjO34xZsSca+215tpr7VuyxmePPWPOFTNixLjFiJgxY/5RFzjhHZv+3UnrZnectH7Tfjs+ZviS4at2Pvf69ZuqKU5xilOc4hSnOMUpHn9IrOcx37pNz75+3ewXXr9+5j1/vHbmja9/5zv/9xQmLhxOXLvxz09cN/s5K/xf+1U+xSlOcYpTnOIUpzjF
/// 1x5a8Hnk9etmZl//znf/nyls7A4nnLH5/7JCrpgGmFOc4hSnOMUpTnGKU5wPCThPWL/pP/8/mzf/bymMHAyvW7f5lBPXbbqtX2FTnOIUpzjFKU5xilOcYhtPWjdz4f995pn/Rwon+wNB5knrN93Xr4ApTnGKU5ziFKc4xSlOcT48af3sVfMGmzwun85kTnGKU5ziFKc4xSlOcaHIzGbfx+j24xXtzIuNFvlOcYpTnOIUpzjFKU5xEbBf7LUUyJrNFF4KeLt8OV78WU4mjIJvWD9TnXjmjM7P3FC9LtH9hnW9edt4wvqNLJStTjpr1tKz1Ynrt6SyKLP/PUuNJ63bWNOkc9qXadS58nob7Fr7+jhI3cHLBq8TPasby/YY/+Db+rNb7RwXJas4Ry6S04wfI88JZ0WeLc5vdDPuWSxs0iCEvjXrN9tvcR76l39XGr3AXqRv8XvoYBf7o1y11WzQ69F9HBvtXzvbKK9dJxh0gpPS/WEo3sHD
/// jc4zaIhz/Z55J5q2eHqpMOoPeqAB3Q4aS9recObmOt3mb8g0/960j1I2aqfqiHzCXA55lC/f1w+5L/Qi7qNc8VnXaIfapzbldmX6Fguj/mhvXHNMsoZm7CTfE3TlY6ZZ57TP5ZT0KXjFMcqX7qnMhSJ1uN8x+wr7kR9aWj1dLIRPwbsTzK/r2gY7mj5OoI3OryT/4F9TPvJvJR01Pcbn5YyxjI4jjbfR2cKoX8bFxtUQaIYwQ7iRxkAJGvrd00byr1mbjMzKC2UpncNyYVbOrMThrDmnvYHkAXXev7xRsXailG3B+OvWRdkRkPfes5pQfG2n4SWd7vjypxw6cOkWvCx/a3a6mQ4FVeEYFxWtg+EY9EnHorOZqQdtypfz6Cj9qO+x9BvOtCDV8r7j/F3Vxosv1b0DEF2mrfD+5Nlz7J6PVadufX/9u/ii8qkv6iQ/nWToO0fy+n2JVmGzvsVAl5fJGLp0LfEiBV+iS/QEn5aavjgiH+oH
/// 23I7cS18TDwEjY/B88gnfudyo4zA3Masz5G3pKM8H4zWURttpMM3Bw2cv36tgmOwLK97+WOi8WiNDTCyrLNsY7B64jszr+M37suBfdgUNGuAh92dYOmTzkKvuC4ZuQzs2qTaJh5Slnxd8JYjdZV5VyPSDuevtc/b6tc4hjz639cV1U9EmeV1yRdZkvaj9Z+So103W/N8iaZlw3Uzsx5kajP25dnGaDUEmmHAYaBybjPVGhyn/xaOcj4kz4Y0usnOQEo5viKOi6JHyuoGk+h2J3AmgYgcr/PAHBC/Rd4y/0IRB3TSGWnWKQUfuk49q98RiX9yBN6heecaemN6kfiwcJRORZmSjeyKczqj6JDQOeRKvXQyGnn3o3myGPoTvFDgF7av66S9wzMd807SO1Zz3taGk2e3Vjuu2lN9/q77qkcfP1S9WhnYv1dffTWVMRijE3jXJZf7feC/HvtddeDxp6prb7692rjrSqcHGuFVdIzBV+mhAiF4
/// Ck3B+371LQbif7CPE9e/xwdlDX6mDsf5l/iq9gSdi4fU2e96lm8zXeaPa+CJazULFLqS74nBmF3zp0LRdt1XtjcQfnBs1zEfUqf7H9e/4KHVu+5sK8NsxQOiXCf5QK5FWxYLqYP6XfbWbvch0Jt4xWQFv5N+o7WBeyIofd2ZBHPBH7WR/LSPQSZ8it/XWDArvVde6hL20jQK8gSQY9gOdDNQ9Ha5vxetqxVdb6KtSSbS2fC7vTwZBaPMGBDoumTDb4H6TXW6HZge++RNku9yodFyxDd1t8SOfhmWAldDoCnFQZh5xIIAOe64+prq0ScOD8Gnqjvu/27deaIoroDekfXWt/QoJY2002d0Xrjnc9XDT/yjd8a0AXzEOvkD1qaDh570Dl/X+7V5RDx0qHrk8NPV95+w8g89Xb3j/A/XtPTSu7oQZ0871HnpGg5hz1duT7ztw48R8OATT1eP/tjkkWT08CGwzPOU6jEee1477rvnG6aPeZZk
/// cVGOMnigOvPjcK5J/8xJ2m+cw5/Td5xXfXTfF6vDR35qASXB4Zz9A4kT56pXqj94zNi/ziZSDzbHbGZAijcFc696+v5HD5ref8YD2whO6YyjDMnQfEGy/6VA8UPpGBjccPc3XcZui4+bjJNdHsAu7eh2anYkvSh1YTEwfMOTjfr9Nzu6ryiv1aj7CPR333h79aG9n3P5MOt84jtn3W4i4Cn5oU48giXZVJZN5hnH7NcGo9dh/plyIgDj+oWf/KzbjvPSaKZ9ve1YfBRfZcdtn+FyN4TP2D6BnQJP01101XiFXe287h/sd+mJ9IO2qF2Btd5YXfiKdl0LQWg644Jd1tcTtCMb9aeSUVu2qxNp056bbve2ui0633pltRBEXl5msiOwlBN99L577k0BpniL73rdug3ypx1tYDGRLwj9kRFyU78flwJXQ6AZKCcUxmHB2brN7uyHwauvqkM8bcf5XgZOTQrRv56lRtEk5+wBsKVpHx2AGqBD
/// Gxod9TjghSiA8LR1+vvvvtf5pJmEXppXF0pfhFmHfnXsZWtvavcYUMugLZB03rhEdXaBoAB5S9aLi9Hpo/P+aK7QNclXfGHG7tTt51WXff7L1ZPPKrh02lMD5iwxl4JLBxKGZV190WdUZHObd11lJaR700FJyYE6HOzgQecnP129adO21GELKUe6uTT802yJgnAFuFu8Aws64Qp0e1uCaaC3aXz9GgZeVUBdt6CmJyB+T9fiJ12ShIFfHftd9cihf6r2WgC67eprq1Nmzy34jY8imIr1cLIpZnxi2U3oXBf56H7N9kX5YaMEDw0emm9q077YUNcjJsVBkBLwOa5Fu2hTzILSrt0336E8aVAF+DGdNHQoQU6NAVYI/hy7ga+So+R0PCBxwJr1m11nBdmXTIR/Bi4XJVsnAgLOdl+Jfbjfc11u0rz0OPOeP1rOr/+spkDzdWlmCoHi1E7dfkES83DAdi/f99/8fu+sQgm84+itaykRBxuO
/// 1Z1sotEDTaO7pdNNGPjjaPBq9W9+/IOZ6HMvvLQieDMpRGeYpYHPBFtbr7rO2xod63iQyig7wdTx6DT9ngY8/MMxaXZs8R3+CWfGzH0EaerQ60DX6Nh61Seq+w7+MNFHKBg025+d1wGgAbqx766v++yXyh2MWY+2VCetfXf15s3nevBy64Pfro4e+63bZg0pTUALwEfykJdZdqfdytGsmuRa1rU4yOwdQTprcdVJM8CFL1BaBgbLA8hK8gpaONaBS8JahnHBrxT3xfX693QPem2AzjLDfdq283z2MQ+UNGBxf2p+meuBXQKa+t76PunoG87a6DOtQUs6NNpYX1xMKOoXv0rsBXhD4ENbvI3rtPzp2pss0HTabWBS053L8PLr66SVd1yglCO/eDHxWzPR8BhUv9OUx+rDGfcnkpPssaHr44KVETrXBl2d89nnWKKgNe/yGdC3ImKsdbNf4NH5q31/XAJcDYEmhuEdjGGkMZArzOmpUxwC
/// KIopw5PPPlcbWKy38FmKPnUuJapNMbuktnF+2va/9lHwbgs4P3/3N6rHnniy+s3R3zWc0aRAhmlOzQ7eyduRZQltWlcnztRvC2tN1EYLXL7rbXScEDSLU0cU13i8et+BH1S7b7qt2nvTndXsrsuTvBc/0MReqIeBGnrP+iwPAM4825dn/OyFFzysi8BJmMCIh/5jHux9t3rbhbtkM1FGn/raSD7W/8XjUBxy/EZZ773q49W3CHKDWQ6JjlS/eDlXPXL4yWrDro96wMfsmWY6m/VNGsP3kMZWOSI/Agfw3gM/qh57/Ol6thpa65nfuj2LCFRs9TQ618CA1kygJ/k31xxElB1qThc5LMH1ew8erDZccrnz5Y08IjQ5oM/yXcE7zeYFHwdh2xYoA3v9863vr/bc+FXDO3ywceCJQ+YDX07ELBGkxpf8hQdYy+FnjvijU2Z+rzHbvmjPpxLtzb4FvvAC3LW33Ok+4PP3fNMfx/765d/WZYaM
/// SIIOdWIMSOXuuHJ3GqSFXAIznasR4W3481J/kVcMpMaBukwO1GEH/Pk3H/uhy5L+eePF2IJm4pG/ZC+bWAkxltHwDPtn9v1xKXB1BJo4sDRzkdbxIERmVjqB64mpnXWkb7tgVyqTxfvdHeFiY4OWNFtAWkc5BNLgqTveX12099P+aHEygEnKIJNJOdz+4IOiZ5WjG7vL286NtziB3xw72nBKkwF4KD6yrvHy67/sb2ajv9SNE/LF9+lcerwUKP2h3XKEM74O8qcv/ktNbwAcKbkCn3bfeGf1ZzPnppn2JtK29rU2UidHdJe6Q7fB0HnysCb0lgceUv2JiDItMHrt/Fmz/b+6erfLNspaPFQHQlr0mz9KvCBd+ycLoN++c1f1sc990XzTLzO9iwyw58iLL1X77/mazzgSBG+85EpfBiHaN1Zvntlabbj4ymrmw5eZ7D/la4R97W0UkFA2Ef5APrOE0mZI/fMLL1bn/N1eG7xo1i70OvxW
/// 7dMGIHpJPpCAtdQPZuNPOEsz/+QLO3YfaO1glnXxAZ0TH3iBbf9dX/dB+BvWa5u9cu1j7legP/HDgjvxwdD8D0dkEteQE/Z4/6M/cJ5KZyanNyHR2x56yPWYgYF4GnQ15bHaEJ359cvH6rY2eJfVdSw49Oxz1WU3fMEH2tQp+apujuKr5IpMQ4fh78oINDfNTQPNIYhQ5egxVGZFZixg/KA0YARFwnnuv/sb5rD0ksFqMzJ3WglDkd+y/cLqjge/Z61T5+AdhPGkZksn/sgwlTUZaXq2w/q4MBzJQR17OPzVwEN36ulRBu1471XXeGOZy+nGnwIsv2ar0r0l2jUWivNIOeouO83FwxxEhqy83jQoC9nx20XXfab62S9eEv0JlS5hrjpqjpvRuuTfrm+yCN2lXp229f1JpwtI/NUxAwv1mU2g01cbheilO3lrO8G9gpQ8YJ2kXCJQomzS6sA3VZt2XerBfB2s2bEmPyVazRkCaj/3yNZt
/// MPjAt6v/78JLUocnW6Ru6cL87Yzrfzq7vfqADVrrte6uCqU+NPUjAs06IOVof+g9wR91iwfJ7vAPyWeDMasunewWiA5DllBRv0B8qY86GQjxBAesA2k/qAyusXzjsus/b/WhU5qZD12aDIoPp249v7rlwe/WfHVwIkgk/S9+yonB4NnsH/aMHVAXspqkHSwWil7ZcNgZdJ905rv9tx1X/r230fmTDuGfO7EnZdIhdF33o1f/5W+vSmuzYwARdIVfHYzTQNNwdcxoyinFOaPIz991r6tDJ0WqgbWHv3TlREEoczUYWqBoFj94DBn7dNGRzu76WPXy0d86P3LHoJcURoPUeSS48NrPuoGHUw1jFz1ZJisZY5aE7Sbg3+0PfNfb1htgdYDEmjZX4TOPUUtnmDvY/nRNCmlTvHTAOe31gZQ/JlMegjHvjIN+l3FaK9Zo05w/Fn3L1vdJx5ZAxhGYUNeJZ50t+zTaZy65wh9NBiCvWLsJsa/Y
/// P6fZ/t336I88QKXd0ZE6DyjT+EOAw7XSl7T9ykKR+mLbH09TrtHP+Z9uOqe6+SHTN++3sC3RG3R3sc86EIq0/T967N+sg/2EyVofHoiOUHperA/sg/FbzmP326Bk40euqJ448oyXD7zqHPZEAdlmyt84MPt92Q1f9DLhawS7+GvOs5wzLeFXxkGX4bqzfTY31EN0sTNCg/iBkGXhwqqTzGaxjInZVfclaQaTuv0JRYueUTF44/zy7ZzYneFyX67ShMz7mtY0ITAYlBubv2jvZ1Odkn/YyspGeCzdFt+NX97/aXB520Pf87b1s68u4P1A3Of32LnxlUfiXneyLTB0uteG5seVEmNNA81haILG+FyovuB2xtcqAp2DhaRIwNnmUL0T8kBtfEexVFgqN4ixcdSjmU3V28/7UDRxDBA/nV1mdb7ImUf5Z2WHhHP1YAAHn66tbJScxb+Z6tjLv0vti15pGJQ6lpySgZfhqTkPMpnJ4g1I6kAe
/// wsXnUQSW1Ot67QEm6bOrU2a3+RunJSTya3AHbUf4wuNIAhXKlVPPwerioXUchtHp0emGrOAfM6tOp+mjS+xVvbQmSPpqv/3qt8eqy6//ot2vFx68XA9uQh6htxGE6rdeehaOdcDvSzSkDzxWZh1n1jc6xOD6cIic2dfNab2d1ROyBoN/anuTrvIa6Vgvq+vyH8iAI+sIVV/8S2Cdb02DXa9/94Tsgt9ZSwnfnQ9GE8GkeM92XvlxbZkeB2lDvPB26fVfghiHelDSEZBJtCFk9aujv3cbCv5Sx4lmH1l3xqc/gpfQSfFukz+1c9b6Px2cxhJap/0h9KaqHnniiaLOrDMrGaERHYr+Tv7Bzq1P4jzeNq9Z0YknGSTv8qa56hO3mD9H3uyZm+TsA0n2xkwyl+30p7nEaaBpuDpmNNNMgY/UN1Y7rro2KQSQjWgg1Ho0V912/3dk0Ka4kxhRLzai0G2ljmu0g4CCUfaa9e+urrvxNm+qN5d/
/// nUa8CQoelXD6tvOc7zgnZCCembGlR7MlXSsRRaOCDt6unptT+2oeDYWSHzmt7l+PyymboIL1T9QpeeHIl8a+6LDdERb1nX3xZdVzL74gYqOddlSwYGhpBW56qeGt53/IO2wFSRF4jN+RDkPnXUunot4T1r3b6NhQvddsPl4CcfqjPQ6pPSmu4HG6vxnN/aazfBEs9NZthUDa6qG+ybRPco4AN2Th7fHfNldv2nSuL0cQmaljsz/pUDeI13Zue0j+C5tUHaFv+DS1S/Xm39tI/rhHtOpa6PEH9nxWbPV6LUnFTmqi2P6Vx9Sc+hqzgMzmokOUGbt8eNp9ieqcj75RMMpUILspPUYX8T2BWT9IWZx+Aszilln/8pWC+dAVPm7BOW2Ix+jjIDS/js3anRdspi7eIGMGsOHDGy2xk66BtHhg/LAD6dO281WuGECOz/+lQPRaOqudH5A38th29Z66XSHrTjLvA9wFsvVcrluDL/V9qre0q7Ch
/// QTgNNA1XQ6CpQEEOkfQDB9I2LA7JG3YE7jtqHRbloSST6WgWH0OhZWxKwwvxxpxeOrIG5zfHfl3wZzgorxyRoJlmRomZk+CX6je+WWedO4yVizgJnDm8uu3+h1K7UhM7MKrpuHr1Tdv8qJOI+jgulW6FfUg2csDXsP+gi1FBDS3IjthDh/qcTaNP2XhOeryc5St7y2+ILxZqn0p0O2a/7LrpVuhb/HbGBRfnFwDrzjfpqqFfsX90wLzNu90GFdxP+ZTF0WdF0iM377SSzMbC9JRFcohZVCs/Bbe6vqW69uZba1pHAle5LC8GBKpbwY+3xQfhyS4LVMcofXSainSJ0hvpEEg+1vMCbHsWfIaGeHxf65MT6EQqD0eTj+8taDyOWVfKzXVlfrVpGR1NxmkmmSBwwyWX1vR2A9qi9bP1fXZgwEK5vDjjPK6DSqsr7aIwHz9HwdiPFF7paRFlMkO7wV/i+tXLvxdfU3uc7/6XeD4EdFuS16vy
/// 50vto8ZFeCJa8yw4MmEZVP2kIPijQ3fghiKY52U6DXizzgplT2vOQmaaeJEOD8ZpoGm4GgJNDxT8UY8CqVHBTMyP4Rg5Pffq3frkV5/6VhpiZG2HJsOTseVrcuBshSTo6ojI18prp3CL33h5BMMKGURdHJuGuDIxeIdDz/s2hlYMB8+XMkeH5GCJI8Ybla2OOuqCL+htOPTFxAhscMLMnB14/CkjLbUPsda0p4DTcG7uFU/wmNMHEd7ZzfiWQUE7Ms5lLx6qruBbqdvoljpeOmB+p+M99OwRp72c0Yl25UBBbcUWXHe9HXq8yoxIW17jIGVo/W/umJjdzF9+4vom+S6IMvBDSg8Fy+fStL9/fuGXjU6Q4Mfrr9sRPItZF9EzEOvZ3Q1enj/y98BtQ/Xxm29JdDbtpdYvT6d/6YJ+kxx4+VKypC7pldKSew8tC8DQ03qgZLLAZwlafq0POK3QnPoHnVe+9ZeXl3gbwUXYBOed+DsUs96E
/// jpKmXtK85Q4vwbIPG21pgOTF/c8bbyRr6VGTlpWLYbPSe73lzYAy5OUNzAeD4bJvg+8fbb4QGZe8Ke1LdMimQ1aDcBpoGq6GQFNT1mbgJmTWkNUKlTrOzlBkZiQUa5L61bmSMJScY2D85vSnAJNvv/MbLwbRVj4R2AXcBdlf7joMUkcdcMb5H/Sy4Vl0EHK0TVpXKkIzW5JkMCdUNnAAeDb7F9l1VMfEp8e8DgsqpEvqNKgvvnvcpmXS6EGYBQus6SIQcYBeOqWSaL9mOsHo3f54Y1kOUw4VmqFX+pU72MXH5NCtDXmGUY/2ojOHFhD6CDafPPKTumk1qFnpX9Jm+/foE/9oQd45Xk6UzzFeEBoXY7bf0y57dYjiJ/UlnbAg7vAzz0GVQx00dABykp/9AqmH+tSWeAQqLAPM+HZ55G/my34kgjToVZkhe0ubTJ549p+dhjqwMWLqzh2omyGe+yCG3/36XPXeK/8+8QE+5QDflzAUNC0U
/// GQDThggAoTvWJTfonA+MTiiPZsQ9rM10fhoPoFczmOJvtCFsZxz0so12LetQXdTDUijq2VB8tlWQfVdnHUr+3HPbv3ecd5HXjczb9Kw0hB+RLvscXoZLzXGWBE8ydJC9QfBF/vxrbgMacIk/UX8cw0+CQcsgnAaahqsh0KyN2Qz+8JHnUj+ZjW0oeD7lx1XGbXxPeTUES/GIpq3wgfCHzs47MzeCGWtd7mg7geWL/HJeGGnm8W0PPlwbFh2EPw5Lo+KSlpWI6vhn/Hv3NEcdSbSN9GDwbPavqXO6j8ez4oGCieBH7YiMR216Jo9bqo0XX1r96re/NaoUDJQdZ017Tf4r/olJ1tDpcSB0a1YonCjtAGO/yMVE6qn55dfM3p1vsvuSNjoB+Py2Cz7ss9NA3U6HpPdAnZirnnzm+er0be9Pj+kVDK6Z1BMNDz4KmVs69ECBSX7rff/d9xlZepnJyWsS3xfKYGLPV26xNujb2ZTnwUmqK7A8
/// H/RbG4NW6QC2bXbjunV5IjO9w91jMuJ5UNnOw6wT308/4cz3uFzhPfTLXsb3v/BcM7ChL7P6UkwvofNCTbMlSLNmWX5D5SG/mDENW4dPg/jZFbW0g3XE8t3oOGWH36I+aArNjkDYQZcGgvsE8hn6lm6G+PNoXz+aVhJmPVEfF7p/y0Pf9va5ffif2taFJw2o889V5155jZWvGf08s5nthiPnNd8sJgk658NpoGm4mgJNOgpXpBqSYjnk6yheMygQ+GyOXzOTtfQH9lyfy/dRK7NSMvI3rpWykS5pWamYHZ6CnedeYjPuAjDE6LA4cK6zTsBb/hE0RadPeiU4KhxmXqPGtegIrENLj/vfPHOOq4ja3NSZBh/SSe3M4VPR0TfALv/FTm3gu7iY1yV523ymKsvgA5/c44Mvp1WUNdL5KAY8/8K/+CArytNx5WLp2OGDB0B2Xu6lSxsjyK5t3xue5firY0erd9g9zCyiK9g3ulwG27J5dTDU
/// F+vnxsEIpqCdjbmjYxRZib4uYPewHhja9XJN//omjQSbjx46lEgWb0mHznUB1gV6B246C93YpsofX//gK2VGgEb6rRfsslqTHgwDy6MgLuvKNw7+SDpS07l8SHuerz8AYOBk5q3r5vVPBvotyczXMtL3veov1oUc4J9m8cyfsNzDfKb7TrtGnn40LSW6fE0HS1mcvPnc1Kair09siMC6vj4CsCdt2Gscx8VpoGm4GgJNOaMt/okv6U79EKcHXK9CyQLSYwO/uU5X1b2P/NCVyR23HWVUybgs8ETB+9OzstAdRJ2WcfB5swakRpdOKae6AXuwufM1/sAbOuhJGeN4mJykpTlKbsK4Du1ArRd14ws9AQqmtB14nJfXeSO6ScvkER77W6nwGr18J23Snn4fvPZTjSBTMxaCdDn9y3tmnuFfx0LPM39WNuYBnzob6R5HtjNqgLdVoKRm4aLTYRZU7c+6QtnRiXGtTE9Gv+VHKJeZ5wDpUUv/
/// BoFl54s/0KV1pksnO74mFDRAdQ2Nk/5AFr6oo83/kZ353LTZdr+6RkX4qpmn7K+xy85Q9g8J9t54q/O5LHM5kU9vNnx3yzf1g15/RWgqOwAY9NDXyQ/k2c1odwy2lh8j4M2y2LlXL6oJCJ4jSSJC8NEBnyodxbYmI/tpoGm4WgJNDOGnL72Y1AGQMvEN3FKpPN3QMhkWl8KxcyDNWWyDwmxdGJy2CMHgJuMIlxZlJLwx2QA3QE80gvQuDgtgNHz/w4/5zGE8QpqkMY6HogFnpBmNJMd6Vmq2uu+APtdZO1rXAa7Yec2bJvTjTfvaUrSftkTwwyNNgkw2wabzjyZwVBANCmpaC5Kvu+UOn9GD7qV4LD4JjJkVdYBcE89jA+17D/xAjSuZ4SnN4AD10wxDNhb3T4OepUef6It0xvTZN9lPwUtaslLSshAs/ch/+cjlrnchG80ydQTT03dZoBlrBdud7+KhZrx+dUzbSzW78axv84HnfnXO
/// 32IXzxnc84b1ZAZpyI4BGLPR5bWSymHQtmsmNWJmr6xreXDGt2wKCmv+p6BqFPA70y18wlg6pDrw685LOw97a9KxPBgv74ke+QL8ubclsYJDeZ6tajT+UH7YlvR0AvY/DTRXDhMGIYHCpouvkDLhEIrAgHVmh478tFYwgYJJXUuKln5vhFnm/PiSBdPyKJU6FzlCzRZI6frRtJKwaQzqMAk0285TbMvdROvneUHliI965KrR7spwwmo/qCBT+hK/cc6b2NHWPKJXe7zzbPGhzTeg3zU4CS9KWhYHVUes8+OcR8BssA5AWay94qSmtXnwt7XhUxlArRQZDsOQKUfRrA4HZGsm1qfSzmh76GxDbEX68LPPuC5n+4bHsh1QgafqKekYB53n685OFEh/SpoGQbSLfVqjE4xjv7omiV6X+cgYrDVBdjQMoB/9g6/QrRcYJ0M/ZTAALnUZXpdflRoEtb0kQC4X7f20l1HWs3w443s7Zur0X1Rn
/// /rfbUUNxmTzl/afMnuvt1KA893fhSyep/wvFsMc4Z72v2tIcpOHbjx77fUqrrSV/ugC+kXbL30ym7dNA03B1zGhu8m1YiJRcgaQT/qk8lJBgkaAxoA4mIyPKZmnZYaF4dk6QmgOTZkdTGt5qQOiGZoylfHQeDugHPz6kryjAC7/SEcifjPajN3w515dmhEoalgPlENX+kh4PSuw3f+znbVBz1H70gK+Y6HOUAZElEvV5C8JhR12LjeH4ke1p7z3PHWox3qoh6AogHefr0/6LdMjOM1/IvvwdSRfM9lh2gIbMZBlv/POD1vEMmsmAD3VwZ0jgQxkEUdThAVXq0NTZYPvj86fUScoPcLn4v+5AgEZ71SEmHhR1LQZSD21wP4vSJZpHJN3BXwpKM+qS3ST864zP8LssXW7i9yPt5UNDIPwkOsIShyi7WdfSIzw68PhT4j3UJRs/+Phhbe9TO7b5INkC2QzxfZ60+y7f9yXnGfVEsBkyyTbQ
/// pGc5MHRQT3I+Y8TLfzdbPld/Xjh+GOmJgUH4F635n0zbp4Gm4WoINBH4sd++LAPDUNJjMBSOvbR4/B2GI5vLxqh/zeDSLyUgzUtGKJhm6eTEs8Etv6MZhmVHBr2cHzz0pPMggNTDhw5Xdzz4sLEjXM3owPYsMsbskJYbkRmOIdqer5Ge8UdEtNbReSL9AHg7dV5X1IrkSn4CnC3VQASdBOmon3w2b5Hj0CSrhppeawcDNfGGzlg6HeftulYeStegm8/GvsHX90Vb7PcUbLK1kwYQBtb0GHA6H5wVuXPCh3CkY0KG0h/r0NJG3N7Jpg54Ehh6QrkBTpL/Gwxllmhzlt3SyA/+b9x1ZYOYlnnMC2TL9naNy4oyacOk7Edloif5OEqg2bZtvrNPuUtl34MQvX/0x09m3tuRJJ81jYFySX+7LZz5FQTGnwdfshP35+nFsn7+IdLLiaEv2OUfr99QPfjoD512oGwp7dZuA6ND8Ix63PaTHpV0
/// LBSngabhagg0L/zkZ2UcbiSuDw4sLvdOwpAXewD/2T1gCqUKb+idkJ3mKwL2XKOesvOSg8mBy2rA0nH3vAxksOemW6szzuNtzF4eDIOSl2sv2GWGmNeyrgSEHtq+Zr0eC8eWIX+28RynHdnn4Fp6cOTFX/ras4PGK//F/uFwPD+K5hcFpfOONP8n5YyGIW2BVu9YEmklHfW5LmV67XDs6O+r/7D9fa7XcqKp87QAjfN2XSsNQ6dD5wg2OacTpEPw360t8aKND6O8+TnoJO1hp6XhTeKO6/QH9/CYFP0hmNcsmzrZ/vQsBNVhi16vGzqcgOEQ+QHKyT6JdJLlIqJ4MeODemxIpCTejgjX3XiL84BBfV4KMh7WgYjzlzLNh6/fkj5F2QGSLLJezPnb/Sp/+QMtZHzg0NNOZPZhej+BJTQhk9rm+0DpG9pH9kiGbzGz39axkpblQNEjm/wz3jY3KPkA0D42W0cHnvpJWjLRzDIUKMN1J/nJ
/// SbV9GmgaroZA875Hf2Rq0HRssdl05GGronqkZgqmdAFcQz0bxqgy+YoEZbly+UtBlCnlnmRns9gYM7Gke14GsmZ//GZ9SvL5X/xcNliyYhA47wB11vvu+qbVYU7JO7nld0R0WpJfflOSQJM3T3fuucEpD1nL4Uo39t31dc/rb3T6j34ZLUmJdCygqT9LM6Oplxy2VDuu/PvW7Gu2iZKqOm0J6N1/z9fsfuuE08szbjcpyFwN+i1604xjemnPr1lbYvaR35DF95+ImZ/Mm7T7YwaTa74y51t3nbrj/epo3eatbDtG0FLSslCkzNAVp6dF0iBQc3RDBFVCBa75fHEQ/oaNxQtBmjnOPB4M8ru0gHWe5UtYk6Af+jwwSrJTULLZP4HZicZCHDrOVbO7rkzlLr59D0Ns9uFDtCXTCY27b/6qtxd/Hj6r7Z/k70iJD83JFl1jb1ef1TT9l//MgWYOOJcPJU/ksEXLoBLdgpz+/N1fc5kd4Gle
/// tLfFj2GgehQLqN7x2z8NNA1XTKDpX1ahM9Q5Co/yv3lme1IBnJWOOF2myHFS8Skt9tUKmwol87Cok57NVe84/8M1LSgZqBHyCuHPAIRW0UmnyKgUx9Se0cQx3e7Gw7ocB/jVwRA9hxhrMOd7uiEf1stEYLecWMoo5AZtJ65/T/XAowcgOgG6w58em7LXHvdo5kM6ozZmyOzBlec8wTc5pl6aFoLqJNUBg+w7GIHVKbM7UidvNFjVods1eYk+J6u4zvEt2y/08lV21u92/asZIyjcuedzanjiUy2zIeDftaYMk6cHnBaI8+JOv7oWhgpY4fuoELIEVE6UNZkguCtCe+dZwhaoDXO+1pBywmYlt/71jYbBCwUJpBdKK5BnNJcfaU89GA6wE96Mp72X7vtvNX8j4HT9bxznh+d/8YL7GnYBCB8R/UjwcjlRgxyl7ztwoG5ryRCSb935YaefJWLlb53B7gmbmqRtTQNNw5XAhKzM0dHatbUb
/// fCbnshu+nJXGjnQcvNCyZq06gejoOd750Pft1xxcav5tOFCmvpSgTh4agp7JOcLFR43ANKsZ6/hiRAtL2DSZDvT0HVrTGnzqAmSN7EyubL1qd6p3aTu7+RA5hUMKneBThWhA0O1H+8eRF0EISMnXb+YjAskINHtmyBNEsDouQj96F7PSsgnthgDyyDyRUtPWdracN07t/I4Hv+Pla22jlhW4fdU2t/ox2uS6aMGhf+faGNHmxiAg587r/qEuEz9AmeWWOeOhyqHMUaFshcqJsiZFWzeE9nGCN2zo4BNP13TLz06qDVHO8Rdo0i89/eyzTldt+ga7b77DeagPmfBb8aMldTo80CQb/ry2oVTvUuvXfAgdTEDx0Y3aC6em+sH+8aUzJqbI7y9OcbnkRxew7KdtuyDVm2ORkpaF4DTQNFwJTJBAUWo9+uT8DWfp0RWfnCyBzuO2h77n+VEC8oJ0yudevdtzdLCtBqCOfClBRibjKmlq07vS
/// UDxrBsQ9JmYXrr35dv8Nx3Vf7D3YBexezQIqsMGACWAop13vciCy0oAAncgyq982T23wY1KOy/d90fWHfA8ffrqvU+oXXEY2D2Lsb2Idku+Pqc5cSxK4Tju2+IsJ0OJV+z+1oZRHuqCfSSYb2LDrCudPBJmyFfGsrnu1ow2eYk0uRwZUNSP6LH/ogZSFN3gZnEgW6twmN9CUTiLfUaFsgcqJsnRcKoT2cYI39JaXWsJW+9WxcIzyjr9AEzm7DvAvKQM2T6AZv3/rkfzkpvYLpPv4tR4wGwl/Dv/Cn66c/k9PFv2jG4U91+2zvyvMn8dXvB55/GllSH6yM1g5vPBW+mDxpE3PaDgNNA1XBBN8vVg8ppZio+x8waOpLDKgGH1FJ8AxtswgYFTOV7sZGeDZ5jxQVf2iZeUY2mBU0JAfu0J7Cd48+0eg6U7EeMULVvqhKxhHCbzsHm6DtexhGrOCy4nqWGLgoZlB0t86+FjdxlIVSJ669f3p
/// vk3+FZA2SHf6O6q5uXx9dtflDVoWgiXNzcBdMvW3Zwv6Y40pl6DTf7J/ZRbguf/1gpehcnOQmevtvbYaUTPZaicYu1B0Be+YXaRz1XVfYTDW9EWTQZUFfaNC2RaVE2Utre1B+4KDN9fPOZ/RxF9PfllS8OL4DDRdCZIiRL+2+0b5c9/y55OfTjxO2SwgS9k7AWWy33A8FWImX75haXWsLyaf+MAjP1D7wueRTsiWb/KjG/3lXmUY5ZmGYHbXx7z90a9NQkengabhSmCC3vRUR1s70fVb/KWT1AP4EaXhDdo16c1Q8mEMGn2ZUlgAtf+ur3teh6RsQyHlY6YUOtqdfU6vTKTt8f1rdbg2Ai4CkAACzfrxso3++BzfSJD4FOV+4JOfm4ghTgKRmWQnegiC66ZHYJaOvJCgLXKQ80x13Y23+fWAcORN3SHQTteLQ2yDMh6ajqWXc0gjP2YgaQ/lU1FQ5DRxUpOWnakf+eeJV6rP33Of1qqi
/// H1627CV4FMfjAWOLlmgn3+YGsiznh3IGCA3h8VkEcdhLWc/CMfk1o29UKFugcqIsHZcKoX3cQJNlKkG3ZDWpNkQ5x2mgmaDUBT2hIiBU4N7056zXlL8bBl6m/as/Mew+Q08Xg5fLibSPJw0lrdkfz7k/j/cFyJufaHTo+wugvI0XX+484IW12N1iXJwGmoYrgQkode705ChQGl9rlcA7AwPte5cNQQGn3ZMCrbdd+KGkZAZ2jPsGQWTHLNmnkHKktKujI44XqESv8WX9Bm9TtCuCEQyQdpEHZ3KrBdZFpvmhyFPyk8dg0WksNyrgle7gIPwxi9Et0nMgAfBIvdQ3XpLqF4/EJRxQtNuvpR84zNYbOy8cQ4eDJh4Bsa8jbYnZTNEwP9S/8WjJT+IFt8QTw7Y+c96+tjqRNqKHWRcv3f8l8c2ZMhy800r5GeDCr9CpZl0LRZVDuaNC2QaVE2VNirZuCO3jBZrs5fuUl4XeUd6k+ctR5R4/
/// gSZtCh0oV4L4mnv7jeCKtfm3PPTt9AuAzx/e95XA14die6+oWzbQpmepMV7yy4Nq0g52QV9xStvaGb0E4PFbZ0gzwDOXXJbK0eRV1quF4zTQNFwJTEA5stPUkY19gdwBSLG2/t21rgieNz1y17mOnD/3wi89r+4bASxzBCEYbzislY7QGW3n/PR6A/uYyRMXrrv5zsQvOZK3nm9BeScoHVYz4Dp92183aFkORH+0BlGzmozuyzVLDmJB9a8vv+yfXeM+8WHG394UlG9t1rfUUAd76QcO19ykda/jYDi0kAtp2sHoOuop6xQ0OxGuh5w5ee6lf/Hy4EWpx9Lt42tW0wecbgOSJ7w7dXuyAXFkOGTW+cxQ6EjZ6Y6Hsk1kMSqUbVA5UZaOS4XQvqDgreDt1w88VpelGaNJtSHKOf4CzdO3n5/8UmHzFhjFGk21fUv11p0fzLpSRqRDoPRrf27+3PXK+tayT1lWNLv+1sEfGnlF3+OgF4N5
/// SSjyYvt7zCfX0JUNlg8ew1PpTzxVGt/+p4Gm4UpggncUZ+WZFzpHjc6SYbmyzFW/OXbUFal0ThiC7svX9t54u91i99p9nfSszjRX3XvgBzU9rmRmcFHuSkX4hVNgA2SOOMlwTN601L49N361Nhz49Yb1f1n97IWf68cBELxMJ3USyM5u+dDfDMYxnqXBARv5AzFIqYNHO2jRu+UzxwzfuJ8ZTc9igbkfUsDm/5UUWLrxu+Xfe+Nk2k+QJF1mZn6L05f3j31F/YahDx28+rpVDnWQmYB1SpTXDiTjnCOIMy1/X80oP5D4Z2l2FmgwaQgo6yv+//J9/80fx+Xgf1yUrkHXqFA2QeVEWTouFUL7QgPNCGY+mZ6q+IDQdW9SbYhyjr9Akxf68MExceBgzOSToLJj+X2egrBVUe2v4bv7jyGQ5MMRX+h9Q/3ka1L6v3A8OfnzEmjeH6xt+HPaLplLB669+Va1KTJ2gZSf2IGyom+YhI1NA03D
/// lcAEFCXWkjF6QbEIKtvAY3M5KZQfh4IS6EgZvC3KkdmMUcC77FDIuT9Ub9nBJyllYJPb3mTxMIwsjme7Y/LGJLTmmSMJ5wmP/HG78evSfTfWeYDoEGp+GLSDmDiHb2wWTHkEeQR7Ua7Lw+rSwEB0LhbW8k88+MDeTzt9dTsMcUoct1+pbZmQq2b7ZnwBeGRtzARYMp+1HTaO/9W0Tqo/XaMgdEfAzLlvWWKVN8PJDpCyb72arXpCJ45/xCegawrYdW3f3fcZJ9pyGwzhC/75hV+4boQej4/Rca2+QJOlHAx8qLetjq3TASA5XHTdZ1IAb3w1XZ9cG6KcrPPHS6AZTzbC5wSwftt9bwo0afdlN3zBf8uTAx31n+xW9j+/8KKX9TrzRSpz8XUM3aKeHNyp35AcWQb1aW9K0xfqTHLKsuc9jR1XXdvTZ3UFvrakNqtM19NE50JxGmgarhQmgB6UmPPZufczTaVKyR3pO7msI0EBPI1ycbQA
/// NDoZOp2nfvKc3dZ8FDofeA77F8r5t2ask5o2Xwp0vhkfaDs88O1waEgKmqJdG8J5uoMXn/5z/YZuyyHp4rxAmWSBv2+74IMuD17SkmFKJnIUS4PUFcisNG33JkQ77OhOlPWPicZwIpsuvtKzuK7wF05Kp30h8vAiUZuWhWCpzzheZitqOjpASTPzHqds3Gpl5qDreEZsn3aWusd1OpxRIHQ65F5+xGF8zJ3oqJAk66ByoiwdFx9V58mzeiFjVCjp5wtMlBW2F20ZH6Oc4y/Q3LDrssRD+ejgZ/jz0APs/T9tP6/11Hx4oFnrfUq/feeHPGBT4Dcp+QxGb0PdL+kYAfS3Dvz3RJ1B0bb/9fMXUtv1mJv8lDXz4cv894X4TwLNmMii7kk88ZkGmoYrgwlNhfbd/1tKwldRmCmTEwlHpQ2t4z5m01j3wyME76jTvZ2gyHz4mee8PJRYjxBWNjZ5MuMvqDi0GLDhkstlmGbQ5GUGDf7JkMMh
/// peM8zCvlEmk2E3/9uvd4EBdBL+XLaSxNsB7O9pTZbfXj5UYT7EQveagjimAEOnk0Veav2xiH+MGg3NqI373tBR0LQWgIPY7jE2nD/S5AgFyQ6HvPqpzc6R7XaG2V7odcpQu82NcVQuYcPW1/Wn7Qp74FoWiivFGhlK3KibJ0XBqcqTZeogEZUNI0DPTYt6qe//kvvf3opo6S2WQweHH8BZqbLlHgFL45eI88+L0MzF63Nm/r1l1G2aeh+7d+m8fRFmD5MpT+NE0eJT9muzm6HVt78OfeEEP5OWhFn141+/xGQ4/iWK9tR+k6QJnvlvu/57SEH45+YhycBpqGK4EJ0fnzGUpGvDGzFEDyznpDWe6JoApFMIVIj2AINDWzOet7go0CKFv9uMHwtO3vV9kFnSsVy84V/Hi8dWdQG5Ed6kAz5dNyhZnqwj2fUbsdktOpzwcD5bN3aTyGDocXcijrWyxUxyKd8LfNow0FINu3XbDLZ11PNGfs
/// b3Wv1cDFO9DW7K9DmUQ/XEcKsJN4i3YcdH6l2WCOjX0gGxXOD+6EE+0sMYlBxCQc5UpH2gnvQF2TztF2Ppe6IDB94N7SrsZDlYO+jQqlCqicKGtStA1B86/4wvolCyco+cpOIHtkuy19uYxyTT/P0ix+T30LwuDF8Rdohj9v+CaDksbXrYvt7TbpDe34YkMHKL+mB+DP37hOepZtavFQfk/buZ2Y/LJft/SF1hZvt/1phWro3ZwvkYt+Jpc34zO9bV4Ng8j/8OF/svLwJ+r7Q5fGwWmgabgSmIATQ8nY29DXmCBzQxY/h7pobZ1mGCMARMEU3JTOVx0MxwcePZjuHg7Ss6TE1snsu+dezZBOQNEWG6FRhiEe8CZ0aWhhqMzcRTAY9zlP12/wt/ec56lTGAZtQ96591N1eWH4PH4Jg11MpE3hrPyLR03SHA4/c8Tyap0Z90jfpCfvItDscw9AO+u22sEHQQXQmbXpGR2bSw2YjXeYh6Ye
/// yOQ5sOm4ePLaCDSb+sxRa4RPMn9y76OPJa7MDw1bMSw73rddOJlPjIbeQeOokKlbvkfn0P3EM/oMogjCT3QNZiyf+VTxMvzDjL+8KJvsV+eoGLw4/gLNa2+6I1FlkJQBnRWN4mf4QI4M+nkCOArUOpZeOIo9NYOXi4nho+jXVV/Sb9MN/Hmp/5zQR+HPmb0Nebu9J71yfw401xDMC6X9s8WT6hcNk/Cf00DTcKUEmgSQGMnPfvFLE3woPlPk2m6ETlOOlfUYWanAMC6VFdc36WsJo4DXK+fJHp5RX0nrykXRCl/qfcQMyiApHBPtCv7BNxz+nQ894nmj/XFfaYSD4H4L6uMt3VgvU8picdHaZE7p5Nm/lN74P4WEcX75vi95vqApHBp08t38gHa7/aikH9v8OTDxQHOmeuDAY6nKjh15oi/I3HQxLwkowJ+Eo1zpyIAQfY4OR3arpxulLQyCUs9zai7pTf96R0PRBI2jQqZneQJN6uEJ
/// D7ofA614A7pTX255CPr0BEWDAPkg/P400ByGMZMcrA4ZzFhAJR0Inx595Kbqlge/6zm7Qi3HdHzgwA99RnEp/EfYrfr1PGHCJu1Ojv/LbWEgyK4QmgXNbQa53x+3A9GmEeDgoSedliizLHuhOA00DVcKE3g8844LPlArR6kjvkm7KX12UByloP4o1BW1XPcj5WDN4K9e/n0qZTjQ2VBvBBfv8JdcFn9GbhKYDXRLdd2Nt6hBBdAmHJP4VBhPWnZwxvkf9kcTjQ632E6jvN4P+JX9zJCB1oCqniUJdKjL2u1vJ0Jzi1ROeZEBpxT6EcEJ90NrCdHWnjabN45AM+Dg44eatCwAQ589vfZd/s1th1b1XYHPa0a5ZT3HM8ovhK3KR3DcceXuxJWFwJwNoH5Q1zEeRse1Omc0CXbiCVPQ01U98SIbL740vV0cgWbeQmYyGGUdf4FmfCK3DvL9fzPQVN7s13iRrat8HFqZOT1l5i9rGhYTkVf0
/// X6HTtMF3D4EQw9rvelovO8YMaPbrlGf3W/9DHv4FzwaDysbfP2Y6I/2MOCN4u3CcBpqGKybQNAXhcbUL3P8bWALnxubtKM/r177blEofzo8ZIClDXpsZZbmCrHtPdfuDD6TCBkCq0MMqT0vx9t9930QUbbFR7Saow1i3VPu/xqc7EyQe0iycJ849OmT45rzze2er5178uTWdnBFMpVnBAUFmGZQxyozAUnzLTn8x0esy/WDfyUYgmMjmE2Wezzs6yVMz6FmPAvTZNmt3q81+Zv8ov/yNgUxJy1i4dnP1Fxd+uKa7K7SzRxuXgvcrAtNgKfQ6ZMs1dH5kQM4mY/j6m6O/661vQZhlMiqU8lU5UZaOi40nz2zXgN0JmUuzX6kLL4mbB5ihh1ZmL/FRyAeZTXZpUvDi+As0eeGwhsI/s1sGOh+6Tj8QfSB8fr74st5woMzkO5NMLzV/3qZlsVB9V7RD+6t+/cCBmhb5dekcm7fjy9t2IF+u
/// tN9m/9oTA/3B8qR6+KBHs0zRNQ5OA03DpWACQsMYIiCKDiGMgt9xPqwrCcUIRWFhcllWP5RSyNBkdFyf8Uei5/zdXgUG9pcDSUHUIQUOI9OMGFeOvnzMaQ06m3SHQ5NCLjcGbbwpyAsqAdFcgs3ZXYyAtdA6Aqy4F4Pyz/YFHxy6GGnAnL/tTAdC4JoNdXz9graY0dY1lc91Hp/QpvpbuMjPE7ntF+7dX71x3QbP721m0GLlRBmk68wGXgb3R1lDgDKhzTtQoy10RteHO6pwkCD7DAZ0c5Il6XPVoSM/9XKi7DL9WkWHUr7pX1f+xouBYS/iaR60dEPlpYxRoSA9lRNldauffNl2mij7zOWEvkJnBOy7b/5K7TtTeCmf6gkhvPQr6TI5uefo0aPVW7ZfmMrO/hmMOieD0Ybwy8dPoHng8aeCzQV/tb1RyCv8D7IOvbj2pq+2fFjW95Cngx1LW4i6nnrmGS8/6nA/TD3G42wP3XRwEDrN
/// Zk/hi8GTN58rulzPgrZX7Jyv930mzdxa/kQbdIhO6Nni9OtfR0hVwC/1KWWZmdaF4DTQNFwaJsjR5bV7MQrTb+TZ8bHrsl640O2fXbj1wW8X5fRHGZbKoUycJ3VgEAQYz72QRnYtxSudJW6xqdSCrVftdtopt6l0mgWMepcToS94DI2PPmGOKbWN/5HeYCPgMGbyRhCo9EZtEr5AiI6GN7vFK5UtGY+LuaPkmOWdrlubL9p7vYlO7QzgjPW96IDrHRuiF+WKF7rWDClNBxozu4OBMqKd0hGV2VU/aIPsYtZf5MnQrf4AnOTDh1gzmvkV8n4tY1O2Cdy9dOMv26XguygLvoqnzY5xOEoP0JNRodRqlRNlDdctkDpB9CvS3FvqKuu0aQ8+k/OYVcKe66DEbKKkhbQwwk8CGHgqvvLi83uvukY0rGVtfSx/Eg1B32QweHH8BZq0Ax9e8h54286L7XfZeuiC2q5r/2n7+1JOyaksIM69b9Bf
/// gmwTyF17yc7UO5SIJgWzk+v/Qma5LPbSrqGg7+ix35uObkiTGWUZcT9t39zf5ueBmgfeT87VOhrlNesYHaeBpuFSMCFGxggQ5+ZKWpxzvOPB77kjyxovh7Xt6mv7llminKYeGziyRYIbghypP5Kvy86GVEP8lI4RmHECXZQRTpryqTN3MpMwtPERPkYg/+jjh0R+tMOANFtWBK+a94bzn9HoueNMXhOMr1bd9V+710enmt2LYCvXtTAUj6FRcqAN6RGcXV+zfnN6uzjJNsRnbb79gW+7rAgyvSNNAYPam8s+eOgJ3WSQuWbQOOkPlBG6wYJ2zklDK3SqDYORfJTBbHTN/w51t4H2lnXCq7Ke1yI+9ZMjiTsFjMDb3Td/VTP1Sd/ChkbjbdbhUaEkVeVEWd3qzwGB7AY78DacpTb4l3+wBfbCNd9J0MmRdXA/e+EFEZAGcdgUqR722YUION3tGO6+UV/Nkl0oyATjWknj+Bi8yAHI8RRo
/// AomtNUie8DGvfdU9WT/w50AeCiCfIp2OGeTHQfLFXrJ5xlF1ho/p6t8GIT6TskW/5MdyJ6etRaD2Ldb+2eSTj839l3R7U3X42WfSHR2h0O8IYoOefjSPgtNA03CpmBCCQ4ix55cc94xPk2MIoVgcQR5dx2POQUjZHKUY7CmGE037ctlvfLkm7McTBrXDTEbnsxuW1FkCO+FxPm8zQ2uU6XWZk476lhuhQ06A9EZ/QSUaUjsVO8DryCcMp6wjwf8H9mgfyq6zPRksvxnrT196sZYZdHXtDAch5aiNkmfIAOScb5urlemtWP5Suzd+5LLURgWkJ50heqKskOGjhxSct6Hm3wDgJSj0gXLkeMs2D28/NNARQ9PTzzxndS480NSXilTnpPi/2pGdAYDa1jmmjqUL0Nk6T12vsRXxtGlLw1D3oHOjQkmpyomydByOCjCzbkawIBtolGd58NF8BvjJ/8l2RrIpaAj+1UFLEBandoxLHhBY8EP5
/// YWdgSVe/awvH4EX4tOMn0HR/niD4S6LUP8k2pwkM4a3vK2y63vTnTd/e9HHqBwN5GogcWV+LfoTO+YDd7KG7Ds6P0FmWEx9aaEx4GC08deSrd+SR/079lqXBKIfjo4/niYNR4ZSN6aXWRFvQtVCcBpqGS8EEDEJGgTIlRWVbC1NUZpp4uywCPSDSzM4wemmX10aUjGOpFFI6pVE+3zbJS89GVhpYWX8bYk+xqEdKrdmxmCFbboS/PJ4i/avf/ra3LXYeRkgejuGcwmERSBM01W89jwzqgnZctcfLUweTHeBCsTT6oB90B2O/+WOW1F4/8M/QnST61mewEvKM48HHc6fUdLzDgX3baCdlKWAMvo7miLlfYHxMNIxGCbNvd1hZpZzH5/9qx8aa5YbNdwNtyi/fVepN+LJuqLzo8qhQ0hl0qKyu9StAwFag3a9hE7VdhL6ovNO37/RZ4KiXY2AM5BzTwcMBP5dv3X3TbTVtlEub+9lwHCeD
/// wYvjL9Asd6Go9deCx2hnIOcx4I2nSgRtvkdykg3QdxLBg1FP+H9VozRPFUOO+BMds+8saVgoRt/EI3p9QIS605DGaCP1s1+aP7f68a+0LWbiQ490VDkLkX3w9l2XfMzriHLHxWmgabg0TMAJCOugZp0W3PKYhk8+yoiaI5j3XnWtO8fe8poYykYnzzGQ3zjy+6XXfyEVPB+YYkvPaohTtjg54SzNwr7RFBxjkEPTS0wlLcuBamPwOK1JS8SXHWuvU5BRhpHHl3Jufeh7fr/Lo8WT+UATRHJMt9//UJJzdvrjoHfsFgQHvfma5MCebwF1e+2w755v2O95oAItfp+VEbqisjZWB3+c17Wq7eZ4C94Ngtg2irKCnwo4g+7eNrWR+5lJAvQaxcLgb/d92crLnW608bWM3zj4o8SdDC7flB4GzCjJRuKxs8oVb4PXw1D5uHdUKOlUOVFW97rbti89Nd03JCihLM4v3Hu9v8BDpambr6E+swRp
/// P4+E4dGjL1fbr/r7uix9Dlj1gG1d5Hxy+hm8OP4CzRpwss50O5j+Bu/iwxPwnf6UPonz0FW2B8SXhz9rBJqpvPpo8If6q0IK9m7/1nfSl8Zmqz8xPYr+L3xpm95RMXQTn/nH6zdUDz5a+HP/L3puuPubqW7dhz2G3y2vcXzk8NN+zygQ/OFLccG7SbRvGmgaLhUTEJgckByCRtfpBZQ+ys4ozPdHTPkHIWUHludlntN2nN+nGilw/4Ai/ZbwzbNpTzE6G1fAXiVfToSXsZG9t6bVJNpIvuBLOKZI67rOeZtREA5nMDj/7C86Jv7/+03nenntDm6hSPvg9xoefxutIYM/23hO3dRSjoRqp219X+F0c4cXDjKCQcp++Il/9Pu8DEXNnWF2F51S7uDga+hGXBuEwfu3XrBLzIPvo5HgAO28uEJZlNnFdl4LuPdGXrAqwqaUKPVlELDzBToi+2h3sF15nG1tVCipDBpUVre6qdP1nUFxmsUM
/// e+LFCgbPfJ6Wlwhl8wmLint4p0Od4Isqp249X3X6o1arw+vNgTkIHYFxHr+Nh8GL4zPQ7NXVOfdf8Dd8Dbx03xPLg5Lc8Qntu3We/XtdfjGz6df05/0fZbFvdTnRUtK5UAx/Sfl/xtvmqt2PAZDCp3lpM0vv8jpK2WXWI2iaqb5/SP58IRA+tNTbcXAaaBouBRNCCUqHhxHg5K658S5XKR9xIeWkX7xtjgLKwfcvN5AyQcrPAYUMQcYgg3jyyLO14QiSoXGh6VcNuJBosvSl+260OhT4UoeXaee0o03PcmC0E0N0aDRGZhudjHiVeJOukaZ93hmt36KXAII/XaDgFQltQZH3OhsHFSyKXtGX9Wfnnhu81rq9HM1ZHnr2iOXXfWWQELriZSRdod3akDoKEcf8LF+aF9jPTvUEf9vObzB6PruHRzaCUMYepRwKZ+/KXwWSTLvRcDyjvg7UDDS7BpkBbluFDkXZ8Lisa35UPvRtVCgpVTlR
/// Vte6hdBN/cx6EQy+/bwPVR+94SZfV90fkv3DL6UcPM0/Q+7dcfU1Tgv6j62RBglg2zQG7ziC+Kvy94Vj1EPdunb8BJryA1kG6LLejg5+4z+ct+7P5cuRh/zlTPX8i4WM67KSfBOUgWV8ilJZ5vyb4+V7D3wMhTqC1+Mg5chnbbF6PhWVJlDbDz37TMprbU6zq5zTfmHolXzv5+/SntwLgfiyWpQ5Lk4DTcOlYEKtjGYEfDRfCsqj6C1mAL9w4TbXjfC2+R6/r+2oFoZyghd+8rPJisxQXX+lxEPBApcnjvCtbIKeLfVjdNHXr76lRWiIrXt4s5wm4TSaTZtzXmKg4mkO2tSG7KBxKKz1c7BCBnXK8Zv/51/KevCQvrAg3sv4Qa5lJyGnRXoQhtHrXgVROt/sm0G7M0qy1PKLOetAv+xlR/7BOOMv0WQodXE48AIVtKmdKrN73ULy07kFH0cNhAI27LosldkMiF7L2PUzlINAetzUV/jb
/// RX+Fsk/yjwq1JphahlxVb9isytZ12VvYOtd5GZLHgduvvM6/m833o5vrsF+xOpLOR2WNWX3zl6GPfpjz9c9/c91nah+y/CgeZJ6sxkAz64j6yE3VKbOa4cuQBkwmn5jR7C2nieitvpee7k0yzOkhYHnYNi30KT6aMikMHaZvve/AgUSS/LkAf/4VzysbRLfzEgHuzbap9J6b9DWlkfyoZ50zf369lx996rg4DTQNl2pGE+d30pnvLqa9Z6q/uOBDLl8EjNqHSvCmt88eWGBadt4LRRSP45/NnOt1RD1x7ALk1af9UD4pusqdjDKOj+pYeDHF22X/4ihgBCxeRqCpjkn3q3OSg+OcJQ3YaH17H6iDTDt6ushMP3X6jvNSfeEgcpq6cZQhm0GY6ebcdGetAn2ccLma0emwI3X/+/Q5zHCOg5A8zWBktEATJx4zB5QVfM060ltnE+UcWesJ/SM5R4NSDnrsozJ763ltYjvQHJW/gOtd0t2y
/// 7C76JZQ8KGNBYEqtIZT+exxoGAFivb49XXcMsLT8q/2n7fzpUCP/Sh/s10Ov0j/qJEhlb2HaE49Qe9u6HBh0rM5AE5rll+Oa2vGuj1yVKArI35uX7g3nP37otO1/7fcE1PrSAVSb9X/bz/M6KQ+Evu76Pwxn/KMboipaKCB9yqZzPB9xQda7LHPsEgy64vvwXaD2B3YgtfvGO1vlj4fTQNNwaWY0FViGYYQy3Prt70i4JmgXtXkyjtq7y4TMDKjl61fmKKjOQcrIZwqBMDSvtwNAIx1WdgZqx6SUcRwM4yeNgxTBOvjRkAN5yKvgXXTDX4w3d6BZPgcOPZmNcBiQLckvZorhVy5XdckZKMjs6qRcB5IuwP9Yi3rZDXrBK9OoTpeXtyJvv/L6YT2D6zB6oEkZIYMIoIOPZT39MQWaH77CSlPdTVc7HIIHyF987lr38Y/jzmjC2ZARPEW+scNDd/vP9jYqINs/VK9INTzChCY78bQd7eBX
/// /TRO6oPu84OCTV1I95MpMtY3GKT0b44drR545Ec+e3nK7DanX74c/cpB3fJjlkfQtFoCTfFUNsu5/KL6y7xevgmIp13OfBj7VOYPeRTepZT5QJgzH6l9UZ2/Jn/sQctJeuscBSkPffKvohk9JUnQq5dxsb+N2guaFzyT/qkMyTzK4bggm091773pTi87/Pm4OA00DZeCCShIBBUcQ0H87UbJV2AJRux8jYI1ROSN+8ZB1akgh8dHCojkoDt16JaFXEde+IWVJ6UWXeMb2aQweMqMlpNcB18CwurgpXghI9J9GJXe6o72nWDnvs0EfErQLrMEfong3b+yZMfnf/5Lle/rhpr0QouCseHyhZ7gtWQpOn3PSa9REJ0ojz5wTLqvG37i5q+qEAfTigFtbUME1FGf63vrLflBGLLQIEH87l57Bu7ZsOsKp4O3faGpXddrEdlup6EnSbajyFidjnSQfXoJNkl374x0L7IZGYzMuerf0on0o2dn
/// AvdpAo6erpuHr7P86dybHWn/TUcuHT7yrO+Befn1X67ecb75YaObZU7YHLSfuNYCl3UKtmn7pDrj8VH8Fb26tloCzXpLouTDaUPw1V/k6aOn/rKs5+viX5RH2wZxt2TdW+o8YBlfMX1j3T51ht8mgM18Hwclsyef/WluaxxMb9m+LnyadE7tIQ3PgleSu3jyiVs0cTCKjQcwG4pPDj0aF6eBpuFSzWjGeopQUtZghtMEIkj55xde9HtYbDy5jlLGgfKsWb+5+vVvjnldZf3dYM4/yeVKb22Qki+/EtG24O3sxZc6pW3z0hYtCmpEsxwERso1dZwy2uD7ybNb/Y3bLsaqHMHP1A3axeAX5cH7+TZMH4Zh+NKjGX+MoxmdAOqe82UXseSCssMJDULybdolvgUMb3GGvTfeWrdHTnM0vYBWjh5opopHqb8EHr+Lr5NzlKsdY3ZjIZ1OQHRglAdfxeNsR8NR+bhvVOiluvRbBA2ssRSojbIF
/// BzvlSlkG++zee/CA8eVWn8nnjXPslNkp2vSGM9+dtjySrTXbHuepc2d2qW7jcmLIYRUGmsHL5DfCdsHw5wGhw+z7G35jGFIOZfJomo+gAFkfSl3qD14nf9ZHn8EkELphSB8dvB4H8en/YccFqgt6Cr9O/0M95Mn9VLRJ9qeAV31K6OmOKz8xgr1rYiFy7/nKLV6X2tbVvufHaaBpuDSBppQiZs04Z61PD5ikeWwuw1OH3a+80VHOkfJQxtvSPpEeDnXVRcuHEXz+7m8kBRSW6eXCcFDQctGeT9UGpnGrmsjXUfg9eOpOymcaM1+aj0G0OJu3/72MwmjnM2C/XvyEY7rjwYe9rnj0UToK8a6bjL0MaPSXsWaqy6//YqojKjQHZclbHvyul4sOxSOjfuW1MWaCA/q3sD98/4knvYzoJKJOzrvUL3pnq7M/cmUqsWzXaEA7KCuWF4D96nwtITOa4wD9nnyS5IS8YmDRnb/Sc+4ZFUpNiPJU
/// 70z1ptm/8qc0tz30nZRD9AIxw690Kocf7Y+9i3lUGQM39FS+QSh7U2eL315jg8R4XMlb61yPvLmNy4lBx+oLNKEZOchnqY8M/fLHyX3g0R8/6bLoX14TQ1cIEG9+8IFUgqmBT+50CDT55+51rrrt/u8UgwvR2a5vVIS+S/d/Kfk8BX2COf8EdPRP8CfawjXREYMgO6Y9i8k3u6vpzwdD4oFVOzc35x9oCN6G3Y+D00DTcCmYIGU0waVHqPFSDv9CpQD06207L5aQLS9CDqcxLoZDhQ7ewKQuf1w0Uoc+V/365d9Xa9YykotZWinkcmI4KPjcXpsS7WOfO/JG4JPpjk4myorgSL/jcAlYKWUgr+qfktGm3o5HPG9cxzIIBZuqU1jWMwjDyWjkqu/6Pv2MHrNkilQva5qkNzHr0k0+7bVQ6qS7Ad8TlrMzPbP6VLfOg99d8K07P5xKTFCM7LsCDpay1HbJs6zjtYj+YsACeBlAd4x9ZJmO
/// GmSC0kPuGxXc7iDfAoMoh7rRs7AhgkH2GdRXkNIQMzVZZ+izMOyY/z974ef+cs8bztJAjnLCX2ffK1uivna7c57lxrDzTPfqm9GMdPB5Y712PImyBtZbln5mMCofgRmz1wED/XlfmKuOHvut+bgN9XZK0NC/zu6IDvtHWwxqn27/0Fu93BgyVTvU5swjlRPBqH5j943ukHx9YocmZbI+lbQuBKeBpuFSzWhKMWw0vHZLddkNMRulx+WCueqnL/7SFcWnyS0o4divvFFRjjOCKynr8794yevvZmoRdMhl45hpU9dAafExOxwWbENku10HDv2T/x4GJNq3+LF0FpTjAaEF+tqCapPx6uep5cisWXJ5TsoDNEv4Vf83V124d78Hm6rL6kkDDuoVHWVb+iN5QXSCx+ZRa5bhXPUzk2m+J5zTcKTNYwWayTFFBx1tkky668cb15/tbal5Z6i2dYeP7PuKdwKlTrzW8ZYHv1/zcyHwgx9r2Unw
/// U7rYv675UXrAfQsBzAydDJt0XMvX1TjXm7iUjZ0xq6+bsn+rO/AC3Ha5aMjXk+KjFBFs0s6oq93esMfc0S83Bq1ZNqvnZaCsGxFohi/Z7R8bkJhK4AMTDV0YgJRJkIlf52Waek9Nc3Hh1zvBq8rNWs+geRLy/w/b9dGW6Ds8bbqpeED8IF/df/h9Jc/C78o+uQd/3u6r5oOGr7db0JtSBqpv4TgNNA2XakZTjklKwaLfvLg9CdoEfMNd96b8Uq6YGg+ntlCM8spHxfvuudfr7Aqe1f8xnf8dKyMUvH+blxKhgzbRvmv8MWHTfZA+cOhpN0Dyu7GmYK+Lo7jGt4rAGEuDtDqs4C4B2X0HDno5yNPptLRmg6UbZV39sJQhM4aX37C/IY908E9O8hJTvpe6hjsK+OeOiXICyrKHwKOHDlk5W5IcKFM61rV+3SM6gK4Osh/oDXgFmUFLu77jD6O9md+1zlgwVgYczln+GdZcjrT/Q+bodvrV
/// DtpDUPpHuQRiqkv1NGmZDyP/uI/Om23k6Buw+6BR69pZYxnBZvjWWDPth776xdOa3/raNpUrW4s0SBr6YwJgZelX0CEaSa+mR+fB3/DL0Q78eS2tlEBDs062y5oHLSiNftj9OWX1U4N+YPk8qx/nfNlb6IH0o099BYaeiF78ZKabAVLsHpLhFf/PMrouk03QEMs78APY/YaL0zKkDm0kS9gJoEBTdI/E43lwGmgaLtWMppzWpuo0G71gKBKuQfFIi4XGbaWUEfaWOQqGMfioLrWXTYyBXPv84HnsHw6a9L8e+1315hnt6zUJRZwEYlwYJZ/bczpbnQmPWsRXDDHLvAv98ZnQmg/lEQMdAuTjxSJopH7oiM+j9auvHyJDOZSN1eHnflaXW9Z/2tb/mvIj7zxIaZfVRuj4k7Ubim/8jgbPvfhC3Ran08piKcMo7QPJ719ksoa5WaiBIwEbz8Mj2dHK0c/FxNxG6Qd8jE6V68w4BzhLE29j
/// GBF2nU5lOykNsE45yg++auCTfctwTD7I7h8VClJSOVFW1K3O22lLM5zMaj/2+NN+r+6XbrfcgoNfStd5QrDnxjv8q16hv+5bUp1cYwkLdWu5zkrRr+BFltFqCTQzn/Mx1ljzoiHQ1slHHmdwG20ejmEjlHn6trynZrufmA/IFVk5NP15/zoDkYd0VbIJ1JrfTdXhIz9NbUs66v8r73c0iOots4lZNzlS15s3/GUqpRt4naniw8/o4ywqrzuP58NpoGm4VEzAUWFAPpNYu/hwfq/6dD75UCwZmRRMXyGQki4UUZh6FG5BAN9rxUhQqC6QjTEHIhft/bSX272jWTx0o/W2bqruPaB9QsNooB1kHWFJKxvnKz2cfuR24H88mQrkz/jAsebLELBsl+/7kpUlHeAYNOcgYX7MDsQGKtvSY3OnA5BM+OSkPgcaZcYM4/D2US73uF6mNnkbgQ5r+8iRHbnWy6ru/vX1Q/Ki9w8fOlSXOQqQH9r5
/// 9FrmM+Uuv34uNsLz0KssB9k4fM12nje7bjI4y70Gk7vz1JB1z2xpRLkhU/gadQQdgzHfPyqUlKmcKEvHsI+YgcSHrlm/ufrTmXOro8d+b3dphqhs43y261ft3+0PfDc9gRD9lJt1SbPFUe/KwExb0Lx6ZjSFwU/8GPxFnrxo2A+a6wgHY/BDS2oky7ynZjeInL7czU5Y/ta1/tJOtNl6oskGRe7PazpSPGDImk3ydLEvypd+xjXomqnLGgotH88Z8YLKbda1EJwGmoZLwQQZkITvMzZJmPon5aKDZPo78iNocBKCBkWD0nRKfKXoo/u+0E0TLY+yKcACHnj0oL/lFh36ciI8ig6WlwHccFvtItDMRtvsNKKc+ZDy8x5sCZJxtqqZFzRKzDPU8E0zI/3rLFHt0wgfB1cHgXXlcyZLc3xWvtqojrDkyyAkH/SUjemtYwBYnpKfpa6V6fkw2gfNX7jnm52qbIDdQADFffGSQC57uHyPBywD
/// zdAprtH+WAneXBMuaHe2cV4et1+pNdnSE+lTHLvzV/koY1QoKVQ5UVY+Zj2XjcWazctu+LLd9UoyV3Q6+zCA9gVfuFzWxZKXUzae48tRWN+Xg/jNbrs+KZAG8MuPIYfVF2iGj9Ab51mX4S32jFCyXOSXDj7xdNLBaPf8qPJiIGL6Yjpy0d74HPMI4Pk1VHvyyLOJ7uH1sxwAWqUr4R81GL7ihi/VZQJ+tH98IIDfYyZ9GFI+7SrLppwodyD0yUQ5XfunYTgNNA2XggkIC8FrC5nC0aEIacE6+7hFJ4GQdU90GijbwlHlac1R3RGZ8p+64/2iYwi0OyMHu3Ty5nOtfBx7s71LjbRPBkagKefaprh8S1E8yAbfLq+N5H/TpnN9T7MmpGCsAxC4sRE/s8ls+kyQzuyy5DsYS1oPPVtu0i4HBbJHXB6YSO6ko3MchKETUbAO3dvGDdCIjkd7KFN1D+dv0Ez+j37u83WZXaEOigx/8GPtr8c2
/// UNDUpf7jASVrdQ7qgOVzeEN2Plb2teskdvQ1Zm/evnOXl6Uy8/KPqDdoGIw5/6hQUqlyoiwdXX/fKZlHXQSatJ3fDj33nNrVaG7u3GtIeRR46jOXT5q9vX7du+p2uo2Zz3ObnNA+ipNB8YJj0LSa1mhCMzrmfsN8o/z0bPXI4SdNFGlpRwHZnw/3b6EnUQ/luj8/drSlE/MAOsGh8DPoh39Ypeb7/Oj6afWiO6DsU7TgzwEv0+uRAUKf2ie7G4Rhjxwle9HUnqkcBqU/EF/l09v1jYrTQNNwaWY0N/rjAPbgCoVySE5dm7RbIOhbbOTOGUXTKGg8lBGH4qRA09IcGbWPCq6PpsTscdZ8+WS5UPzCKA4cPuzsbXcj3z+kNZrkk+GHg4jjADyTDmuzvwQVxst/TzWrmR8s3767vun1Sh7Suy6OJGg8ddv7VJTXSQulQLE4nbIol2AjRtGS9TCUkwo/UzvUrm0ziPVG0S45ydDnfnVmFI3W
/// RsvP1lsOBZ+7Anm5jbJ8v9EOdR8fmDuEsHPSyKC9m0BA2ak05Gxpfgvd4ifkgn4IVT5pLZHoyuOgafKBpujRekktC9LAGho5zlxyhQpBOaxZuW1+ktoL2HnSuwCCTl+jau3U4MV4zK4U8OQs8SS3cTkx8yJsfjUFmpKZ0qFrnM/XhnuTz+tfXhNDZ0NfmHChPt8juSnuecHtJeWNGfD9d3/Dy2nX10b1N/lcdMxUp27NEz21/hnIn6e+usNEDmVTR/AsdLJj03ry0VbxaDL+cxpoGi5VoMnLM+zBFRCKy9E3afdRXAg2DG8ygSaIIw4FjCPBiD9CGAalJopsh0M/4XFwOLjlQ/hEm+DhU888k6gLkPHuuenW3O50j9Jd6CfPFp+RbrGiyZtBYPkYUDALIjpEc//6epG8rPOMWSbaFVXv3PO5+jFHu/Pv4giDf3w9SSCejQJvO/8SLyfq46hHVV31QzSg73Lj1kwCAOykE2SaWQjPm8ev
/// lUDTO5kU9KhDEy9p/19deU3iSkd+2s/KwYwmb5yz5ET6qvraHVB3+XKEvlGhpFjlRFk60v6gMdKhh2ELvr9mKihbjnQm2kuCtJ97OudkiygGnNGpe93mP+Nx7/KjeMFROrC6Ak2O6CzpkB3tYEZZOptkRdr+8OfNMuZHfKPbRpqJjkDT95P2UgeD8mT9CFp8gmgd71D0r7fEsMtIQ8/H9rGsI+tg0MJSlfLJxDDMZec+hePhZ58Zbu8GkUNZRU/M1kZ54+A00DRcCiag3Bdd97kkUTlw0uHG2N4AwwZnPnyFbyoLxjUCnLHxkqu8TDa09vJ3XeHXd1ydO6KBIFIdYkaAFrCnY782LyW687AABYNz1iZnVDqo3bfcWgftOJmykyrL6ofcx4w0R17a8i8qJRZkXgwAI+MP5LMjToQyfZ9UM+SgYxDSLvId/glvm0troo18Uk0OgRGtRs7ixQafbaaOfmWWGA4td0xqE/Xo32Ag+N2460or
/// Izs7fzHJOmI5weEI7dxDZxABr1fdmmGaH8Rfjug6NHTh7fGBkj9p76STHtB+tnsCSi7273yQeSl3DWj4TKPrfpItSLmUL73pymPl475RoaQ2aFBZucyYdc0Bpo7Svxnzdfq8KZ+rbBRIm9GxxrUSxBOA9dEMOFW26u4aDCw+ih6OavPqCjR93av756xf6HSIJWYRHewi/px7Q86DkPLcJ5rs8Ltr1mqgwAw1G/YPB9kGtGTbkV7wVap+dTZwbexOIN0N+cRj8ygfOHr0Zf9N/osnacPbl3U9B4ak48XKUSB9PNnlL58SerVwnAaahpNhggkjOTrSCmTknBE4SnbfY4+5ALM/yw5sZYDRk4irabRLUrsUEvPPsH7kZKeX7dvvPAiHzowdztgdvgca4ytqFxSftQ9jhsxj3pwNoyHvKHRpBKwOxTeEN2g7nE5gt9z54ENuwOFIKZNjvGxAXfl36RHt0tvmRSeZjuwXWNK6MDSne+Zm/6xb
/// b3u6tS86puBr2EDwfDBKdt5+c/6jfzJRNMISxHL5PgIC4+NZzDZ1l/NqRQ0sxEPOpVd2bp33vQc7LI0xnmnAVMpab2rz6L1d38JQckAnRoVQeUDlRFndZBu2y3q/GNzXOtM36G6BZxF/dthAMTpz+TrVgQyop6ap9n3daBwfo54cyKyeQLPpk6XH8rnzSQcfEe0chjn4UtplZWnW8F5z411eHvUQZDXrK+1BeerfLYGF3PHQg05v+LrQtfDd0a7wb0ET2xx6WanQKDe2EmONcd5xptmeNkadIHWpD5nVtmZRcAdwU/D8NlhP8i9pXihOA03DSQWa2cnLSKRoOhIkhEIxepbsTYktofQyQ9BhJDHzRjpmzByKJFB3SnbxyIu/9CBbbZZSyvAUvDT5tHiIsVFfs+PIjmKcQBP0/NY+HARALZ06KaDIRuB+yuy5vl0MDk/6Ip7FY2/Rp3qlR7w9m79tXtb6jgs+2KBzYZgc06GnU6mjw+yu
/// ZqApJ9uvrn6Y5UIH/fadH/IyXRM7sriEWx7ggwJhk6PJeTVi1pWwP81us7NEly3MGrZuEAPJXx172Tutsq6FY9aLUaFUAZUTZY1C20y17cqPqzDDeMLQFeIpBsuf3nrBJc7f+pGs8x9/l/WNQY7efB+FxnEw6ll9gSY8RGfhVclPsITS3+LPw2f2K7ONKrcIZq0O6vQ9kkuIKvxoHsiOZb11yq8r2GRZHOUH7+Mlz5CD7FL94R9bcMuyHu0e0gtn7LyoeBIkfpTt6IfRpmhjPNGIN/a7QJnNn1CZ/OFvl/qH4TTQNJwEE1AkFDcLRUYSisYWG6/Gl4BMoo0nNR0VYbEhHgFHJ+NeNV3jvKRX6ZTPkDfmZRQ4X9bGSeEnoaTdUQYGZMeQ6DcYJ9CMtT0+a20dSGMD7MIJzQtFFvKzVdKa9eJT1FHyirrciSaeck7AwH7qFKW5prnq+Rf+pVHGQlGOcFP18OGFBZq0iZkeygi+Sgea7Zof
/// QxbSGbaN+dkvfpkK16ETpLyxB12z7OMXpQPa1gf+0XYGMSfPbBdDOoCvUDCs9dl07baH9AWwfnWOjpID5Y0KpQqonCirm2ylg8r73AvoVfYLo0D4RvasPWV2W12+7DVmM1UPdfqMugUNkW9xMXix+gJNArB6cFT7Cz4XuSFR0wsRaLbL6o8hF8mJazyqh0/4msNH0q4EDimBLaS06x///FrzHLxwz6e8LI8DnKYsA9oTEwiyTf3G1wFzMaoHnxc67fpT82Iwhv8GuZ9z6uAF2FFB9j/nS+zUpvH1dxpoGk6CCaEcgXl0pkd3HiRIjrVyCmrtXnYoFb4mz84jnTsgHXP+uWr/1+5LCgkfFJSFwpd8WVyc8fWiTcj8HTfQDAeF8fmempSdGdUJYp0RHYD41HQochBNJ0W93i6rS9WlNtkJX8GJvOOhAttPxlc4wCTvWu5D4BM3f9XpDblDV1fa6ryuL0bLmVv8BTna2q32RKdnllxiJm5p
/// dXB5keUXoacEmgQLpQ3MC8G64J/DXLX16j09dSwcw/aWPtCkTtdJszm9/FgsQekC5vNeYUYTPvl9r1QsWaE8yo8nE/L7Ssf1ko7FxeBF9h+raUZTfkN9SBzfesGuHv8T5/hzAvng9SBELrKLrDu+FZYNArCZD+z9tJcJlGtBvaaoPs0O4ZG4FJcBZg7rpU910JxnW8vgE78U3zbPhTBz+ofUR23x4DfzoX+bmpjtoKzr83d/I5U/HGo+pwP+vFnHwnEaaBpOKtAMZ1M7tWQ4zPahSAiwKcw5/4wWa/5QsOXEPTfd7l8sihF7Ii8l6kMPhNE998JLdccu56+2d+0IxsUwyLM/clXmsUPuZGlnGCR0jUKbys+O4k2btvkjcOdAyxEOgpq/hiynILDCQake0VTShdPg9/qxubdHZQBsjxFtGg8VoKAHQLSoa9vIt/vmO5LMVR5pOb12Xb3IPbTb9xi1I/f+JwuuKbcLBWWe6Ch40U28nAR/
/// VjaW+qkOlWubfSASg8dB4Pyzf5K3gvtjL/8ulTOpQF1ygMZRoZSvyomyusk259O97IerNuegYhAED2tzSEdepETH4T/+H+ScNopvo/mZ8TC3UTa4utZoRnAW+kb6XZf035oLGGWNJiiZ6ClRfBVOA4GZ6uTZc7I/D1n7fwNLtP1g9HuBwH/c/j6Xddgi5ZOm3tCB0As+rhF+3O9PhbAsixeHItAEVV5ve0osbTTq4MjnmEeGNJGEP1fZ3Xz4IJwGmoaTYUIo1kZfl/MnhigzQcIX7r6vViaOEqOc+RkXXNxQkuVCNwSj42e/eCkpWgpmDNtG5pfTb44Oc9W2q/e4Uvqbcmsx5Pwor1+dk0Xxf749A4FxAs3yPtJ0JjxW9HVbTfb0hTKLB0J2gSAgl1nS1DtoeerITzO7/d9c+tKQOeg6UF04yjHN9H0Jpy3/+eDar+Tto0KnI+gZhn4fb8nX+aU3XTvKoDACJYCBU/CzXd/xiOKdbE66
/// lL6h3BVML+Fe8JDvfVNGDCDHR5VDmaNCqYEqJ8rqRlvoAXrJLJjruRcqXRkKzhglOaa+uDr6m995cIAN4hNysCl7GmWLmvExeLE6A82gWXLSbODZF1+WqGkCOoo/7zqQRSaUT7nh62Kpm843VV+9/9tWcgoyTb4hbq6FD6x9IYciyT+nJ3xxqoPys+5p0oB0PDb3slMKW1Ve6av0JmQ6HL18u8f1MOldTBx0gbptBqTUX5ZyWThOA03DSTBBCkVZ+lLEG12xzdGs31D96tjvJL3SqZkkWSukR+t6/LKc6GsQDa+8/kuuZIzqdOyFUiHjcQJt49vAlBUGEkbcrmsxMAyUWaz5YJxAU05Kn50L57b1qt0aBfdjUl/I8oeHz5v8M5/kHKApzlWnFquTv67GWT5XXbTnU55vEoEmdCC33YyAKT/JuHyMNAz23sh2I6J/dPmbDXigGW3X/SxR6MxewDKH62b/PYKkpdLB5UTn9VniHefI8pRN
/// 54zGOwN4xz3gfzS9kw5OqpMI21v6QDN8UrxkwVdX8Mve1tKfDQIWSKcIE6vwlP3jsematfj9HGzCs6iT8340TR6DF6sz0Ay/Kr6JhxsvvjRRIyhlxWCh66NzeEK+WCtJHfBIfBLfWGPeowkm8rjW0JO630tgaZ7qeT1mhzHYCD2QD5KP7Xn5KAEfP4Ge3B75rm7tE2beqb7Y2mxUwA/svdn4a3WHLo2D00DTcBJMQIHzdgRSFhzP1iv3FApZBJoG++75huVFyZcffc9Fo53OxYNMjMrpLiwNSAbG73rEQF79dPTY71NZYcCgDLzk1WJgBCYsYJ4Pxg005QRkyI7Gs+eZAe4C8Eis83+xjcY7zt/lI2vKE58yTbH9xt/u+wp3GTT1509n9cnJyXRk4sc1jICdyIBmnYNA2ywF/SH3bjyu18BaIMB9pNWumepnL7yQahgAHgAYrY0J5jnT5/N76jpeUZ0MfNe6cDbxb8pyCNR5GTR+24P0
/// +MZ3v/pGR5WDHY0KZTNUTpTVlTYFgaS5h4mAWx76djN4GASWjZyeu06EbcxVu79yjweb8Ar9RXebfnApMHix+gJNeCaaWbeux9rIa9Ml/Wc0gctv+EIt02Eof599bPhxnVueNMj1J3oG3relNy994OrytkOhL6Sa+jPnH61wXfO2NHU0jpdd/xWV3wKWY8U9apfSNY1DUDyMe+QLev15B0j5b37gO9Wa9V0D+cE4DTQNJ8EEBBwdPukQun+yMEEO3oA5X+is7/FKOZYToQFDRMFjOxRIlcH5aSe46JOfqmcNYp1JjLIWE4Pf19x057z0huMMY4S2cMjD0I0tOaPynuu/xrrWEvQ+OOC8a/sTz0xwrpnC2x98ML1QIOdH2o+JRup6+hk29XV3Vx/5/BoBBbxtBL8LxKivOSPc6wwHwYFD/9QoS3Lv9hlI8tRySfrDNd46vXDvfitdeii+xeAG+oIvibX8Ix9pAz6EEI6SMiMdcuTYhb6V
/// jtKBktcz/hk7h4IfJfQGWVnezLo4fwyzvYyLWadHhZJSlRNldacteMM92E5+wU66Bb7iiaRXiT+xgfUweNsFH076hV/R9jb+wkmidfEx6ll9gSaIXCRP+UDawTrB+WCy9FndVu/1X2u/PJNtYhCEpvBUL+R+4llnJ9+u8jlynSctZbnce++BH3n/4k/NLC8Dlhhod/HvkScGmaTxbawhFm3DoZ3v4Sf+0dqioH9cnAaahpNgQhhGCBlkgTHCawpQCsYsjSuU153vWU4ULWzF9AWn0cGI76KokedbjzyWHIY6lHC87bomjwpoBz0qGDfQ5L6YqQjDPm3rf02lI1m4EEEQPEkdWEB67Eaw5F2XnfL4LmiPxzqZJr1Fn27LRVli+8c+7o+NQmbjYnTCBJo5AOnmZAMeefzJRlkln3UchL0DEs0OKdhkpiGT1XpBqHEiiEt8eSPKDdkFz5BpyLWsd3WiBrcxaD1587mJA/NDD9vsAjp7x/3f
/// N55oUNVNdl1RZSGDUaGkVeVEWd3pk/ylZ2vWb/a9DpmFj5krt1cgDM7AbbqsfB4gy+Fnn3f+y4YTfQQaE+qsh2PwYnUGmrF0yJfReBsGP/qdNH3oh++RjDANNbwYzQf++uXfu/yhv6EHdsQ+T3svH93IIJ82V22/6hN12zkySQM93W1Q5Qfv5Nc2VTO7Pur1dIGSLoAlIUF3/zq74zTQNJwUE7KCqQOrt8BxaB75GL8Uy/Kz11qf8pYSUcpwTmw+m2zNye02nie/Zbab3rx5q29GTlkYSzdDGRdToHlzXvzcnrEZJ9AkCMTo1R5QZTDj4y9cWFVlbXXV5fU6PeczJ06fsWybjTqhQwYtnVB9G6sr/O1E3eP/7RbemOXtbH7vSv9wVHv49m8QDH1tHs4H5GJvUelR4g0B3tpoU786S8yDE86j/QSbHPlsJzxwciLQtH+iTrwBOCeQ13UDSzA7R5nIT45Ts8DYnfjeDHBXI6pjke7QzovY
/// roUAqg1FENWWLefo1lt2nFfzBN5H8Do+qhx4PiqUlKqcKKsbbfBnjQWXvKDp91j7oINdG0qoWVJX2IeH84Hdc91XihdUfGZe+tamZ3EweLH6As3wfZlXsnteZpnPB02aPup2f56e6MXEQTdQboDtsyiLQQYDthwwbqr+dj9PZwyKJh09etR+k92SB50By/u6YPAujtw76J2FYcBX4rra1zCcBpqGk5nRDKeiI5uWs3WRP+oLpTInH+oYG5yjDKMo02IhNHjAmx5b8tgtm04HsKzeOnMK/pKKL9LWqGxSyjoIqQNkO4dhjinT0z3QRK4xIOAeRt88piC987p/sNKLYCfqhyeWho8NmlKgxDUQXouOoEf0Ud+hnzzreb18yrMUa8viG+bk1z3jour07UQKUoEG7QOA75NDCx1EdByUGY5vEMpusmM96YwZDwxIR/u+f9g6zSAFXhhdMTPM5TadmqGaq2594PtOE+U4LTyiOotdIWR/kwuk
/// lhdpmy/FsSA9OstSLwPm5vrrKnmZQQp+c5ys/aocyh0VSsmqnCirO23hm0MP1LZNlc9qWtu9DvvnetPLtsHg9wnefv7fWMCyxX0pa6yDn4uPwYvs11bTjKb8hPpQzj3Q/MotiZpemCx9wbMt/lKOKwAyTUucRoH7Hz3ofoXy0Df8C7pGPYePPKtMVnb0r6yHxp+7vzMe0O6gizK6xwds25RtA/RdWEIxO0L4hIOPH27QMg5OA03DSTABRYr1lhjKqVvPd/nWMi5O+AoBeSJQ6Ffe0mM5oooNyZMx1I0YACkPZunbNKzNCr8UbYwOZP9dXxchBYThjBNoIt86WLEgRe3b4jLkDdbMoqKHKmaPetiYfvPP4BnwSUqvw8r3Okw/9G3zADk+4G0XfDA5ZTnnUTrb+TDK+y/FjCbQDt4GAbKPToI2hJPqQh/3oX9xfwN9VnSTLyP4zbFf1w5agaQnlA5Sa5KVk88o8ig5yoGe7LxJT8aZLieK
/// b9Jn9Dz0peZRH2jKdq766Yt8ZQpeaD9TT6/dfNy8DBR2FUFA2DSPS3917GiqA36JZwQZoWtdQOzUtmPUg59Q4BC6ttgYvMh+bbXNaJIOOXG81QcB/WGS9KFHLjND7ZFskkegHcXv2fhnyNOqN2/eLv0q1kz6Z6hr3YqC56ozdn7If49AO2gKnnT1n1nuEazPVO/Cn3eAfn4+lnWprN46R8FpoGk4KSaUs0xsEwTU4ksJBHr5vi9Zfgmwu6NcbMxGTprAh2/6hmF0hWgvm9eKF0vVPtXDJxT7GQ0wTqBZyorOKZwIj0aY2WRUKgh+tfgW8tdBCT9RPjZkVwdoo9LUEfJWZdPX8clJtkRCZ7WNlgY2kwiUkkNZd3am1fmYHO4wSHRCC+VEwELZo/BY61RzMJB/V3B4+fXa6LimKAXs/j+eGPgffDXUDz5Tp5fTNDigbN48hk7RWta1+jDrAnuP8tk56VVwChmSClmWMo00AxiVlX3TmvWT
/// Wwdc6sOokKldWKBJvmhXXNMgTfv98tGMshINABP3ysoHgeVT/jnfUSTseDL22QWDF9mvra5AU2nxTD5g0CdxJ0kfMsJ+SFMveyQ7INMOs5qhImFL+HPaEJ9jZgLhihuICeSTpCdV9fyLLyZZIbMNyUeJBo70M1muw7DZn6Hv9OOlrY8C3NUsf+E4DTQNJ8GEUsAobGyT4P1gIWeSzHZmpWg6v+XCcIbZcae3Vq0Bo6ipK7X9xdu+bee+eBid7PyOdZxAk3y5HXb/WjlCHAjOYNvV17b4pI6+DeRpGL7YVc9ye9nUYU6H7ynrd5XFkU3eqdf380xbqZR0LhTV6erYhP7t6A9zfj/liceirwuP1aZmkAlGOgeuW6rvP3FITDMoOOkQ53Uomvj3m6O/q9606RwvH/uk3DWs2UuOfbUj7YE//bb3anc05TkpulH2JJS8FHgH3zlXZzcJlG5T7qhQtkDlRFk6DkPknnVcNsOMo7aj2+IvbvKd
/// aeophjGjQ3HrzCVXeJ1B6+Jj1LP6As2yn0D/8AW0geVn88Fk6WvKaOvfyZ9LnN19oOe3f7xZTjuYhAjd40lf/B5H9+dJJ/Hnrp9naX16Kc+Stn6Y9Vt8jDXu+LrRYa62AclkfP2dBpqGkwo0cVosAGabC4kpKWgolp0/9+ILUiZTCiniZAQ5LkJT0IXjhSbWWibCh0MrH0GStnagbYvfPtG9yV9IEaTgrKBrnEDTjdZnwMyI7aj6MGo9GkGO7CTg1fHPMHfoRddVJ7iWr5P2T1J6fTPVqTu0SbsyhKObq07f9tfKsza9oe48btK6MFTwRefbjEtGCzTD0YnHeW3SMJT9yA65P9uFHm3nctlse1t19OjLXh8AuWKVnTdoB4L+V6rdN97p98cbnapX5Za0rEYMfrPFlM/GOVNoe7S/F9Avgswf/PhQKkNvRwdvInidHH9kd8hgVCjFGnqhsnQchmqT6VJaBgAN2YbVzh1XWXDhyp+/g+46
/// 1QGCvppOG6AfefGXvqymTcviYfBi9QWaCqyS7ZsPincFnP5S+AVMkr6s41pTie7HHsnzVN8EyxS6Qn70iKU+0Zeeuv0C/02Fye+T5/Qd5Mk6rO2wwhZFR8hyOCJ3laX7SM+oypEg9Uumwxr8Szbj4DTQNJzYjKYv/p6pbn/g++7A2299olh8Fo9HKtxDYBrOvF3e0qOUGvpdYc1ATp7d2l1JferWE/4ff03ATVn9go1Jd+7wH9SekwBvdhvIYvhXbdx1pbUxjEbOmPZ2N+T5kfbs/9o3vd0eQMaRuoM1Q2D/V+/1snAQ9RZTXo6A4D2Mvg4GrOOUzHppWghSd925pjZ0BwXL0EY56BN8mQx/c6DPiP8dF3xQNlbSV/OZa/l6yIBZzVN3/HWtAzh1dWzjO9KlQB9YGF/Fiy2JzyzdEP3br/p7Z4GCJW+4WJKO3n34hQSW5utkvn61VdfioDpClpwkajqDt8n/5ny2X1vhqNxJ+BKVNVPd
/// 99hjqtBVJs/sdAHPmbLroI3vKTtkFMf4RCEynIwvzH5MeiIbfPjQoRFakIF72Czdn9ykchcTGz7DAk14Qv+YX2rr1Rhm76PN46L3faZTwUeQ5Q8BtU31gR57Ayyx/56vpbJmfMlPWQJpnmJNausr6qAu6ZJ8BNf4bRQIGv1ofTrBcu4zF47TQNNwEkzwDsuEy9o5/+SkSap2joWSvtdGzXn0xnElBJmgFFVvU8uJE8CUhj4IvIW5mQ777+Zb0xhxtFdll/W2z8dBnEUmoQhAEjACDuMLw6Td3Ncua3Sc0R5sBi5uw1HfWORlDNch4wlOqAR06IN7Pu2/lfqTnUs/mkZHeFHybpRAk7zwOF6Ko4NaM6E1fiEvBZt6JOQvrIXA4bd3RU16/ec0COL/vY/80MuBJi8nzSCsdAxfUestAYANMsTbGR8Usn63lh2NVbOVDF/kryroGlsZ+e4XXnZvnZNE6anqYW0sdELDqMA9f7FzVwrUJMd2
/// XQvBCNrh47G0Nl30GT/nIbT060Dk57qnzf7xANgtA3f6Bma4kGHYrMuyRctCEN6WvCBN2ewE0RWc5nrCoKr+6sprUtmT4fEwzP5Mg0oCzvz5iyyG4DtLEybFP2HuE8A/3/bXXmnmSC+UOiC5S184xicpKTsem+f8c9XfXPcZnzGcRBtq/5iWH6kt0rOFgNNpf+xCMgn5TwNNw4kEmmkUduEnP21iCmVLUCeq6s0zW1MwZ8aUpqUn5SzHQykqmxhn5Z+pPn/XvYnyweBNTO1UgDXnjx5C4fvXOUFMs8mZhoLpCeSYjJb0WAZ5wf++5Y2MeonH11UCRXDTDRQg8P3007efbzcqSJXzUjnoDnXJqWRHMglHAIajLwPkduA2DNi3LXirMjmOL/9oq/TSkEDLAsULr8XegOb3WzLfRb+CUE9UO678hJeBnkfQvtKR9nvwbvTmJSkaDMKT/V+7T432RtLmaDdgaddHddukWHpwxgW7JqY7wzAC
/// Ynj+9vMudjocisBmMGQ9ZMsWDTjQgcnoV/hv0uXegzX/Cih9S6T5r3TBdz991Xc9OMMCegZe4eudfpbdJD0uaVk4Jj4k/+a2XBMzHBqhvyV333i7y4vyeuuaLIafQM/ztbRePJHVHrhHoDkJHY4yQp/CF7LWsgv7aj2ARksyoOOIPy/fNg8g9ymzO6yeyfig6Mcy/+QrSC8YjEhmjaOOcXAaaBpOhAlmjGvWb64ePaQRZHRsjkkJCbxQ3jAolKx8BLScGIYlIwvnN1N9YM/1TnsXoJ1qKo+ccApzbmj968s8n4SjANnKIXgNuAT05xBfX0BO4aAi2O9X3ihIeSCzbCUNDq3T/mCOyPLxCTPeWHS6/T49vuPFLPbmI7BwGRUd42RQjulN5vycFgdqbjrI+cDbbH8f3ffFpEfSqfI4DlImnbOn14ZDVZDlmzpDgxPCP4GSueMPfTj68rHqLTvenzp5eJg7txWN2ChBJo/bjHbXX6OdtYWp
/// dd6+sD3OXX7+gx1MRp604OfCvde7vMuOfTEROYWPmUlbaPXYyQCIIINbZi++1Nve1rNxkLLgBfykvPj0Yc2zlJ4P6l/6Bs5zPqP1pzPneh2q0+o5I3R4fBkEf5GpZmcVNHUP5AVJi7xBe2++zfncr77FQOdDkiW0v/WCS2padEi2nHRh25UfT/dOQodVBjSEXTAQ+AAfPkj1AoN0QPvTljTqk5SX7tcONFlJqureR/mCngaKk/Q/0iXrJyyuCH8+ip0BZX76orCzcXAaaBpOggk8gmNNojt5l1OhnJ6e8xdVyBtOTc5gfCc5KWx2ugo4WdfYFaJTC+eMsd354Hc0crcyKW+xHBe0v/eqaxIdAj9Cj5/ZCP3m25MhRltF0yQM3Y3RnOQps+zBJvB6uzr6lI1lFzw2r++yBHZPMAHN6giD5vi29fj0Ryd19i7twShfk3V4GIRz2nfX153HQaOc1Pj01brpszUxUEOf1Clo2yPokP2hi3WQ
/// xbnIM7DA3S4//txzfh9lL5ZOThat42MT8MQDrjGDftqO8/0ReHylO2xP/5BjaKOAx8I++DO+oUvwIGxhMbHUh21/9/HyfZtOoOboDtYvMzso3YrOtbfOUTCC1XgJg/Qd92sPx3ZHHeft623gVwVuyOHV6o4Hv+dlQy+0R5AxCf0L/mLDpCmfl+aofjCVTajzWuIbB21wa+UFnxcVk13DE/QR3W7voBCBpviJP7/D7w3ZjYeqN/yJy8cC9nhPYZisg3G1vdk5l1gX/sSRI/oZ/XUdnnN/Tj3UFwPoSWDEE9GODReP0H/30Wu+YDgJ/zANNA0nwYTXnbUp76WInFxWqaNL8PChp5JzV8cphR7fSU4OpfihWDiskRS11d7oGPikZThTzSBmfpfpcRCeXnejviJRk9AK8pBPrEHlGPdOwlEhRxwGZd36oOmBVR2OsUnF/EC+PFBJ91sb2M/UH2GZfAJprz928XV649MvuW+sPrjns6rcIRz7
/// cFCHyvdxD9edBTyJY786R0XeFq/L8o6J61YHbxLb+YVpl4RXq38TDxMfBenFDv35P72osWGCb+4vJkruYZ/oMIHEoWef8da5rLxhhc75P0C/oUcMhl1XvSxsQGsG+9c5aZS/233LrU5PTV4HCNkBvGRBICL550HjOCh7Ej8UXCngPOwvF0q7BwYb6afI0Q7wHexHgmTXWaPZ7db0Nr44Ng7Gk5ngCbjhEgvUrM4BVGfoyTdXv3xYlrnYiH4gB/jD54ThedCV6SPQfNU3c49gvV9Zo6DXmXYkCPnEb3c8qD01S/n36EI69evlT57GJpOHtH98HCD8bda7Jj0LQfEtB5q0gfXBo0N+CY4ntBPh7wRsdBK46gPN07b/tcmn0DBLEyiUisfsHkJzYzLnIiMOh9+/3KVCaNBi9Rz8cnz7eR8S8QsB2m0O97pbYuSpdi5We2N9pNitzjWx3oH1NrHROe3MdIxvSKVjYg+2Enqc0kCIgCGB6REO
/// VbPC4QCzI0RGk+kIVM4X78xfVhqN7kz2G9fp+74nvtNoTDMV/evsjshKgSaPjfMaYv1mTjXxYOfeT/kMH7SUmz40BkHFkUdb0vtmfSsNw09wXGN8ePPMdq0fMxl5c1KbJLO0XtWS4X6ee+lf0i4QKosOic2kJ9nRDUeTl8mqseVOorsbmAztDzvXgH1yvjM6/fIpAXp1sgXzBJuQ6Zhsosc27JTgMucplC9BDDwvuu5zRr/eNp4U/6GVYDP8A/Z3+T7N8ncFb1HdLIUa2DJl96tzkqg6GPRwLrv+1iMHREqCCH6Ct8glHrWPi9TP4CX8KjoQ6W1X7/G6qb1H7gna15tn0GvBW7rILCHtDCzpGAdL2l0XrM/44lfvUaUjQdZd/MgbzxjfP04DTcNJMOGRx590wXhw6SmOElgoHV/siJEyCuZT5syoTFDZFor12i8zOBy4Bwp2ZMF1J0iN9EM0OPHi1y//vvrT2e1ez2J1arG2sK468b4E
/// fvsP29/v/JZjozMhaBk/EIJf7pwICK1s9tR0KAcfXSBl94M1gWN8sQX0AUodGKnjjt/GQ+kkb773Qi8veyERa4hjzjyelMwlK8pSoBROVW/yRkDL9bUXfMjf+Ax6SjsES+A3voXeW9/KQvkIXjjb7I/z6m8mA95GA3TN/5IsDHgpgcCODcnFQ/GN8jygMr65HrXqmzRKXjPVn820H+d20S1BzPZz7+nbdzr94sskMB7bFv7P9IprzBw//ZP/6fVmunvBfT8BRyuTX/cUbZVseNs/ZOD9QF+aRkHpfjz5oMxbv52/btMF6myekFy2Xr3Xy+tf5yTR/I/xG/3Eb3D89cu/FSmJsNK7x9lbdrD9zmT8C/XHrKb6BOkD58//4ud1/T1BpZ2Hj1EWcma9buae8wGf/Fjuh5q0LAzDFpx2/KG156cv/nLe4HgocJsNnqQDvfWNgtNA0zCYIKWKkXJOS+ksL4857DrBogcWZ9oI7Kyzq/deuUeC
/// GQDI7Kcv/UIKhkFZB6kghxEj9edP44UDcpo8Ty/No6MMSWVFhyNjqsuv26zzE87aUH/zfFy45ibWR25wp7BmrR4blPSFswi6sgHmzlG8L2mXUUHnZfv2y6DtX93RehrA6GX4f2ujfLZXibq01ktl0m5kopH1jOfTeaZzPqQ9olltyXuwZYczGJr5nHxzEDiKaP9gzHwiLX5Kd9Eh7zhTW/2a06tHsHEfWxOJbeYoEzmZf92Ae1k6oEdasaWL0cQgxmnjMXVaa2jXRIvV74Gi+J2D6WhHtHEQSldIn7j+PRbQnFt989HHUgMS/SkQq0GNTTR/1/T/bNm00RS2SHklrziPY2DkG4TcQ1skA8khfpMvIV0GO3Gv2qX8W6p/b+06lN6Ezc1pdsECXeNFqbKuhaLKCNS14APtkn4FnU0e5fRM9cHr9HJhprcf7f0gdFCLOz96w5etLpVNndRf1se5dND4WfNctHJ0nrtuWfDe4etQb579y+ob
/// B38kwgtzUCeuC0qpNb19u/Lo97nq6LF/8zfRRVfwTe2ALmjGn3AebeT34KUCSrVJR9mKHqGr/bz0BvSQMh9Yxnbe+x/9QV2HfLb0U7wTjaI/2pF4637TztdKH2RDak+0UeXa78lvKp+Va37hAyzhMWLqjw8EBI3pGi/ayJ/o/uCP+KW6dC50Htk1fkc/mMUs758Pb6h3X0kS9n8h90Ih5gGycydfDCwHxZQtPgzGyCNdyO0MvvrHYlIbI2/ePWE4fQHQmVjrCfapuOOhByU3f8FIOib/KHmHDpAH3x38LemZBpqGMCEEB9Net84M2h9t52swjrQYq2AEhrLljL4J3gFsQM7WNTz6Q0HiO6gYFnWxcTT1kPa1hGfwmAzhTmDq2toQCkDdtEO/WbtSJ885R35fs17t59HiJIDtVPjaTRh1dORqm3gb/A5snHugonv83HkYv2/xr3DIQjDnbFh+qbYc7VXJ7I4HNO9Mj4WsLDloOVLxQ79R
/// X5uufii5wWMFKl32YCuh4aziJjuyTqlffW0MByA9jQ4JWRcBWx3MSd+zDEzHbCSfv6okaIzUh4Dno730sPbHt+6jHjpy6oA2+CpeZdkF/XHd8SyO6oDQx2jnIFTnqzaLD5uqv73+Sz4zom9XO2kGpCMkMBDJ1qn+qP6Si99v/PIg3fla6kH6zWnOndkgVBuybJzvaX0tddUzKcYPfoNnIGW77Oy3t+78sO9r63R7lGntaATPrK3iYdcrvqdm/eUUt51emkbBaKNol65zjHS0y/NhB+63NKCkPUJ9mhdd8Uf7Bl1nWzyX/dN9Fqj95nf+HWd8aNBCXa47hqFP0FXSzlH5DF3HuDY80ACxF/8muoHrO7zvAdMrX58pe9CVeKTOP7/k+njs6O99JwzRC8/k04KnHKMN1E++OHeeg5YO/XC9WSf72vp3ejEy6hsJrF2iV1+OWnfeB1Wv6bzqkR0Hv+O3Ug7hT7MekE/3cq4yQNFNOyiTwA95
/// SU8gokADWW2yXfvHZ0P5tCz2Q3nIiPJd7olP+IPcz0hPI4/qHo6nb3t/g4aUTCDfMhzm/HvnwQfKlf71r7PEaIvoF//iXt+NxPcDpu3h+2b8CWqTzvmhtMM6ZQkuE2yyS8ea1H9Qh9e97j31gEKoFxSdpsRf0GlP15cblz3QlCDp4MxADBmJiakypBgVq7O2vOak3rTxXH+E1VmYpmh3PPBtn4HTDIYUzeu2OhGODFR1ZGWSEMfGpCiU5+XauQyUa6ao6Zw2Q8upO/7K29a1fYNhrnrk8ae9TZQd9a5Z/5d+Hkop2pKjINi2tJwFDkjGhEOCZ94mS19z050i0gnNTqg+tNJ8wYcyKU9Gq47UaUsdPsg1yULng9DpS7KjPdwTa7u6QCOfnYThn7r1/Yk//esNDBrrmRCjJXQV2uBTWY7otOve/pnqonIbD6/fuhiOwc8hkPMoiHj4EC8FEeBoQJb1OtuUZCA+I9fcGag9oO7JMpkPWQ8a
/// 5ZM/9IM0G+kTRDuN/EvENttF2/WJ2Ldd+CErKwWtVh4DEeldUV9Nn/gX1+dHBTNxX/kbdKOL8IXyGFyqfnilmYodV+72GSqXhxOuoNKbY//q9YGGfCiBx73QLN6Oj5KZaIcnlOtpdMh+jzRt0T3YVrRBPNKevBEMi1ZQ/4aDt9MT/NPMechcdYnHoV9hh0FjphV5ZT8jegdj3S6zqW1XX1P95thRpwFS+N/PSuprHnhCdgpOE/0xO8tTlpMImNfa4Nb6gbAZ1WkDD29X1p/gp+xZ9GNrPAUIeft6depJJAwDpw3Skt9JB4dDR35avWn2r6o3rgte6RF38Dfo0m8Eu+q7RFubv/l6qSscsVnuu/am2FpKfHOANj/ITj2dfBRrHpEl9AUdlI3PQeYEP/TXpKPfJV+uv01jL0KXXgwTOAUQMSLwKUrJUHW7vF0P+9cbSH5kG4E7NMee1yEL8rn8zddfvo8tlfppZX/wfPxLzSrPwQOPP+Xl
/// snSnlqHZgp4Oqo8BXe7JrkJPXV9Se5cblz3QDEEhtHBAtbEYg+MaxgBDtU4qKZ5LZRiY0JPh8HasB3VWThhXCKdWfvudowuwCH4WimVHr6PaFu0m+HVnZQ4bZJuecFZdZx2GAU6CGVI5ljTSsXYTODqfE63QCOKwymtBa07PVBt2XZb4j1EVhpVmG2raORh6HpMDhhizVZQVIzHRoyAXmTjvnb4mP/ujZjPDEfvjH6uvK4hW6NOI2d/gNkNWmf3qy0gbQr66x65Dv7dLHRVONuTuMwfe9rNNHz/nXb+zaKGy9tvoSFPSgEAg+AF9UXc41pAj8me0HE40bMDbYPm5Vra1H+qezCfaqkET90oeF+39bGMroJpmt8skJz/MVdfefKvfE/yvaa/pyXV1QbU1fIuuUT7X+I00naH/Bi+sXn47ZdM51b0HfmQkEUgm5hoGj2u67QL2qi95KMBTvfJXcb5QpJzgB7zlaUu0Sb+pXdEel+NZ6J8G
/// E7E3bIAChu6AWsp21fjQ01sf+p7VxyAqDVKMDh9kOD1ZRmHXtEF6pcAG+iTPZnt70GSiYEXBHP7/voP/3ehQsFO2LSAux0/y/4WPMvCg2y7ce+AHPjOHrobsqe91Z9IuOzf/HHzmdyZCfFIk2gsP8GeWvvz6L9d1vMIODB1Y7fKAvB6Qzt178GD1pi1b60ANpG7o01OcxCPne9aX0L3gO8e4n3PJQvaF3mafmYi2ukNXav133w4f05DFTi/dd6MH2l6P8ZBymd2NskPGmkTK/Y3oyXoyH9KO2NUiYBRfSU4Gu7QRvxvtLvu4QZh5lYLJdA36dS7+4UPjIxb1soOuZKZBEJxt30b6tvu/47z0egqe+dITl7t4nWnVOXmmgaahAs1sEFI8wxTsiWnWWds56bddsKvY6zAJsyPMYfgG7PvnZWMUlO0oBy1h6giWQl04JoOzzjfKDoUFvYNY/x7/jS8ZxBvcIzZvXghnQWG3PfQdf5tTbbW6
/// 1+nxFzTmYyGH+pyAQY6WNOtHtWxBzrvpwjPUV50E/okWNkHncT68cB4YLWG00OZLG8yoMg8HIzTieDHEPzF+0sbRAjdrQRqMABcxILFyg75BWDofjk5/4l12suooxeNN/mLUtw7898SgJGjD4GPP+qhBYPnKrJE++ON/rP7je8/L+uYddn4UrQGQZnE4D/13eu082jMMGVlHYEk93CvM5VE3AcK+tN6q1smAIDo1mxeKZj6sr4+4jdr9wefQU9ffDk7U9ZbBi8tEchIPkJOecKi9slHyEZwdPfZ70VRLhc61KRf2XmXbnHK2Q77KyrJy27QsBKO9wU90i7o4j2vUGfnhE3w5bev7qnsf/bECgno2rwC/1JJDX8htJj9JHulR8KNP/KO/FAJ91AlqZhBaUmfntLX9i3QuaB6EKlftdJ10/m7yvR5jC6QM0Co7bpu/n3qbC0gnDIJ27vlkrsPq1TrxPPgCQ4+4HhMI2BCy9mDIacn6UvqU
/// YVBuOu7xXKDBUz85Um38yBVeF/KFTtJZl2d9Nj7kwCytfjP9Tv1OyMPt1NIEKOQ5ZeM51efvua/pL+uAMgC+pmQDdB1fxiNeyqNsdmdwvq2FDtlUHoAEdrNf8vKUwHXOyQpCxKvhMKcJJisrZBk0dalfs7WWN/GZa9xXlnH6e/9rvS69lrnR2aUPaueB61wJjGY++uOnfVY2BjnyN0ELtJa8zbhiAk1j3qv9flgKdCYkx+HnbrgwRsJ1p2kGxdtiBEkOxn2ZABLooGxpNMstMbI9cOhp/xyeC8sNQAKTEUsR1ekoCB0XvTw6B1cS2pccbZqxw0iv+8rtHrxpTRstFM1jg7cb5bXy7O9nL/zcZ5iys5cjUrtNBikYCQX2WU9e1jD6+QQds33qoMAE0On1KFkC52566TfudfnZHy+CzO5iPZvxOnWWGLTLIhlKycd+SN7Ql5AhI71vHfwhtXaC6EADWIMmR9K/zhLzsgLV7zxLvIV3WiYA
/// T2eqbVdf60s4StYB7mwKApyejp1Upr15dLR6COrZUB8aPXg3PsPb6ETRc2iWHUpP4aF0o7e9vZjLQnckD93v+pSOIcvTtl1Qrz+OJqu96SwFRZyxl9zsriuN3ugwjXafDVZQo3IHo/ifgxXSXA+6vGz8gNF30XWf8Uf4pYCgA45Co58YYKe7b7rNBzQeCJt9RJnSBavb+DmJYJOy0GefdU02EvZa2jDnpNGxOx98KEgVwE/TJ79mSsFR7G4pYh/wT/oZ1NrIfWVnb8nb73+o2nH1NdWbN2+t5R/IOjaXVwriRX+0o5l3PlSZWf5+TAEX+88++9JLoqXRnpQOUg082T63fM4R+2OAw3eweapE2SD1O53oeJqRC91D9kwO3HvwgN/v5TlL2rQMBvlnQHZAWueA+M8FfC+DfN5PQB9cn20AG30VepFn7eSX5EcJkt9t+pMGmnbPGTv/ptp3930+oFJ9oReqmYPaIajtE+C3oDmlObIxPk+6
/// ZGviG/bHUxzxU9fA4O0w9P7H2uJ7ZXuFoqm0x2HAuwGqTzrkfDNe9auvjSXNoXvuI81vbL9yj++cAUBKza9EWhcPnvmdGqOCimTSCe8PXqnue+wxt3G1gUFdnrhy+Vsa/azb6bbT266lRKPlD8sfaNoRR8ojPBSK0cvGiy+tdu79h2q/GcKTbCfijDeHkATgaS7W5wPAs72S83Nwoc5Vx44d846YN7MZMfI1nv938w7R5orYzRgGoRs9nXtSALbXoH10aqzpqh+TQ1p0BqShOJRvDPASvHyMIBmp1UPbeWz097fc7bMDBHwbdl3hn6njyDl4jXWoBAb//MIv7W6UPZXBvxQUFILppVkZPUk+P03XwjD5JvEjh5/2YPvyG250/vDmXnxjfBBqVrp0IAQ8s+YEdnvZXSBTPOfOEpnJMfWvs0Q9+pexUzfyPfviyyy4u9a/WYyDjM+jig8hA3hhaaucwUXmi0HiUyf5W5YISj13yMIPdFKq
/// jxzQwWN13ohmoHW26fwZ53/A2xoBM51WtKWL/ke+6Fzi3nbQSZoZIeyKOli/qYBT9Pkx9KkBcx4AXHjdP5htnqvHlNBq5agT6k9XoOpWkBn6kWejWA/9fl+bphnMJAcDDfgScNHwX18+6gEmgQhtpr2UTVmUHQEIuztQd+yyMC5CJ/jGtchok+vYzIcv8+2s9t54a3X9175hg2dt8+ZtgI2G0YZYm5l1og+bB0LmRegkuku5UY70WXvmovN8PQYbZPNyvu1e8gmU/IbrV+hT3Ofyc12NDlW8ZhCMPxOtvbILYOKwOM0ndT7pAP0CsoZ+/CEveFEHfoknHvvvusfa+lNuKMpL9XLIFztBnT0lynPS3h+Y7HRkL8sj1X02mOalxQs/+Wmnb9Mllzm/5I8sCN5xvn/4A//+ccvHspRHDj/pAyUvxCHxy/2GmJN/IsCpzwT8nmRd/5auxb34c16Iue7G26rLP/cV9+fQwFONeIkMfSjlPB9K
/// R7b4V7VUb4vGIYCPwSb9MbPxRbpE2ZQ7XP+wNeTOQAp9YMKLPpv6JYnEP4PgQcZkd0Og5iPQ8oG1O6cs0qrKfzhoNg899DMEn+jmGeeZrbmPxD7OXimB5qsEmi/1+3EpECYgeB+tm/LRaRPciNEhQKEz3BChtB9hDQSMRYlaoKGs6SSBOWBL41gQEgre1RgGoRyh9uFjFHTg8aegRFXaIdNCOy2ZlNVJ9evjQpNXtU7X16hXdQO91dpv6We/ngwBOj2vLlo68ZfzsI4EOlOrJYNcX0BtSKTT78iiH09LjNnC8hpyI5jotCuB1enV+nHODPYa78DCKZXl9kfl88XaFvgg39SMXHYBzjcxLf2otpJUu3t5MxDKOjyd+JzO/UCdSjrU9Rvw+DPWmXkHwOxImt2MTnwwqiMA3V6YxeVa0nt4Q1kqD1tPAWgq+80b3+sfFjjywi8SRQU0iJZa3XfgoD8K46tXGmT0oyljPavIDCNttPpP3fa+
/// 6op9X8xrvQ0UrBe8r+vWl1qoE35I19Rm+Yd0buVTttpLnQra2/SMipSF31C9W3w26vuH/jHRJijl2eaZt8mOjSyclPkGQeSr/agBt9cnmWdNvY7DnAcdbEAunkkfCMZjffYgFC8VcMa9ehKkQF/8scDK5bDJBwFswaSdHOSXmqDzoC1+DxtR8Fy0qUyn9snCMvhZuhT2J2jX3R/qOuxG3WvndSH6rXapHOvfAtJnUA3hTfCVSYI2RDujiFxUQatdbLb7Dz5UUfPT4DXf6MCpX2r3D1xL+QmE5JuTHDvYL3LFjrCrWK6Vq880zgf4c2ZyI8ZAXygLXerSvzM497pUoXSAdDrPIFqiH4tsQyFlCt0CSNXnRSF10hJKU2fNDIO56uEnn/StHzXbib/o0octLhoNLxJoPtbvx6VAmBCC17UZH5llGK5IkwYC3S4zJV1RjlJBK+3krWDB0rdtpUPbqbNpfT+etlFOS7ymI9b5jM8YDwO30WS4
/// OLIcTPSvq42rXb588AD6oV1tYUH/5PR/GGZnP+PfIWaz69pvOhQdd5JTSloA+EyjrPlRQQkb8D//4ot+b09gWaYtA99KZk/Wd5x/iXd26ET4KcpyXUvB8mKid7Sps4gXVBjMrB6Y05uzBBVJr8JmRrGzQRi6G3wKOZ28aYfPROEHfPcDVx7k3A4V0Yf2ldUDolztCj4wCGO2c/kh25W2/ZLMs78ZjOhI6En252k5QVE2UEvQEqTZLaJd3qjIIEmQ6qorada9UoDlFdDNbCY6sEJmNB/7o5PWb9rf78elQDEhKZI/Otcib6C3I1gcqPXGAF+DMUTn12XE0wXD8dHW2DOxDKqmYI6/cPTBGzmmXn42UUEeafhcyozHHt1AHc++u77u98WMdteOcDXLF8dEwKRHbqHzCm66tn+SCC+ZreQtWNbw6m112WmtIcVJvzJKjPZQbr2Rcrq3Ls+ANHsIsmULAW8EkQr08uADPlFWBEtlXYuBzZc+
/// 1Bb/GlpJ/AoG7FqBpmyq5l3y95PCbIO95xHQIMe377zYHzPuufEO3/aJJQfYbAxABLLdVcJiozP5GiM42gl/WSKz/IBvpy9nEic9oTLaZE/D7SfkSJva/rwpr1JmlrYEgWm7vFHxwBOx7ClBVMoxE7C8YHSEDjDRUer+ypjR3LSfGc0d/X5cCiyZEI5bDpXrTKuHMi4e0pFQH/W68qcZrXDqJb0LxTAq6onHAGpn1PHaRXijoEbOJAKervwnn/grvQn94dG5Zjia9fXDdmeeZdO/zjauZvlCq9qRZ8668n4ymOloPEpNnRF8ZMDBeq96rWuxNKNZVi+WsiTQ1JBC/wliWdfHThTvOH9XetQNLRv1qM3SokF0UEboVubbYmOWC3SEbpW/r2wU/0s5RFvA3I6FYcihPDbTsTa0zF8OHoLGZjn85gFboy0rFWlbSa/0vqv/W3zUS2uSQbalLii90fK618Xb7K08YR+qS/nV/qxvC8VMq/yC
/// 6G/rz/Jh8LSkWUt4ks2VPnWZ0OSx449OeMemf3fSuk3/2i/DYiNMiNkjP3clEgMnoSRdMZRZ56KlnwAXhrRFZTcdbTvfaxmbnU7Ivp9TaWObj3Iy4RSav82H4ThIc388fo+gdzCubvlK9yPAFx9kk+JLv3smjapHSN2l3KOzJE/wlFkpXmbiazGRbz7k/hhMsj0IL/4QcJ66XdvyqMym/DkvZRl6QF7KA11PCjoXC6lDMgpfmXnSL/9KRfgJ7cHvaFe/vAvBkEVbJnEe9aJHZR7RFf4nY7uclYtteuO8u/9bbJRtNemE32FXw1H3ZX0p25h9Q5THPrKTaz91hf7ofJJ6Oy4GH0N/oS14AQ+WO9AktiTG/CPgxHWzn+uXabERJkxxilOc4hSnOMUpTnHy2C/2WioktvQgEzhx7cY/X65ZzSlOcYpTnOIUpzjFKR4/SExJbJnCTIH9cEU74xSnOMUpTnGKU5ziFKc4Il6RwssMJ5yx+f86
/// cd2m2/pknuIUpzjFKU5xilOc4hSHIrEkMWUKL5vwunWbTzlp/ab7+t04xSlOcYpTnOIUpzjFKc6HxJDEkims7A9kmM5sTnGKU5ziFKc4xSlOsSsSOw4NMgOY8rSbrpi+IDTFKU5xilOc4hSnOMX5MMWKV8z7uHwQ8MYQr6dPA84pTnGKU5ziFKc4xSkG+pvlFiP2vF2+ENCm7rM7+JSQHZ8wfKVfpVOc4hSnOMUpTnGKUzwu8d9ev272f6RYcEe9GftA+KM/+v8BEZjfI6WS6f4AAAAASUVORK5CYIIgBzsAAIlQTkcNChoKAAAADUlIRFIAAAK8AAAArggGAAAA1Dve+gAAAARnQU1BAACxjwv8YQUAADq+SURBVHhe7Z0/6G3Vte9DYuE7CE8sYnE4IAgh1Uke7wpJkUIURARJIwQsxEYLC20kpJEUgtgI8gsWWpwiWFiJhQipThMEC1PE4gbyeySES4p3izy48B6Ey33jc8bcnv1n
/// 7r3XnznmnGvt7we+mPzO3muutfbae33XmGOO8R0hdri6vmH6oekF01umD0yfm74y/dn09yP6o+mu6RPTe6Y3TE+bHjM9kLYuhBBCCCFEA9zgvmLCrP6r6Z+m/yqk/zBhljHOmOhH06hCCCGEEEIEcnV90/SmiagspjRnViP076ZPTS+bHkl7I4QQQgghRAGurr9rei4Zzpom95gwv3dMP017KIQQQgghxEQ8nYDUgpzx7EHkCT+d9lYIIYQQQoiBeET3D8lULkGkWPws7b0QQgghhBBHuLp+3ETqQs5ULkEfm26loxFCCCGEEGILLwlWstJCK/3D9Eo6KiGEEEIIcfF4VJeUgJx5XLLI71U5MyGEEEKIi+bq+nkTVQ9yhnEN+pvpmXS0QgghhBDiovCOaDmTuEb9Kh21EEIIIYRYPbTs9Tq2OWO4Zr2fzoAQQgghhFgtV9cPmtaYrztUtEF+IJ0NIYQQQgixKmjJe9lmdyPKrn03nRUh
/// hBBCCLEKrq4fMi2pkUS07qQzI4QQQgghFg/RzGU3k4jSe+kMCSGEEEKIReN5qznDJ11dv5nOkhBCCCGEWCRX1+/uGTzpUKrTK4QQQgixSK6uX94zdlJeNKdQRzYhhBBCiEVxdf0j038kQyed18fpzAkhhBBCiO7xWrtfbZk5aZheTGdQCCGEEEJ0DdUH8oZOOq3/ZXoknUUhhBBCCNElLMDKmzlpmN5OZ1IIIYQQQnSHN5f445Z5i9Q/TeQI/91EZHRbfzH9w8Rrcu/tWez3Y+mMCiGEEEKIrogtQYax/Z2JdIkXTT8zsTDupomWxdt61PRDE695wfQrE7WA/9WU23ZvUkMKIYQQQojB+AIyDCDmkHQDDGBO/BuvwTA+mN49nKvrJ0ylqzIQLX7b9KRpfm6rnwuO8TXT56b/Z8qN21r/brqV9loIIYQQQnyLt/B93ISBJdpKO19MI9HRIeaO1/DaP5iIiLINtsU2v5tGyeMGMrfNscI0
/// MzYm94G09Rj8uN409Rj5fSvtpRBCCCHEheNRy6dN75swqhFRS0woZcZIJ8CI7kaA3RTn3jdG5K6y/cfTVuvhDwrPm+6acvvWQnyWN9IeCiGEEEJcIJ6jynR/i+gkUWPyYn1x1XyjeMdU3+jmcPPeS8RXLYeFEEIIcYFcXf/UxJR/ziDVFrmmmN2pUWWimD9KR9YXnurQusrDnbQ3QgghhBAXgEd0ezG6JUR0OjZHdy6+wK1lxzhKrD2U9kYIIYQQYqV4bVvyc5dYUzYnosJPp6PrH8/v5fznjqWGlNYghBBCiBXji9GWUjt2iEhh+GE6umXhpcxyxxQtdV4TQgghxErxRWE5A7RUUbZsfH3fnvBKDqVrDZ/T52l0IYRoj9d1Z3Evv4fnxOuo8f6Y6XRpy0vCZw6ZvaXu/cMDxOumV+3x8Tbb2d92TtPq8QsxCv8SlKpp24vIPV7Hj50vGqxpemmT/GgaXQgh2uJGNvdbdUqUnWSB8ysm
/// lVv0+zzng/Oy3xo/J+4DzPZSW/8N07h7gj+ksB6FlMLc9vf1NxPjfWyis6keVkRh/Cm45SKpCK0vQlmm7vAY9VnJQghxeUwzvNuirOUTaWuXiUdQMbG58zNEGFdmgYcZUfcWvCe3rSHC/C5n7Y3oHH8C48kqd7EtVb8zrfNp3iMVuWOO0HNpVCGEaMt8w4tYhP1C2uLl4WkDJe73zJ6eTz24ur5pootqbhtj9Ku0RSEm4maXBV25C2ypWv9UfL3qDW+mEYUQoi1lDO9Glxk1LGd4EYGl0yU+yxleJNMrJuKtgX+/dTGtQTSi+Fk6wvXiCwH4scmdg5JSpQYhRB+UNbx/Nl3eGoWyhhedblJU1vCi59OWhRiBt9XNXVBL1ivp6NaPN6eIrpH8YRpNCCHaUtbwovfSli+H8oYXHa/ZXt7w8qDycNq6EAPw1Za5i2nJurx2uFfXb+2dg9L6OI0khBBtKW94L68STYzh/V3a+iHlDS96LW1d
/// iDN4ZLB2Tddo8QW+xOkpSsxENghRLV4hRB+UN7zoshawxRheSpzlGzvFGN67aetCnKFO7mdtXW5eT2zVhuNP7kIIUZMYw3tZ6xRiDC/KPzjEGF62dzONIMQR2rWpjdTlpTJs41Fe6kvmzs1cyfAKIfogxvB+kLZ+GcQZ3jfSCLvEGF7Wrvw0jSBEBi84TReT3AW0VPFFupWO8HKJawctwyuE6IMYw/t+2vplEGd430oj7BJjeNH6qzGJGcQvcGqh/Jfs0pjfzeaYtGhNCNEHMrzziTO8+Rq5ivCK6sQ9ZeXEgjgWUn1u+tD0rgmz/XYS//s9E72y6elNmRHq5+a2dUpM46s8yQbvfJM7T3N02ekiQoh+kOGdjwyvWD2xubuY1a9MGNsXTY+baGpxvte2N1AgB5XKESy++sCEWR5SX1ZdwLbxc587T3N0eXUqhRB9IsM7HxlesWrcVEYsamKb5I7my5FMhVaFV9dPmGife2yanr8/lt4h
/// wB80pkTKT0mtHIUQfSDDOx8ZXrFqyv9IUNbsOdPpHtol8IV2NMnYrzWrqfZ9PKpOpH37PM3Vy2nrQgjRFhne+fg9lYYbuXMxR/nybjK8oiqeR5u7aMaKiG6berce9X057QP7ohWaOcp91hvpPAsh+kCGdz4e4SVoxSwpgaQSYt1OvvuZDK+ohj/NsSgsd9GMEfm5D6attsPzfYkuP5T+IrYp2zKaH7HH05aFEKItMrzz8RRHTC/eoKTy/kCGV1Tj6vrprYtkirhQn0xbE71T9oZANL39Q44QQoAM7/KQ4RXV8Mhs7oIZIkqGPZq2JJaAL/YjMpv7PMfqk7RVIYRojwzv8pDhFdVw05q7YM6J991IWxFLwSs1lGpAobJvQoh+kOFdHjK8ogp+oU0xPzK7S8VzqUq0j+YHRQvWKvCTf/nx937yP3/8337yL//j+6YfZPR9//cffy+9RWyRzs1/t/P02N55Q/Y3+zd7TXq5MLbO2eY83Tb9
/// zPTE1t9udnfeeje8nh97w8Tv8A+3xL2Yv5+vTb82YgwvWu79yRfhsx7plonrg0AV2vxvrp/LvF4mQ+6tG5fcxXJM5G0qjWGplDO81GnUwsDCmInA1D5letX0G9Mnprumb0x/Nf2fjPg7//6l6TPTR6Zfm35uun0pZu7eg4EbM477HdNvTV+Yvjb9yfS/Tfvnjr/xb7yG13K+3zO9ZMLgfT9tfpUkU4uJ5Xhz52xznv5p+q+kzd/+zbQ5b7zv/jXX6uGrN8Pr5oR9ooMonS4JFnEP5ffzHybSyxCGj7/z77yO179gWv+i4EuO8LqxxcRyjdCz4I6JDrSUD6W6BeeF64NrZXO9EKSk0MAfTFTT4HqhJwHNw1iTpf4DWcZ3V+Nk/yi9WywRHlbKGN6P0xbFDJJJw1hhFjC2GLCNsSghjArGBSP8uukHaehVYMdz04RZw6hynP9pyp2HqeLz4HPh83l2DQ8PdhxEZ7kWMKqY1txxz9H/NfEA
/// hgnms7mZho6nB8OL4SDd6+r696a5jX6452J+aLdfx/y6Cfup6RkTQbFzwmTx+mkBkLgIry+m94oT53S8ikRpfCweZigRykMOn3Fu/6cKY8w1gwnm+/BIGvnCoS1s/oQd0xvpnWKp+JetRFHxF9MWxQQwAaZfmoiQ5UxDlDAjGDgiyIuMXqaHBCKJmFwijbnjjBLRdCLvt9PuLIIUycV8YnK5BnLHFiU+Iz6rZ9PuxNHS8Hr7+49NpQ3MRphnth87Ve/3iCmd1gikEG18Om1pGHGGl2PAUBINPSdM4rtpj2LwBeNEcCOO9ZQYj3F5MLngFAgPnedOUE6fp3eJJVPmx4UfB02bTMBu+kTXSDmobdRyInrJvizCvHle6b3IJJHc3PHUFJFkHhx+nnavS2z/SJEhOo1Rzx1HbRH5tYetoJSHFobXcy2JppVu235Kn5piZlunG95t4S2GpT7GGd6xipm19Eg50f7cmLVFGgS1+C8wHXFcm1mt
/// eFwDHoWYG4FQObKRpAgbOZK1o2tDRNoDeav1pp5HYvv2rAmzlNv/1iJ3+qm0q91g+0QUPyJloYSY2Sh/zmobXqKtnmuZe1+0MNikTpSN2vkU/1zDizgv5015P4b3w7RHZfCILjm2ubFai1neF00XEvH1i3roF1X5mtuQ6+NTBMub1vecq7ELFff1ctqaGIDd2Jl+7yXCdkpEnX+ZdrsLbH9I/SD/OLe/vYl0geYPDbYPLNyrnSozVcwwlEutqWl4Pa829/raInpY7rorZ3gRC6xOzwauzfB6xP+Dre32LK6dJ9Ker5jhF5nKT23jq26ZFuDc8N9ldRrDrB5+xmPEk+HDaWviBCnXlHzP3I2+ZzFV3zxlxfaBB4XSi/iixUPDS+kQqmNjE9XdrqiwBPEwWOYeU8vw+oKj3GtbiXv5uNzZY5Q1vIgo5/FIYj+G907ao+n4DCp5w7nt9yo83q/SEawUL4UxZGpbubsb3Czu1y1eVvOF+VGJ
/// t9KWxAnsBk5kkqnu3A1+CcK4xS8yOoKNzYK+3H4tRR+F5almSA9XREtz+7IEkRP9ejqc6UQbXq9gwMKs3Ot60PxZx/KGF72Stn7IWiK8niIwd/a0pYbnXS8OfxLJHfS+XkjvuFw8heHYEz0rU5dzkcz/sSaqTXUPvtw8ND2QtiwSduOmrukSUhiG6NV0WNWwMZcYFc/pC3K302GFkRbzkU6R24el6b10WNOIN7xLmKqel3IWY3i/Sls/pB/DOz3K6TV0c9tcmvjcV1j72c3KuVWlyzJzEfh52qQwHFNsOZNSeG7RuWMZI64ftsfDADeai29IYjds8id7qMBQUr9OhxeOjUX5qtw+LFXfRJpetm1jkIKSG3upmm56Ywyv78+yTM1z9/Z5CjGGF+UXvvdjeKelhPSTy11K+L6VFSkY9sNw2YvVmIYZlvbBa36Y3tUvbt4jp1xI96BcDqkf3a74j8Ju1ER2e10VP1fhi9lsjCVPyZ8ShrR4
/// zeOUxrCWyO6+3kmHOY4Yw8t9gN/O3L/1KkpHTluMFGd48+kWfRheFvCPL9W1PrO7EddP/54mCwnj/oXli0vhagotDzE+x/Nu1sz9Kgy5c3JM8xPeo/E0hNy+R4gvDOkT3IBWn/ZgN2jqna4ljeGYfpEOtzi2bWrF5sZciz5Lh1oM2+ZaHxA2Gp9OE2N4SWPotbzUKbF4avysW5zhza936cPwjm+qVfd+2kLTrp8muMml3R89uam3O7YoNlHLCyhXsYefs6l1Fcusko2i3cpiHrB4El5t1NduzmuNtG2LGsLFK7bYNukAlhtvbZoWtcxg21r7AwJiIdu4Wr3lDS+BoWUvRBpLnOHNL3hub3h/n/ZkOL4GqmajkVb6XTriTvFILrlGY5pK5ITpW1bJrblcXb9mmvPj1u/F4VHrqUa+lIj60pFoVV3a7Ka89IoCY/QNi6TSoc/GtkfnubXlPJ/S7MoXto2n9ra5Zv1pVA50TIR36RoXvYwz
/// vPlFYW0NL8c5bur+6vqGqZfOaTXUWckyL5XCF52yEqWeRj9NW18/3kpxTJvlU+qzGQXVNvL720LMHhBtXnzE127I5O0SicrdrNeq36TDn41t6xIi49ua9cBg77+E1Jl9Db/eZHhz4vd2eBviyzG8LLi+lfZiOB60yW1vzeqgF4MbXRYIlVx5v9EyKg/MxVtDlvxyk/fSX85qn+V0iPiS6rDI9oZp0dDaVsgP1ewfQNvG63vbvBRNrnph76UFdG6ba9ewyLgM7zEND2Ct3/CyuJqWzOPv057ymNvm2tVw9tqN7hsmykfkdq6E1r9gLW6FZV/NKEg8j71W5op9ez7t7WKwm/ClGjb0ZToNk7D305hjrRUtzolc6NvpVAzG3sNsQm57l6Bh15sM7ykNq6m/HsNLWiczt3dNVA8iMstM5yNp5HG477qkVIZ9vZbOREX8C12jdd3iDMhgyqYw5MSXt5/p+uWsJiXNYdqPUWXsBtxiapk2u9+Y
/// iCqTCrDR1yb2pXZL2clVG+y9tSOVmEzOEd3vts8d//9Pptp5xB+lUzEYe0+LGsVcU5w3rjuuM9TifKHz15sM7ykNW5y1DsNLaqfXki01gzi/Lf9YcQwEgzbGfSMMPOtx9ru+RosxK92ffVVgzdIoT6aR14X/INa4UOZ1DCqJf0Fy+9ij+KHt/tqzm2+tVfKYXDqP/dx0kzSKtAs7pAYERACJOmOIa+QVfzklH9Xex0I1DGhum6XFuXjVdPvY4qfUqewx0y9MlPqqZeYGp4XwWlOtBxrG4bxxLXFN2cMd6Tt+7aXzxWdY+3yZ2T7TrrkPw4tRIc2QEqBUSWIxNJFF9g3TxKJyyl7WCFzt63wXtrUZ3hJ4dLfW54XB5RohfYLg3KFh90XozNw+ZyJyHfF55TS+fNsovLwYU+81S2Aw1kKLDh/Bz+O76fhqaNxCgSg8R7nUQsaayv84doDdeGtEdzGEmOpJDQvsfRgkIpi5bZfU6CivvafG
/// wwLHPinP2N5HusU7pmhTPjjKa6+tEd3FuBJ5H5VuYa/fnK8ahvx0bd62hpdACveYJ0zno4puojA1zGxxv8hts7TOR3lleA+ps+gbQ831Oz4i7QaYPgsRqSHbosTojTRqYbzE2NzyYlPEl289/ZQ5ljbn8ZO0B+0Y30CjJ9G4orsFgNx0927CpcU0+w/ScLOw7RClizRud9NQg7DX87AQmbuLaRvfsCCDbYcoJp9FbpwSwiCe/ZztNbSrDjffpllpWPZ+zhcpD7ntl9Lp662N4SVARCR3+nQvpRr99y63/dI63XZYhncXD5ZFz66/nUabh0d9o6+jgPVd/kTBKvbcgNHC8K4jwtv2PKJ20/P+wFQrchAlfmgeTkfUBXbTjTRBn5ydth2JbZNp6ahpZ4zY4AY19trIhwWM9OjFYKdI0/eRkfKzzSjsNZGLIzHdxTropfMVXbnkeDOK+oaXiFfJSCLpD7lxSurjNFoeGd5dPAqfG6OUyhtI
/// UirzY5XQ+GYmJ4nd2SFavuH1p7IeSnG1K+fheUC5fVqaSJYfXy8xALvZRuZShs0I2LbJAc6NWUKDO4jZaz/be28pYehDakUGmzgaKxx9wPHc2dAHrJ+noYph+0w+eaTpPZ4KUtfwMgVdfhGP52VGpqERkT4+gyvDu0usj4ir2x87u1sgXdM7eNSa1jilZRvedqkgx9SmGYWfBxZJkFdGpJQVn0tth8gikOYd2uxmS65i7iY8V5MWgI3BxoiqjPANJicNcxR7XeRitdfTMCHY9tn3qFSMo6bT/o3ofNQDVrFWx/vYtiPz3FnImc9tr2d4eQiP+z2KrwhwvHSmDO99PM86qkNp/nyUwhe8MQORG3uuZpZevbp+yNRTjbf2C66m4CW4ejN1RAKCEr1H4D9kLKjgx5SnVkzkklIe2N9m5zE42jY4LWAqKVJJSanc+HN1Nrpqr4lKZxiVRzwVGydq/492ErN/i1rgd/dUZLkENkZkC+R8GkYd
/// w8v9pVwawzFiF1kfn3mU4b3P1fUzW9ssKSonxa9PiStJOqzEXRZ34r2UjuLLzL48mvZuGXh0nDIwuWPqQX01owB/et1EgTl3tev6TVHh/KHh2E2WxUO5m+9cja7JOhUb65d7Y5fSL9MQR7HXRKQzUH7teE5nYWysiAceIpbZBWP296j84SrnzMaJmhH5bRpilzqGt85vuaflRfkC1rXkZ3FleO/jixFz25+rp9MI8cQEUidmAbSP7DLNzXQ3pc9Y4NV82ng0XqO4RU3DMeIL3fdDhD94cQ2QVtNyod85fZD2uCp2k31p76ZbQkxXh0d3N9hYTDVjsHL7Mkcno6z271HVGb5IQ1TBxiOHm4oG1EYuIbaFDqboUy5sRFpAteox6RgiZhXIfT5Mo4k3vNxn6lWOYdFzfj9KKJ9qJ8PrxFVnqLuux8uV5fZjrkYutvMIW4vILl9aihUTrl9EZ6ujeItlLu7ccfamfppRnMN/hOg33uuDRPU2
/// h3aT/e3eTbeEqho2sDExWLl9mSPM7NGyVvZvTG9HNMMovuiqF+zYMNe5Y56rZ9MQVbDxoqpMHEap4w3v+cYNpYlbfHQnjbCLDK/DQumYwE/de5eXZY04jvz1c5S6U/AcMAWuMbnd1TYdTf8pDDmRLrKs3Gh/yiXq29MiQMSUStVzaTfYiBqjoYutctiYdMjK7ctcnVp8FWF6iH5OasyxBOzYIs7Zl2nz1bAxaUwREd0/TKOJNbwVW6tuEdc8iDURD6ZR7iPD63i1jNy254j7Vv1ZdG9JnNufOeL6Gegl63X94ktKbb9lR3K38eNZarWB0zUQe8ZvJlzkueNqIUx4mT7pZ7CbK6v0I2rZVktn2GBjkoscsfL/aB6v/VtEdDyfx7kSOL694y2hs7nWEdi4dT7/WMP7VhqlPjFT65ivw/JkMrwO+5vf9hwxo1/lnrWDp6zm9meOBubxxq2c2xblKMjdOHyCWzIeceRhgS9k6S9JLT2TjmZ5
/// +Pkn1YGLPXdstRXc29uxm2tEHduTaQBRBOZVHjWg9m8Ri72KdFTrkVRRI2JGofoDFti4EbMKXx+U8os1vC2bCEU1pHg+jXAfGV4nJpXk/bT1usR5zjPfCc+niFwNz7YxJOsyujl8kRXTPRwv6Q1EsyOmfkprRkmPTvBWmBHTJGN1fLVxQezmuorp5Q02dsTq/+zCNft7xJT2qA5vS8OOjXNWenHhoHrJEdjYj5lKz5Cwvd3WzHGG949phDa4b4gIMhyaUBleJ6aYQJUAzQGci5hZ8TP5yLEmgW1Xjxh1gy8C5IPlaZh8ZSpQ5M5TD3oh7fWy8UWDrdNLPkx7E4bdWFlRn7vpzlG11fL72NgRx5NdOW9/jyjn9qfoRh0tseOLWLDWLAXErgtqWEd0X9tduBZneEcu0CmMz6xFpDUcHpcML/tE9ayIc/BcGqEuHhz8y9Z+lNLbaYQMceUhePJbh4EqSdw0UAkRjX4o7emy8WYWLR8uMNzz
/// nubPYDfWiBqy9wyv/ZeSXdWUxoyoj3oYcTPsbxENCKpXt6iJHV9ECbxfp803wcaPqA6ym9YSZ3jrV2fYhyo/+X2bo8NZGRle9ilqJt5TSChRWk+YXRRRcenImqSYDxWxcGe5bYAjie2BXUL9NaOYil/fLZunhEZg7MYaEZ3CIFJpoIUiavGig45r9rcI83a0O9kasOOLSKFpWsLNxo84pl0TH2d4z3YSDCcmD5PAy276owwv+xSRAsA+cZycWwJEtURklzEjZmKP1BT2ure5N8wReavLLzEWgU8B9dSqOScu/ltpj5ePp5RETLsNVUiZsrSA6Ju9G62U14Gpsr9FdHdrUm2gFnZ8pSPw1EBuatps/IiFn7tdCmMML5G+9g2ZYppQHN6DZHijrqM1KpPbTgTWP4DcG6ZqOU0MWuDnvHVu6RC1WbUZhec+tVrM9m7ai6LYTZVUAKKiuRuutKuDygn2t4j0iZfS5leJHV/pMl7MJtxOm2+C
/// jR+Rl7ybBx9jVCjFeCON0A7vKFp64Rrb2w0UyPCyTzUqaa1Bf09nbIvy5S1OJAqLeyznguWLuaxmFOdgiqxNowqmbh5Oe1EMu6mywjwqBWBtOoi82t8iFsittsMa2PGVzhnn+m0apbTxWbxYulLDbi53jOFtUzt1H8/HZIo6t49ztBv5l+Fln3pe/9OT9gyvRxpLtnVbV0QwimV1YWu2Wj8Mv+5L/4gNUfHFJXZTjWo6sUa9k07bt9jfIhYrVW2PWxs7vtJ1i5mhaNqVzsaPeHDcXXQVY3j7+H32QAI5t7l9nKPduvAyvOxTRNOJNerA8JbsqLY+YxSBf2EjnoQjtdxmFMfwNta5Y41U8U52dlONqCG6Vh1UArC/fbL3mrkiH3W1NXjBjq+04W1exs32IaIe89eUPEtD8JuzZsPLupSITpe7zSdkeNknavvntivtasvweimIUk9kLMBaRxmraPpLZ2DRwzkD3se0WWliWhqeEuf50TR6
/// EeymGtWKd406qJ5gfytteHn4OCh/tibs+NZneH3xZ+kOf7u1n2MMb9savNvEVMKR4d1HhneodgzvC3v/OFWHieXiODyR589jKxHpvGF6zvS2iUVdOQPcvtZjabxyQ+183qLRcrupPrF3k5WO66C5gf2ttOGly5oM7zit1/BuH1eM4e1ngXhMFRwZ3n1iqmqtUTuGt5TxWp8RisJzRyNaME5Vfordo/80bKBTGfnGmyjw+jrlXV0/bcqdmygVXdRpN1UZ3uHaLRNl2N9keEdix1fa8JJK0PS3ZcGGt591MzK8QzXX8BKYym1X2lUyvL6iskSnjiOFfUWWvqYiKIs2rCmIl/PCGLav9xhB+Uolp1T0O2M3VS1aG64ahlcpDePVQ5WGiBzeGikNxdcFTCZmtkyGdx8PROW2K+3qW8NbIo+UD02pDEOJW8U6VSoftyGmhuQxESl/JI08G7upyvAOV87wlq4pSz61Fq2NU/OHBBs/okrDl2nz
/// Tozh7WXRGulhEfc3Gd592Nf8dqVdfWt4P9z7hylSCbIxXF2/snf+WoofpuI1YRdNvdxqfuyKdZWym6oM73Dlcngj6vCuvSzZF3vHO1fNHxJsfBZ/ko6S27+pqlGHV4a3jLRobX0yw+sX5tzyIaRDDJsOF06bZgfH9ELaK7EhpjXmMb2YRp2N3VQjpmLXqlyE972915TQ2g1v6ag4eiptvgk2fkSntUtqPBFhDNFzaQRHhpd9enlrW9Jx/YOTVWLh1Ifp1IshxPzQTdWnaa/ENp5yElFHMqc306izIUfQbqylF9sgpne/Nn2zEvFQ8It02r7F/vZrU+7452jtrYVX152O8ff2p4R2o68x9wECKQ+mEdrhvqJkE6uN1Gltn3IVtrbFPhGh5x74xxWIa+RuqS/dqnPUiuIRdeoU585jbRGZfzztmdinXm7UB2nE2VDY3m6sGNPcDXeOvp3+9zGWr3Q4O9hxvr533CV00MJ4TdjxRTwkND1n
/// Nv6re/tTQrszCjGG98+m9ulpMTNkLKze9RoyvOxTVNOkJ9P2aSKydOG7vsvBzM3/oPTI+poQRNHX9MMbaa9EDn6E8uettIpG2e3GWjqnEl1E50Q7zl/sHXcJHTS4WBN2fBHmsOk5s/EjUlt2O/vF/L4Mr7YTSUzU8TBAI8PLPlEyNGKR9fo6qtpBzS1a/FrakjhHX5UZlMpwDn8qZDokd/5K6vM0YhHsxlq6tBa6mza/auw4I+oY7+Zurgw7vojp/8/S5ptg40d8h15Nm3e8Gkzu92Cu2huVmNqwGNvd6LUML/t0y1R6n9AraYQVgfHJH+wQ8TSpUmRDqTdFfk7kVtWNAvgUF7MJD6S/LANvtJE7hyVVuhbvO3s32hLarSG6Uuw4qXJRenV+885hkdjx8ZBQup31N62ut9R0IiItaHfxYpzhbR+Eiqly8/u09fvI8LJPdEYllSW37Tl6K42wIublk/4hbUWcg6mYmCT+Kar3g+jTLRvT
/// uLwHpDolX1hoUuxBwG6sL+3daEto9Q0UwI7x+6a/pmMuJQz0atc52LFxzkpXBsFAN7neGNdU+qGH47mdhnBo3FOm4dO+7qQR2uCdOSMM2GFTDRleh1nC/LbnqJ8mJsWYN8Wu6gxDqdu965Tq5GJ6In3uS1isIkEV6lTUKG14nzX9Z7rRllTTUlG1sOO8u3fcJbQ7nb0ifBFg8eYT6KCKRg0Yd28/SuhwhsSNYYRZIw2r3bqauJKOh82RZHgdFj7ntz1HfVT8KMq8D0/5u0OgdmD+/NUWn3Vcj3rPeWWxArUgc+Ojovmq4dTpulba8EZ0iUKrrjawwY7zo73jLqGDJhdrwo4v4pw1Wbhm40Ycy2Eet6/p4Luf+02Yo/kGag5X1+9t7UtJHdYrl+F1YtoLc99bWRWneR/eClfxFebq+iFTrXqu57TbpaYUfoyvmYbMFvSxingoHoWh/W/uWEqp+IIwu8FGRClXvfhqgx1nRNUB0iS+n4ZY
/// HXZsEeXcvk6brwZRWBu3dEoLeicNscu8NTSn1GYmzUtARS30PUyHk+F1qE+c3/ZcvZxGWAnTPzzcv7qrnWN+FYxSejftUTn8x4Yc17GGcDlfIo/CRFdqKB71thtsRDOAS8njjViEhZpM0dfAji2iMxmfQbG220Ow8SLSGVC+kUbMVDRibU796ei4FDCCKQ+lUe4jw+vE7BdaWTnK6ScJk/No2orIEVcQeqzKGipfgIeRn7oIbzlpDR6xOJWiUULFS8TZDTbqxr1bS7QyNj4LpDCk5ClTDmuKODdHjXtapR/Rra5pabd0XCzIesqUOy9DxLk7yOW2v0Us9kNV0xpsvM/2xi8h0oseS0PsEjMVvVH9lvH5dRsllDdeMrz3iZktaBvY9DRJFncSwSZdkgeqseJ9pJXeYINTPzyiXrYBkcWnwnuoucuPQZk8HM9nJSIxN6eVlclxucQlqWN4i3Va22A32IiV5qhJeTIbF7OFGcE8lFiQd7J1
/// rf17RB1WVL1lro3JtUCpOkx8ich11nzY3yPSaPi8q/xW2Dg8COT2Ya6OP+jEru+o+4AVeyz5JkkyvPdhn/Pbn6vDxYLR+Hl+y0SOe4k1NKSVPsCGp5ZFwfCubAVfQerUbz2nUl8kVt2WfnpcRlpDHcMbkm/HjXbvxltK1aK8Kaey9HH89VxdXHtNRGk39E3Nmrw2Hg8KpR98Xkqb38H+HtFiGIUvlkyVJiJq76LX0zCH+GxZRGmyjer8zvo6jqjUL+5j+bJ+Mrz3icvjrVtO1GfGS5/j9zcbnxqFxDHL8ObwBVy5c1Zb0zuluNFjOiDK7C2jxl8dw3u4+rgAdqP95d6Nt5Sq5FbaGFSbiDAhZ6fJ7TVREXL0XhomFBsnYvEdedzZ6Xn7e1SENDx33LYf0awFcQ2d3veYSg0bYRziV9rHVWZAX6VRDpHh3SXuoaNOGiIPaPnx54jzm+5X0xtPKKUhh0dDOcG5c1ZT6YlmJL5I6xVT1Bdn
/// o2XkgMcbXq6VJ9NoRbEb7W0TZiF3I56r8KoDtv2I2q5ot+PVEex1UWkNKLQur22fyG5u3Lk6uoglMPcZhVUIsW1HRfPR+RbJ8QubMdRxv7V+v8iNW0rHF1zL8O7CucqPUULFU+928Ah1hHfCy6Syn9OnqjEsj/hGxD38y9BD3u74pzH/4WABRcSPxzHFlEkribdtjPxMmc68lUYrjt1wo9IakG07Jp/Xtv3bvbFKaXDLWnttRIR0I/KQQ/J5bbtEWqMedE5WmrB/j4qUouKRcdsm1SUiKnJslE3/2KHO4uaYqg3MTuXHK6njZlCGdxfvbJobo5Ty52UuLIwrf1432mqRPP3pcnltYiOpM/U9ROzDYfmWY/gKyLdNURfbKcU+MZaAyEjsuTnsD18Qu+FGVWvYiJSD/Ar0CaRcysjI6uD845Q/HFF5YFvH8zsnYNuLyNndiAWL30tDZbHXRJQn29Zvzu3DUGxbVPqIejBAwxZ4xpm2fZGG
/// WG7FPeYnP05JcT873jVuHYYXlUtri6vtvFHZB0836VG17vfq/nsd1dwLh6j/CF0t4uopjhGRyPNTVx61ZPqAh50SKyCnin7rfafF+JcxMkUltD233XQpFxU1zbzRv5lenWNEeK9tA3MetXAIHS8PdQR7fdRCrG0RzZ5VicDeT6m2qKj4RoMeFux1kbMKiFSXWTnk9n4aZUS0397WcGMQOxW9LUpJssZkerTXq/XUCu6cXoeyHsNbLkfWy3DlxigpPv95UWkPJhFsi/QgeylYmNb8C4coXyrk0pj30FBKfAmHRdx9Ci3SxI3R02mv+iT+xyN8FbXdeCO6YOWEsWah3O0h5jeZXBaHsX/fmHLbLKnRNV3tPVFtmvdFVBbD+tTQKg72Wh5mNuXaIqflEQ81g3K27XWRqSDb+sL07JgHLXs96R5RueHbGrfQDvOQ/32IEiaRCC1TyccjqBvcnPBb+DtTbnsRIiByOm1yPYYXlYucxi6E3AgP
/// Qd1lrothOeJezYN1TiXKm54T+7f3YOxPa4R9c284p2WstI+kztPUOfHUPvxpy4s580NHnbuoqYShmra4rhbx03b5cjsFCV5MlBPmi0gtBo6cTgzttvgb/8Zroqbf9zV5pb+9LzIvNSfSKDCxdMvjAQIDyXnjv/x//o7Zw4Tm3h+h4akg9a83riM+I1IU7AGKVJSN7j2wYHI5b9GR522NNy91zeRG3PsxR3dM3A+I/m5EIAdjgqmJLJ12TOfrv67L8CI+C849M4ukG95K/90WpezOPQjUyK3eFtcH1y/XC/dMjoE1QZvriNlkUi0iPqtjyvhTX5U/dUU+U+hp9dsF4oW2pz4slBLjT5/e8x8MLsroqgzHlApCd0psPWWOvUpKh92AMUy5G/OlaHLtYHsvkdSa5rI3mQEftzjR3lMryrsvHqAw28wY8N/IHN1jYszxee3zZlvXpmFVfOobXgxopOHdFhFQjCQBrW3xb6fXv/iaohYPUL2I
/// 6O6RGe95N/WQkkrd45HxzcXXSoz/TNqjeXjUl6fCGlMh+yqzQrU0/qOBKc3tcwlVW7THtK/dhGtGuHrSaMO2j22jlYHrQecrDeyRrrcaqQM9anqjjNgH7CVpWLrkug3vKd1Je3Sc+mkyPenE7IBH+HJvGqL6bedaE7uqcKiI7JY3im7yWNBW0/jmf1xaMy/dZ4iq9rq3GzELm6JzPXtUkfJfth3SCHLbX7OO1t09h72XVILohWG96etZnfQ81azlQuIeNLypVX3Dy3jkFufeU1PDFjvHNgTpVWdmTud9ybjYLqcebx+RXaY54iLrbnprllijRmR/aQ2xBdX53gwvH1cIuyFHdV/rVcUWgti2WGDXYoq8lQYvVDuGvb92/nNL8TA5Pyd/XgBqDXounYnz1Da8EDvrN1RDDS8pq1Obiy1RAwOB805KnX7drXGz+5et424hHkxi00jqlcjZiHyb8MVbo6GkSX5/S6hZDWK7KbMgKnfDXpu+
/// ZGo9HXYRbJuRXbl60+zI+IWlNkxPZdjnclMbxv0utjG8PeTGDi9nGT9T2ZMGVg6bV1qLJ57zpU2WjF80LVaqbouplNhmH14yJDd2tLa6oXSAr8aNjOQ3K8dGPqvdnKMbKrQWK/dn1bY9hm33EqLkxVof27aIjK/9ehtd8u4kXiu9h0hiTbFwetysVxvD20OawLj67X1Uk4rWiNk8N3S5jQzV6QLRSwZz0j6NgYoYxTpaZSE1pV21hrtpL/qAWYv8fpYQ+dFNG27YDZp83rVWHphcgmwotv3oJg8tNbmixTFsm3RgW2s6yBelZxLu4Q/dl2J6p1UbamN4a5f8yml8wyKOKb+tNWjCWgOvt5fb2BCxcvFW2tJ6iDU+Q8Xn8nDaozjiWxKeEqka5dpeziV22uq1NEpT7EZ927Q2E0IksUp6jI2zxtSQctPye9i2echa2/X22axFaudwQ3cJOZjTWuu2MbzUwm29sHC84YU+mmSV1vmKFVnm
/// L9JZVyMKL8SdO86aIo80Pl2kj2PtY5bAy7lEdaIbVl+yEnbDJvK2lkgvtVdjZ0G2SPmpazK9r6dDC8PGwPSuJb0hJrK7j5eMXPNq++lrgFoYXohd3zFE0wwvrCvSO2NRsucNzS25sfx2w/4D0/qCRnXOZWw1gjH6NO1RW2JvLu+mUbrBbtxryLE04zmv1u5UbOylVyKgdfJT6XDCsbFo5LH0Em8fpcOphzc6IrUt97uyRBElnRbZ3dDO8JLmmHtfLU03vNDPPX+qSIEpMFM63/2zI2WaIbTA2/a1nkJicdzw0ixz4LOKi2aOFcfdNi3GC4tHLU5sf3xHsBv4Uk0IpaDCpuGHYvtAY4pabZJLimYk1aLi29i4S3xQoK5weCT8KB6UetvUekp9rpjpml9HvpXhhbZBsXmGF/wBqocmGmPFQ1+htDXPT5l7w2eBV39lps7hyeity3ewSOHxtEexXN1rZdlbuZJ5T/xz8Z7fuf0qoe6btHAz
/// Ny3FuFHuqpvfGdsXcqKpDpHb195ELm0745awfSDFYSlly/hsb6ddb4sHZj4w9fb7PUSUXCuT1tXW8D5qarWocL7hBV+o3nLtzlhRMrXwgm9/gswNNkY8OfTZMnYfL858J+13S2G26jRg8Ke7XiK722qXB+43kajo7mIWddpNnRSHnqO95BwXK5tVkpTXS9mynh8aPjE1ieoew/aHCHmvueSkfNhnWiFfdyzeNArju4SIL+aw7OxvS8MLXkkjYvxzKmN4N3jZshbHMVQsIg8KbrjrL9E6ly9h1fapo/Ep/dYfNCar3nnyyhM9ml3UblEXPyL5fSqhN9Moi8Fu8rSGZco7ZwJaiDxjjEeTXN0x2H7eNL1n6qUqAakfGN1uZ96odmD7h/HtJUqOASftYla3uSq48WIFfquykqdE104MVflgTmvDCx7prd0opKzhBWog+zXUU5oD187zaQ8DKdvekDB0X61j/SKNNDhDRcmxkAL5WfopS0L+
/// E7Wfiazvm+/6D0nUgNzdh5IistG07u4c7Ib/rAmz1MK8kTOJ6TYj1L/R3cf2G+P7a9OfTLnjixYPCRjvPqbiB5Ci5Fxz1DquHfXlwYDr7fUlXm/2O8OCa4I4/K6WCFpNFSaUyPP42rpj8OBcRPfT8eln3rQJ4xs1S7ituJlQP6f4v1bpGpw/rt/Ya2eH8j2YOXntUxz8B+ENU42L8pTIc65X0cKf3nppV8l1db+u8OG03MS6ejPwJ8n9/Syl5S7i3MJMAOaNHF/SHZjmzRmGEsJYYzpIDViMUTtFil7+3PSRifJpueMuJbbPODbeAk3bFuy/Hccv0vFEnTceRnig49pexfV2DzcumF+qzvCbG5n2wLYZg+AWY8bXjQe/rxE0wmDjMUqICOf0EpkeTOMc4DM495g3AjzsJ/cZxiASzziYdbwIQZ9T4vzyAMN7eH18Z1LKoXqJTj5TmiWxH7nPvoT4/PAnrKNqVLazfJtZThgffp1FWdv4
/// 6lZKcfRQ1oV8lHrnwHNTe5nqouxd/oL2aTnymPly1csxjI16l5966gAzBlR1IApH9BKzgBnBBGNWicrmjMW2eA2v5T1MYRPNY1uYwnozHg1I5pfFWhis35gw90QyOR9EGHPna1/kCPN6Irg8gLAd0gFuhzZCaEg6bywM5Dg5Xo6b4+c8nMuZ5rxuzhfnm/dz/u1zWPZDwSDcvLAgnYXKrNHhPszvLAaK4MtQM4PxwnBh2jBxmCHSFahuE18vPocH5zC+3ONLiG3FzEh7wI0xSMXgfoc55nMh6HNK3MN5LeJBpu6Mue83+0E6JPfozUMG187QhZO8jtdj8vFABLl4KHjCNK6ldBgxq9b50vCFi88nux+e78HoctzTi2xPwS9QLrLc/tQWP67nu6n5j+cj6f/F4k+wUSud+UHopslEJGkamggwhgQjTFQOY7Kvl0yYWvKDea0Z5w4XA1UmRTJZLMh54fxwnnLnj/PK+cUwP3YRZu0E6bzZ
/// ebh3PjgvnLv988XfaLBi5/eyz9cOboK5P2JkSOnCDBNh435JcGhbmFpqz5KGhlHrK0VR1McfDDDi3ENZBH/s2uHvXFu8jtfXif5Pwp+eeBLM3dDniqdKtk2XL75IZZ4Q/QmKKQVydDFZubFri6eZOiYO/Eeph+YZGzEd86O0d33gxnpuo5VTejqNJIQQQojucWcemb+xEeYXk8pTAukUmGBC+MefJt2QMyXAPhLN5P2RJmasyGuqmHxt+HlonaO8LSKd5yO7NfEpmsi83e46qgkhhBDiHJ5rkbuxR4qpZiK05J9ihjGPFEkmf4T/j/i3nszdRqRQ1K024Kafc5Lbn1Zif/rLyYxdwNdHi2QhhBBCTKCPMl69C4NOhPrBdNbi8fQFcqJz+9NSPJj0l68Ta3aJZtdLXRFCCCFEYTzJndV1uRv9pYscVaLgtfN0KXvSY3vJ/troenpM5PXLTMPyWmoLIYQQYg9f6ENJktwN/xJFvjBlrWoa
/// XVY6Ug6ml+oL22Kf+uuu5yuRo3O7K3SEEUIIIUQdPLLYS/WDVsL0szisXgctLx3DdHyNBYRTRI51Vz367+FlUSgJl9vnUuq7hbYQQgghJuALpC7N9JI6QF4qNefqFNn2AtUYa8xkbp96UXznl7F4jckauc0vphGFEEIIsTq8bNglmF6mwulOU6c7mpfMoiwbiwR7rECxLYx4X/V1waO6NXrJK7IrhBBCrB7PJ11jTi9T4DRuoMNMfNs7N7mkLJCb20sb4FMiV/eNtPf94Ocwsr7uRhz/c2lUIYQQQqwen3ZfQ/WGTcoC7fDic1F9yp2We7RvXoLJ3YjI8610FH3g/bhrdZajxnJ/UW0hhBBCBOMlyzBuOYPQs4jUYXKpnRvbDcx7TxOBpHwZDTR6T1fYF+epr7Jb3t+dc5nb3wjxYKc6u0IIIcRF48YxZxR60l9MLGZiMVhcpNLrvpKLi8El+khTgl4rLJwSJq9ue+RTeGScKHztrnJE
/// tussVhRCCCFE5/hitp5a3LKwjigg9XKJsJbNyfXILbnMpCf8yoQxYjHX0iK4++Kc9WF0/RxzfinLVvu8Mp5q7AohhBBiD+rTehewmhFNxiKKytQ7YxPBpXzavKgcbYI9WouRxzCzkO0t0wcmxiKns8duZ1PEcWDYf5qOvh1+zjG5nGc+19z+RovPt051DiGEEEIsFF9MVCPai9mlWgRVDp4x0VmLBhn8F9OLUUWkGGzE/6emLiWsEOkYRGjZBiaLNARW/GNoiRJHNy9oKY6RY7+ZPrn6eBSXz4pIPEazZYSc3O5X0p4JIYQQQgzAcy6jDQzRSUzpWqKt0cLUYeqJoj6YPql6+AMJDx2bHGdMd24/a4tUjr6qUAghhBBiIfhiI1IBMFo5oyHFi4cBFqGR7vFo+mRi8RrD5DgTTSeKTsoEUf/empYwQ/Bk2mshhBBCiBl4biZpA0tf1LUUEfXG5BJJjSm95qaWBxpSSEgpwdjyGRMtpcZw
/// zw85GG/294F0NEIIIYQQhfCGFRiNNXZqay3SA4ikkps8b3reayzzWd0ykZNNpJYUFaL11F4m35bPkHJvS8pzxuiSt3wjHakQQgghRBBuqIgKUnJK6Q7jxYI9DC55sERxT3cB8/NN5Qkiso+ZiMpSgYLPgFQHFo29bdpeuPdnE5/NEusI7+tvJsy6GkgIIYQQogGe7kD0kDq2azBXJcX5QBi2Tek1IrhEXX3R2f2awFQ7YDEa5xIDy2tptsH7OLdEZCn1RVrJpZxnjpnzUX+BnhBCCCHEAR6FJOrIlDMG7dIrL2BMMWwYViLh5McSheW/GFmisBjYTZUKPSy4OBfkERO9Vpc0IYQQQnSMRy2Zbsfs9VK+qpYwrxhZtJa0gmjxcMDDkppGCCGEEGKB+LT90yYinEQ8eytvJbUREW7yjrk2VHFBCCGEECvC835pYECuKousMD6Kgl6GWEy3MbkPpStCCCGEEGLleASYygOkQLBYi/xWosAy
/// wcsXaR18nlRZoD20FqAJIYQQQtzDS3ARBWaVPiaYRgxEB9WGuG9hcGlcQU1hHmCUkyuEEEIIMRiPBFMJgvJdpENQ7YCKEDRQUDS4jahGQQR3U3KNSL3ycYUQQgghiuI5wdSxfcFEIweii0SEWfmvdsjlRJoJDxhU3uCBgw5u87rCCSGEEEKIGXh3spsmosKYM8wwkUgMG4aYcmkqG7YrUkZolEHUdlM/eNMsgwcL1cYVQgghhFgMV9c3TNQL3m/TuzHFmD7yUTcdzpaeP4yxx+CTAkL0G9NPNJxyceRKcw5ISVALXyGEEEKIi4F8VF9A95gJY0ykE2NI1PM1E80SMIzvmzCPGGVqDW9SKr4yEUkmHaC02O5mDMakQxl5zZT9Yp/YN/aRVA8WALL/GHwitcqzFUIIIUSHfOc7/x9Q8YyC+ctAjwAAAABJRU5ErkJgggGwCFBFUmhkR0ZUWlhRZ1RtRnRaVDBpYzNGc1JHRjBZVk52ZFhK
/// alpURWlQanhXYVdWM0lFNWhiV1U5SWxOd1lYSnJYMFpwYkhSbGNtVmtYMFYyWlc1MFRHOW5aMlZ5SWo0OFJtbGxiR1FnVG1GdFpUMGlUMGxFSWlCVWVYQmxQU0pKYm5Rek1pSWdMejQ4Um1sbGJHUWdUbUZ0WlQwaVJYWmxiblJFWVhSbFZHbHRaU0lnVkhsd1pUMGlSR0YwWlZScGJXVWlJQzgrUEVacFpXeGtJRTVoYldVOUlrVjJaVzUwVFdWemMyRm5aU0lnVkhsd1pUMGlVM1J5YVc1bklpQXZQand2Vm1sbGR6NDhWbWxsZHlCT1lXMWxQU0pUY0dGeWExOUdhV3gwWlhKbFpGOVdVMUo0ZUNJK1BFWnBaV3hrSUU1aGJXVTlJa3h2WTJGc1ZHbHRaVU52YkNJZ1ZIbHdaVDBpUkdGMFpWUnBiV1VpSUM4K1BFWnBaV3hrSUU1aGJXVTlJa05vWVcxaVgxQnlaWE56WDFaVFVp
/// SWdWSGx3WlQwaVUybHVaMnhsSWlBdlBqeEdhV1ZzWkNCT1lXMWxQU0pEYUdGdGNGOVVaVzF3WDFaVFVpSWdWSGx3WlQwaVNXNTBNVFlpSUM4K1BFWnBaV3hrSUU1aGJXVTlJa052Y21OclgxUmxiWEJmVmxOU0lpQlVlWEJsUFNKSmJuUXhOaUlnTHo0OFJtbGxiR1FnVG1GdFpUMGlVSFZ0Y0Y5UWNtVnpjMTlXVTFJaUlGUjVjR1U5SWxOcGJtZHNaU0lnTHo0OEwxWnBaWGMrUEZacFpYY2dUbUZ0WlQwaVUzQmhjbXRmUm1sc2RHVnlaV1JmVkhKbFlYUnRaVzUwWDFaVFVuaDRJajQ4Um1sbGJHUWdUbUZ0WlQwaVZsTlNJaUJVZVhCbFBTSlRkSEpwYm1jaUlDOCtQRVpwWld4a0lFNWhiV1U5SWxOMFlYSjBJRlJwYldVaUlGUjVjR1U5SWxOMGNtbHVaeUlnTHo0OFJtbGxi
/// R1FnVG1GdFpUMGlVM1JoY25RZ1JHRjBaU0lnVkhsd1pUMGlVM1J5YVc1bklpQXZQanhHYVdWc1pDQk9ZVzFsUFNKRmJtUWdWR2x0WlNJZ1ZIbHdaVDBpVTNSeWFXNW5JaUF2UGp4R2FXVnNaQ0JPWVcxbFBTSkZibVFnUkdGMFpTSWdWSGx3WlQwaVUzUnlhVzVuSWlBdlBqeEdhV1ZzWkNCT1lXMWxQU0pNYjJOaGJGUnBiV1ZEYjJ3aUlGUjVjR1U5SWtSaGRHVlVhVzFsSWlBdlBqeEdhV1ZzWkNCT1lXMWxQU0pUZEdGMGRYTWlJRlI1Y0dVOUlsTjBjbWx1WnlJZ0x6NDhMMVpwWlhjK1BDOUVZWFJoVTJWMFBnPT0=</Resource>
///   </Resources>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class XtraReport : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.XRLine line17;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.DetailBand detailBand1;
        private DevExpress.XtraReports.UI.DetailReportBand detailReportBand1;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand1;
        private DevExpress.XtraReports.UI.XRPanel panel1;
        private DevExpress.XtraReports.UI.XRLine line12;
        private DevExpress.XtraReports.UI.XRLine line13;
        private DevExpress.XtraReports.UI.XRLine line14;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRTable table1;
        private DevExpress.XtraReports.UI.XRTableRow tableRow1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell3;
        private DevExpress.XtraReports.UI.DetailBand detailBand2;
        private DevExpress.XtraReports.UI.XRLine line15;
        private DevExpress.XtraReports.UI.XRLine line16;
        private DevExpress.XtraReports.UI.XRTable table2;
        private DevExpress.XtraReports.UI.XRTableRow tableRow2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell6;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter2;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRLine line10;
        private DevExpress.XtraReports.UI.XRLine line11;
        private DevExpress.DataAccess.Sql.SqlDataSource sqlDataSource1;
        private DevExpress.XtraReports.UI.DetailReportBand detailReportBand2;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand2;
        private DevExpress.XtraReports.UI.XRChart chart6;
        private DevExpress.XtraReports.UI.XRChart chart5;
        private DevExpress.XtraReports.UI.XRChart chart4;
        private DevExpress.XtraReports.UI.XRChart chart3;
        private DevExpress.XtraReports.UI.XRChart chart2;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private DevExpress.XtraReports.UI.DetailBand detailBand3;
        private DevExpress.XtraReports.UI.DetailReportBand detailReportBand3;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand3;
        private DevExpress.XtraReports.UI.XRPanel panel3;
        private DevExpress.XtraReports.UI.XRLine line9;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRTable table5;
        private DevExpress.XtraReports.UI.XRTableRow tableRow5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell17;
        private DevExpress.XtraReports.UI.XRTableCell tableCell18;
        private DevExpress.XtraReports.UI.XRTableCell tableCell19;
        private DevExpress.XtraReports.UI.XRTableCell tableCell20;
        private DevExpress.XtraReports.UI.XRTableCell tableCell21;
        private DevExpress.XtraReports.UI.XRTableCell tableCell7;
        private DevExpress.XtraReports.UI.DetailBand detailBand4;
        private DevExpress.XtraReports.UI.XRLabel label7;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.XRTable table6;
        private DevExpress.XtraReports.UI.XRTableRow tableRow6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell23;
        private DevExpress.XtraReports.UI.XRTableCell tableCell24;
        private DevExpress.XtraReports.UI.XRTableCell tableCell25;
        private DevExpress.XtraReports.UI.XRTableCell tableCell26;
        private DevExpress.XtraReports.UI.XRTableCell tableCell27;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle DetailCaption3;
        private DevExpress.XtraReports.UI.XRControlStyle DetailData3;
        private DevExpress.XtraReports.UI.XRControlStyle DetailData3_Odd;
        private DevExpress.XtraReports.UI.XRControlStyle DetailCaptionBackground3;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private System.Resources.ResourceManager _resources;
        private string _resourceString;
        public XtraReport() {
            this._resourceString = DevExpress.XtraReports.Serialization.XRResourceManager.GetResourceFor("XtraReportSerialization.XtraReport");
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(this._resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.DataAccess.ConnectionParameters.MsSqlConnectionParameters msSqlConnectionParameters1 = new DevExpress.DataAccess.ConnectionParameters.MsSqlConnectionParameters();
            DevExpress.DataAccess.Sql.CustomSqlQuery customSqlQuery1 = new DevExpress.DataAccess.Sql.CustomSqlQuery();
            DevExpress.DataAccess.Sql.CustomSqlQuery customSqlQuery2 = new DevExpress.DataAccess.Sql.CustomSqlQuery();
            DevExpress.DataAccess.Sql.CustomSqlQuery customSqlQuery3 = new DevExpress.DataAccess.Sql.CustomSqlQuery();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series1 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView1 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.Series series2 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView1 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram2 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series3 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView2 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.Series series4 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView2 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram3 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series5 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView3 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram4 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series6 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView4 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram5 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series7 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView5 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram6 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series8 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView6 = new DevExpress.XtraCharts.StackedLineSeriesView();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.detailBand1 = new DevExpress.XtraReports.UI.DetailBand();
            this.detailReportBand1 = new DevExpress.XtraReports.UI.DetailReportBand();
            this.detailReportBand2 = new DevExpress.XtraReports.UI.DetailReportBand();
            this.detailReportBand3 = new DevExpress.XtraReports.UI.DetailReportBand();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.line17 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.groupHeaderBand1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.detailBand2 = new DevExpress.XtraReports.UI.DetailBand();
            this.GroupFooter2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.panel1 = new DevExpress.XtraReports.UI.XRPanel();
            this.line12 = new DevExpress.XtraReports.UI.XRLine();
            this.line13 = new DevExpress.XtraReports.UI.XRLine();
            this.line14 = new DevExpress.XtraReports.UI.XRLine();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.table1 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell2 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line15 = new DevExpress.XtraReports.UI.XRLine();
            this.line16 = new DevExpress.XtraReports.UI.XRLine();
            this.table2 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell4 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell5 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell6 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.line10 = new DevExpress.XtraReports.UI.XRLine();
            this.line11 = new DevExpress.XtraReports.UI.XRLine();
            this.sqlDataSource1 = new DevExpress.DataAccess.Sql.SqlDataSource();
            this.groupHeaderBand2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.detailBand3 = new DevExpress.XtraReports.UI.DetailBand();
            this.chart6 = new DevExpress.XtraReports.UI.XRChart();
            this.chart5 = new DevExpress.XtraReports.UI.XRChart();
            this.chart4 = new DevExpress.XtraReports.UI.XRChart();
            this.chart3 = new DevExpress.XtraReports.UI.XRChart();
            this.chart2 = new DevExpress.XtraReports.UI.XRChart();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.groupHeaderBand3 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.detailBand4 = new DevExpress.XtraReports.UI.DetailBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.panel3 = new DevExpress.XtraReports.UI.XRPanel();
            this.line9 = new DevExpress.XtraReports.UI.XRLine();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.table5 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow5 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell17 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell18 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell19 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell20 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell21 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.table6 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow6 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell23 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell24 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell25 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell26 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell27 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailCaption3 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailData3 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailData3_Odd = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailCaptionBackground3 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            this.label7 = new DevExpress.XtraReports.UI.XRLabel();
            this.tableCell7 = new DevExpress.XtraReports.UI.XRTableCell();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series7)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series8)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pictureBox1});
            this.topMarginBand1.HeightF = 120.3333F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line17,
                        this.pageInfo1,
                        this.pageInfo2,
                        this.label6,
                        this.pictureBox2});
            this.bottomMarginBand1.HeightF = 100F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label2,
                        this.label1});
            this.reportHeaderBand1.HeightF = 74.03506F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // detailBand1
            // 
            this.detailBand1.HeightF = 13.54167F;
            this.detailBand1.Name = "detailBand1";
            // 
            // detailReportBand1
            // 
            this.detailReportBand1.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.groupHeaderBand1,
                        this.detailBand2,
                        this.GroupFooter2});
            this.detailReportBand1.DataMember = "Spark_Filtered_EventLogger";
            this.detailReportBand1.DataSource = this.sqlDataSource1;
            this.detailReportBand1.Expanded = false;
            this.detailReportBand1.Level = 1;
            this.detailReportBand1.Name = "detailReportBand1";
            // 
            // detailReportBand2
            // 
            this.detailReportBand2.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.groupHeaderBand2,
                        this.detailBand3});
            this.detailReportBand2.DataMember = "Spark_Filtered_VSRxx";
            this.detailReportBand2.DataSource = this.sqlDataSource1;
            this.detailReportBand2.Level = 2;
            this.detailReportBand2.Name = "detailReportBand2";
            // 
            // detailReportBand3
            // 
            this.detailReportBand3.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.groupHeaderBand3,
                        this.detailBand4,
                        this.GroupFooter1});
            this.detailReportBand3.DataMember = "Spark_Filtered_Treatment_VSRxx";
            this.detailReportBand3.DataSource = this.sqlDataSource1;
            this.detailReportBand3.Level = 0;
            this.detailReportBand3.Name = "detailReportBand3";
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(154.6864F, 29.46969F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(410.6273F, 82.49204F);
            this.pictureBox1.Sizing = DevExpress.XtraPrinting.ImageSizeMode.Squeeze;
            // 
            // line17
            // 
            this.line17.LineWidth = 2;
            this.line17.LocationFloat = new DevExpress.Utils.PointFloat(0.0001589457F, 0F);
            this.line17.Name = "line17";
            this.line17.SizeF = new System.Drawing.SizeF(719.9998F, 7.375015F);
            // 
            // pageInfo1
            // 
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10.00001F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 23F);
            this.pageInfo1.StyleName = "PageInfo";
            // 
            // pageInfo2
            // 
            this.pageInfo2.Format = "Page {0} of {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(406.9999F, 10.00001F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(313F, 23F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label6
            // 
            this.label6.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label6.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 32.99983F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(68F, 18F);
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseForeColor = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "Powered by:";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(68F, 32.99983F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.pictureBox2.Sizing = DevExpress.XtraPrinting.ImageSizeMode.Squeeze;
            // 
            // label2
            // 
            this.label2.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.label2.BorderColor = System.Drawing.Color.Transparent;
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.VSR")});
            this.label2.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(438.6864F, 10.00001F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(281.3135F, 59.33335F);
            this.label2.StylePriority.UseBackColor = false;
            this.label2.StylePriority.UseBorderColor = false;
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseForeColor = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label1
            // 
            this.label1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.label1.BorderColor = System.Drawing.Color.Transparent;
            this.label1.BorderWidth = 0F;
            this.label1.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10.00001F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(438.6864F, 59.33332F);
            this.label1.StyleName = "Title";
            this.label1.StylePriority.UseBackColor = false;
            this.label1.StylePriority.UseBorderColor = false;
            this.label1.StylePriority.UseBorderWidth = false;
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseForeColor = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "Report of VL,";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // groupHeaderBand1
            // 
            this.groupHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.panel1});
            this.groupHeaderBand1.GroupUnion = DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail;
            this.groupHeaderBand1.HeightF = 129.4073F;
            this.groupHeaderBand1.Name = "groupHeaderBand1";
            // 
            // detailBand2
            // 
            this.detailBand2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line15,
                        this.line16,
                        this.table2});
            this.detailBand2.HeightF = 25F;
            this.detailBand2.Name = "detailBand2";
            // 
            // GroupFooter2
            // 
            this.GroupFooter2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line6,
                        this.line10,
                        this.line11});
            this.GroupFooter2.HeightF = 12F;
            this.GroupFooter2.Name = "GroupFooter2";
            // 
            // panel1
            // 
            this.panel1.BorderWidth = 0F;
            this.panel1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line12,
                        this.line13,
                        this.line14,
                        this.label5,
                        this.table1});
            this.panel1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.panel1.Name = "panel1";
            this.panel1.SizeF = new System.Drawing.SizeF(719.9999F, 129.4073F);
            this.panel1.StyleName = "DetailCaptionBackground3";
            this.panel1.StylePriority.UseBorderWidth = false;
            // 
            // line12
            // 
            this.line12.BorderWidth = 0F;
            this.line12.ForeColor = System.Drawing.Color.Red;
            this.line12.LineWidth = 2;
            this.line12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 99.8959F);
            this.line12.Name = "line12";
            this.line12.SizeF = new System.Drawing.SizeF(720F, 2.125916F);
            this.line12.StylePriority.UseBorderWidth = false;
            this.line12.StylePriority.UseForeColor = false;
            // 
            // line13
            // 
            this.line13.ForeColor = System.Drawing.Color.Red;
            this.line13.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line13.LineWidth = 2;
            this.line13.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 102.0218F);
            this.line13.Name = "line13";
            this.line13.SizeF = new System.Drawing.SizeF(2.125854F, 28.00001F);
            this.line13.StylePriority.UseForeColor = false;
            // 
            // line14
            // 
            this.line14.ForeColor = System.Drawing.Color.Red;
            this.line14.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line14.LineWidth = 2;
            this.line14.LocationFloat = new DevExpress.Utils.PointFloat(0F, 102.0217F);
            this.line14.Name = "line14";
            this.line14.SizeF = new System.Drawing.SizeF(2.125854F, 28.00005F);
            this.line14.StylePriority.UseForeColor = false;
            // 
            // label5
            // 
            this.label5.BackColor = System.Drawing.Color.Red;
            this.label5.BorderColor = System.Drawing.Color.Transparent;
            this.label5.BorderWidth = 0F;
            this.label5.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label5.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 38.56259F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(217.3927F, 59.33333F);
            this.label5.StyleName = "Title";
            this.label5.StylePriority.UseBackColor = false;
            this.label5.StylePriority.UseBorderColor = false;
            this.label5.StylePriority.UseBorderWidth = false;
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseForeColor = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "Alarms";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // table1
            // 
            this.table1.LocationFloat = new DevExpress.Utils.PointFloat(2.125852F, 102.0218F);
            this.table1.Name = "table1";
            this.table1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow1});
            this.table1.SizeF = new System.Drawing.SizeF(715.7483F, 27.99999F);
            // 
            // tableRow1
            // 
            this.tableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell1,
                        this.tableCell2,
                        this.tableCell3});
            this.tableRow1.Name = "tableRow1";
            this.tableRow1.Weight = 1D;
            // 
            // tableCell1
            // 
            this.tableCell1.BackColor = System.Drawing.Color.Red;
            this.tableCell1.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell1.Name = "tableCell1";
            this.tableCell1.StyleName = "DetailCaption3";
            this.tableCell1.StylePriority.UseBackColor = false;
            this.tableCell1.StylePriority.UseFont = false;
            this.tableCell1.StylePriority.UseForeColor = false;
            this.tableCell1.StylePriority.UseTextAlignment = false;
            this.tableCell1.Text = "OID";
            this.tableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell1.Weight = 0.10628080929377688D;
            // 
            // tableCell2
            // 
            this.tableCell2.BackColor = System.Drawing.Color.Red;
            this.tableCell2.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell2.Name = "tableCell2";
            this.tableCell2.StyleName = "DetailCaption3";
            this.tableCell2.StylePriority.UseBackColor = false;
            this.tableCell2.StylePriority.UseFont = false;
            this.tableCell2.StylePriority.UseForeColor = false;
            this.tableCell2.Text = "Alarm Date Time";
            this.tableCell2.Weight = 0.20435723779149748D;
            // 
            // tableCell3
            // 
            this.tableCell3.BackColor = System.Drawing.Color.Red;
            this.tableCell3.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell3.Name = "tableCell3";
            this.tableCell3.StyleName = "DetailCaption3";
            this.tableCell3.StylePriority.UseBackColor = false;
            this.tableCell3.StylePriority.UseFont = false;
            this.tableCell3.StylePriority.UseForeColor = false;
            this.tableCell3.Text = "Alarm Message";
            this.tableCell3.Weight = 0.67090044901166013D;
            // 
            // line15
            // 
            this.line15.ForeColor = System.Drawing.Color.Red;
            this.line15.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line15.LineWidth = 2;
            this.line15.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 0F);
            this.line15.Name = "line15";
            this.line15.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line15.StylePriority.UseForeColor = false;
            // 
            // line16
            // 
            this.line16.BorderColor = System.Drawing.Color.Red;
            this.line16.ForeColor = System.Drawing.Color.Red;
            this.line16.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line16.LineWidth = 2;
            this.line16.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line16.Name = "line16";
            this.line16.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line16.StylePriority.UseBorderColor = false;
            this.line16.StylePriority.UseForeColor = false;
            // 
            // table2
            // 
            this.table2.LocationFloat = new DevExpress.Utils.PointFloat(2.125899F, 0F);
            this.table2.Name = "table2";
            this.table2.OddStyleName = "DetailData3_Odd";
            this.table2.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow2});
            this.table2.SizeF = new System.Drawing.SizeF(715.7481F, 25F);
            // 
            // tableRow2
            // 
            this.tableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell4,
                        this.tableCell5,
                        this.tableCell6});
            this.tableRow2.Name = "tableRow2";
            this.tableRow2.Weight = 11.5D;
            // 
            // tableCell4
            // 
            this.tableCell4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_EventLogger.OID")});
            this.tableCell4.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell4.Name = "tableCell4";
            this.tableCell4.StyleName = "DetailData3";
            this.tableCell4.StylePriority.UseFont = false;
            this.tableCell4.StylePriority.UseTextAlignment = false;
            this.tableCell4.Text = "tableCell4";
            this.tableCell4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell4.Weight = 0.1062807506061248D;
            // 
            // tableCell5
            // 
            this.tableCell5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_EventLogger.EventDateTime")});
            this.tableCell5.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell5.Name = "tableCell5";
            this.tableCell5.StyleName = "DetailData3";
            this.tableCell5.StylePriority.UseFont = false;
            this.tableCell5.Text = "tableCell5";
            this.tableCell5.Weight = 0.20435729647914985D;
            // 
            // tableCell6
            // 
            this.tableCell6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_EventLogger.EventMessage")});
            this.tableCell6.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell6.Name = "tableCell6";
            this.tableCell6.StyleName = "DetailData3";
            this.tableCell6.StylePriority.UseFont = false;
            this.tableCell6.Text = "tableCell6";
            this.tableCell6.Weight = 0.67090063681214285D;
            // 
            // line6
            // 
            this.line6.BorderWidth = 0F;
            this.line6.ForeColor = System.Drawing.Color.Red;
            this.line6.LineWidth = 2;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 9.99999F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(719.9999F, 2F);
            this.line6.StylePriority.UseBorderWidth = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // line10
            // 
            this.line10.ForeColor = System.Drawing.Color.Red;
            this.line10.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line10.LineWidth = 2;
            this.line10.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line10.Name = "line10";
            this.line10.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line10.StylePriority.UseForeColor = false;
            // 
            // line11
            // 
            this.line11.ForeColor = System.Drawing.Color.Red;
            this.line11.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line11.LineWidth = 2;
            this.line11.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 0F);
            this.line11.Name = "line11";
            this.line11.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line11.StylePriority.UseForeColor = false;
            // 
            // sqlDataSource1
            // 
            this.sqlDataSource1.ConnectionName = "localhost_ScadaAC_Connection";
            msSqlConnectionParameters1.AuthorizationType = DevExpress.DataAccess.ConnectionParameters.MsSqlAuthorizationType.SqlServer;
            msSqlConnectionParameters1.DatabaseName = "ScadaAC";
            msSqlConnectionParameters1.Password = "WkIlE!A2njfa";
            msSqlConnectionParameters1.ServerName = "AMR-DBVM16";
            msSqlConnectionParameters1.UserName = "scada";
            this.sqlDataSource1.ConnectionParameters = msSqlConnectionParameters1;
            this.sqlDataSource1.Name = "sqlDataSource1";
            customSqlQuery1.Name = "Spark_Filtered_EventLogger";
            customSqlQuery1.Sql = "select \"VL_Filtered_EventLogger\".\"OID\",\r\n       \"VL_Filtered_EventLogger\".\"EventD" +
                "ateTime\",\r\n       \"VL_Filtered_EventLogger\".\"EventMessage\"\r\n  from \"dbo\".\"VL_Fil" +
                "tered_EventLogger\"";
            customSqlQuery2.Name = "Spark_Filtered_VSRxx";
            customSqlQuery2.Sql = resources.GetString("customSqlQuery2.Sql");
            customSqlQuery3.Name = "Spark_Filtered_Treatment_VSRxx";
            customSqlQuery3.Sql = resources.GetString("customSqlQuery3.Sql");
            this.sqlDataSource1.Queries.AddRange(new DevExpress.DataAccess.Sql.SqlQuery[] {
                        customSqlQuery1,
                        customSqlQuery2,
                        customSqlQuery3});
            this.sqlDataSource1.ResultSchemaSerializable = resources.GetString("sqlDataSource1.ResultSchemaSerializable");
            // 
            // groupHeaderBand2
            // 
            this.groupHeaderBand2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart6,
                        this.chart5,
                        this.chart4,
                        this.chart3,
                        this.chart2,
                        this.label4,
                        this.chart1});
            this.groupHeaderBand2.GroupUnion = DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail;
            this.groupHeaderBand2.HeightF = 2609.478F;
            this.groupHeaderBand2.Name = "groupHeaderBand2";
            this.groupHeaderBand2.PageBreak = DevExpress.XtraReports.UI.PageBreak.BeforeBand;
            // 
            // detailBand3
            // 
            this.detailBand3.HeightF = 25F;
            this.detailBand3.Name = "detailBand3";
            // 
            // chart6
            // 
            this.chart6.BorderColor = System.Drawing.Color.Black;
            this.chart6.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram1.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram1.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram1.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram1.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram1.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram1.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart6.Diagram = xYDiagram1;
            this.chart6.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart6.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart6.Legend.Name = "Default Legend";
            this.chart6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2219.478F);
            this.chart6.Name = "chart6";
            this.chart6.PaletteName = "Civic";
            series1.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series1.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series1.Name = "Corck Temperatue";
            series1.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Corck_Temp_VSR";
            stackedLineSeriesView1.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series1.View = stackedLineSeriesView1;
            series2.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series2.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series2.Name = "Chamber Termprature";
            series2.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Champ_Temp_VSR";
            lineSeriesView1.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series2.View = lineSeriesView1;
            this.chart6.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series1,
                    series2};
            this.chart6.SizeF = new System.Drawing.SizeF(719.9999F, 380F);
            // 
            // chart5
            // 
            this.chart5.BorderColor = System.Drawing.Color.Black;
            this.chart5.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram2.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram2.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram2.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram2.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram2.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram2.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram2.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram2.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart5.Diagram = xYDiagram2;
            this.chart5.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart5.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart5.Legend.Name = "Default Legend";
            this.chart5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 1813.227F);
            this.chart5.Name = "chart5";
            series3.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series3.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series3.Name = "Chamber Pressure";
            series3.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Chamb_Press_VSR";
            stackedLineSeriesView2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(172)))), ((int)(((byte)(198)))));
            stackedLineSeriesView2.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series3.View = stackedLineSeriesView2;
            series4.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series4.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series4.Name = "Pump Pressure";
            series4.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Pump_Press_VSR";
            lineSeriesView2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(31)))), ((int)(((byte)(73)))), ((int)(((byte)(125)))));
            lineSeriesView2.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series4.View = lineSeriesView2;
            this.chart5.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series3,
                    series4};
            this.chart5.SizeF = new System.Drawing.SizeF(720F, 380F);
            // 
            // chart4
            // 
            this.chart4.BorderColor = System.Drawing.Color.Black;
            this.chart4.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram3.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram3.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram3.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram3.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram3.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram3.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram3.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram3.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart4.Diagram = xYDiagram3;
            this.chart4.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart4.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart4.Legend.Name = "Default Legend";
            this.chart4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 492.5833F);
            this.chart4.Name = "chart4";
            series5.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series5.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series5.Name = "Pump Pressure";
            series5.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Pump_Press_VSR";
            stackedLineSeriesView3.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series5.View = stackedLineSeriesView3;
            this.chart4.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series5};
            this.chart4.SizeF = new System.Drawing.SizeF(719.9999F, 379.9999F);
            // 
            // chart3
            // 
            this.chart3.BorderColor = System.Drawing.Color.Black;
            this.chart3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram4.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram4.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram4.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram4.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram4.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram4.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram4.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram4.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart3.Diagram = xYDiagram4;
            this.chart3.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart3.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart3.Legend.Name = "Default Legend";
            this.chart3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 1347F);
            this.chart3.Name = "chart3";
            this.chart3.PaletteName = "Civic";
            series6.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series6.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series6.Name = "Corck Temperatue";
            series6.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Corck_Temp_VSR";
            stackedLineSeriesView4.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series6.View = stackedLineSeriesView4;
            this.chart3.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series6};
            this.chart3.SizeF = new System.Drawing.SizeF(719.9999F, 380F);
            // 
            // chart2
            // 
            this.chart2.BorderColor = System.Drawing.Color.Black;
            this.chart2.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram5.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram5.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram5.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram5.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram5.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram5.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram5.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram5.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart2.Diagram = xYDiagram5;
            this.chart2.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart2.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart2.Legend.Name = "Default Legend";
            this.chart2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 944.0833F);
            this.chart2.Name = "chart2";
            this.chart2.PaletteName = "Civic";
            series7.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series7.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series7.Name = "Chamber Temperatue";
            series7.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Champ_Temp_VSR";
            stackedLineSeriesView5.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series7.View = stackedLineSeriesView5;
            this.chart2.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series7};
            this.chart2.SizeF = new System.Drawing.SizeF(720F, 380F);
            // 
            // label4
            // 
            this.label4.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(192)))));
            this.label4.BorderColor = System.Drawing.Color.Transparent;
            this.label4.BorderWidth = 0F;
            this.label4.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 36.66667F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(217.3927F, 59.33333F);
            this.label4.StyleName = "Title";
            this.label4.StylePriority.UseBackColor = false;
            this.label4.StylePriority.UseBorderColor = false;
            this.label4.StylePriority.UseBorderWidth = false;
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseForeColor = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "Figures";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // chart1
            // 
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram6.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram6.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram6.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram6.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram6.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram6.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram6.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram6.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart1.Diagram = xYDiagram6;
            this.chart1.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart1.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart1.Legend.Name = "Default Legend";
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 98F);
            this.chart1.Name = "chart1";
            series8.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series8.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series8.Name = "Chamber Pressure";
            series8.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Chamb_Press_VSR";
            stackedLineSeriesView6.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series8.View = stackedLineSeriesView6;
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series8};
            this.chart1.SizeF = new System.Drawing.SizeF(720F, 380F);
            // 
            // groupHeaderBand3
            // 
            this.groupHeaderBand3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.panel3});
            this.groupHeaderBand3.GroupUnion = DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail;
            this.groupHeaderBand3.HeightF = 127.1667F;
            this.groupHeaderBand3.Name = "groupHeaderBand3";
            // 
            // detailBand4
            // 
            this.detailBand4.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label7,
                        this.line5,
                        this.line4,
                        this.table6});
            this.detailBand4.HeightF = 25F;
            this.detailBand4.Name = "detailBand4";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line3,
                        this.line2,
                        this.line1});
            this.GroupFooter1.HeightF = 12.16399F;
            this.GroupFooter1.Name = "GroupFooter1";
            // 
            // panel3
            // 
            this.panel3.BorderWidth = 0F;
            this.panel3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line9,
                        this.line8,
                        this.line7,
                        this.label3,
                        this.table5});
            this.panel3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.panel3.Name = "panel3";
            this.panel3.SizeF = new System.Drawing.SizeF(719.9999F, 127.1667F);
            this.panel3.StyleName = "DetailCaptionBackground3";
            this.panel3.StylePriority.UseBorderWidth = false;
            // 
            // line9
            // 
            this.line9.BorderWidth = 0F;
            this.line9.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line9.LineWidth = 2;
            this.line9.LocationFloat = new DevExpress.Utils.PointFloat(0F, 97.04079F);
            this.line9.Name = "line9";
            this.line9.SizeF = new System.Drawing.SizeF(720F, 2.125916F);
            this.line9.StylePriority.UseBorderWidth = false;
            this.line9.StylePriority.UseForeColor = false;
            // 
            // line8
            // 
            this.line8.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line8.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line8.LineWidth = 2;
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(717.874F, 99.16676F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(2.125854F, 28.00001F);
            this.line8.StylePriority.UseForeColor = false;
            // 
            // line7
            // 
            this.line7.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line7.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line7.LineWidth = 2;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 99.16671F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(2.125854F, 28.00005F);
            this.line7.StylePriority.UseForeColor = false;
            // 
            // label3
            // 
            this.label3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.label3.BorderColor = System.Drawing.Color.Transparent;
            this.label3.BorderWidth = 0F;
            this.label3.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 35.70745F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(217.3927F, 59.33333F);
            this.label3.StyleName = "Title";
            this.label3.StylePriority.UseBackColor = false;
            this.label3.StylePriority.UseBorderColor = false;
            this.label3.StylePriority.UseBorderWidth = false;
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseForeColor = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "Treatment";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // table5
            // 
            this.table5.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.table5.LocationFloat = new DevExpress.Utils.PointFloat(2.125875F, 99.16676F);
            this.table5.Name = "table5";
            this.table5.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow5});
            this.table5.SizeF = new System.Drawing.SizeF(715.501F, 28F);
            this.table5.StylePriority.UseForeColor = false;
            // 
            // tableRow5
            // 
            this.tableRow5.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell17,
                        this.tableCell18,
                        this.tableCell19,
                        this.tableCell20,
                        this.tableCell21,
                        this.tableCell7});
            this.tableRow5.Name = "tableRow5";
            this.tableRow5.Weight = 1D;
            // 
            // tableCell17
            // 
            this.tableCell17.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell17.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell17.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell17.Name = "tableCell17";
            this.tableCell17.StyleName = "DetailCaption3";
            this.tableCell17.StylePriority.UseBackColor = false;
            this.tableCell17.StylePriority.UseFont = false;
            this.tableCell17.StylePriority.UseForeColor = false;
            this.tableCell17.Text = "VSR";
            this.tableCell17.Weight = 0.081320895632257417D;
            // 
            // tableCell18
            // 
            this.tableCell18.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell18.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell18.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell18.Name = "tableCell18";
            this.tableCell18.StyleName = "DetailCaption3";
            this.tableCell18.StylePriority.UseBackColor = false;
            this.tableCell18.StylePriority.UseFont = false;
            this.tableCell18.StylePriority.UseForeColor = false;
            this.tableCell18.Text = "Treatment Start";
            this.tableCell18.Weight = 0.13640731325022834D;
            // 
            // tableCell19
            // 
            this.tableCell19.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell19.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell19.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell19.Name = "tableCell19";
            this.tableCell19.StyleName = "DetailCaption3";
            this.tableCell19.StylePriority.UseBackColor = false;
            this.tableCell19.StylePriority.UseFont = false;
            this.tableCell19.StylePriority.UseForeColor = false;
            this.tableCell19.Text = "Treatment End";
            this.tableCell19.Weight = 0.13640739384773576D;
            // 
            // tableCell20
            // 
            this.tableCell20.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell20.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell20.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell20.Name = "tableCell20";
            this.tableCell20.StyleName = "DetailCaption3";
            this.tableCell20.StylePriority.UseBackColor = false;
            this.tableCell20.StylePriority.UseFont = false;
            this.tableCell20.StylePriority.UseForeColor = false;
            this.tableCell20.Text = "Unload Start";
            this.tableCell20.Weight = 0.13640726582943077D;
            // 
            // tableCell21
            // 
            this.tableCell21.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell21.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell21.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell21.Name = "tableCell21";
            this.tableCell21.StyleName = "DetailCaption3";
            this.tableCell21.StylePriority.UseBackColor = false;
            this.tableCell21.StylePriority.UseFont = false;
            this.tableCell21.StylePriority.UseForeColor = false;
            this.tableCell21.Text = "Unload End";
            this.tableCell21.Weight = 0.13614810585107989D;
            // 
            // line5
            // 
            this.line5.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line5.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line5.LineWidth = 2;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line5.StylePriority.UseForeColor = false;
            // 
            // line4
            // 
            this.line4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line4.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line4.LineWidth = 2;
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 0F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line4.StylePriority.UseForeColor = false;
            // 
            // table6
            // 
            this.table6.LocationFloat = new DevExpress.Utils.PointFloat(2.125875F, 0F);
            this.table6.Name = "table6";
            this.table6.OddStyleName = "DetailData3_Odd";
            this.table6.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow6});
            this.table6.SizeF = new System.Drawing.SizeF(597.501F, 25F);
            // 
            // tableRow6
            // 
            this.tableRow6.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell23,
                        this.tableCell24,
                        this.tableCell25,
                        this.tableCell26,
                        this.tableCell27});
            this.tableRow6.Name = "tableRow6";
            this.tableRow6.Weight = 11.5D;
            // 
            // tableCell23
            // 
            this.tableCell23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.VSR")});
            this.tableCell23.Name = "tableCell23";
            this.tableCell23.StyleName = "DetailData3";
            this.tableCell23.Text = "tableCell23";
            this.tableCell23.Weight = 0.081320895632257417D;
            // 
            // tableCell24
            // 
            this.tableCell24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.Start Date")});
            this.tableCell24.Name = "tableCell24";
            this.tableCell24.StyleName = "DetailData3";
            this.tableCell24.Weight = 0.13640738381829656D;
            // 
            // tableCell25
            // 
            this.tableCell25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.Start Time")});
            this.tableCell25.Name = "tableCell25";
            this.tableCell25.StyleName = "DetailData3";
            this.tableCell25.Weight = 0.13640738492011215D;
            // 
            // tableCell26
            // 
            this.tableCell26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.End Date")});
            this.tableCell26.Name = "tableCell26";
            this.tableCell26.StyleName = "DetailData3";
            this.tableCell26.Weight = 0.1364073883401315D;
            // 
            // tableCell27
            // 
            this.tableCell27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.End Time")});
            this.tableCell27.Name = "tableCell27";
            this.tableCell27.StyleName = "DetailData3";
            this.tableCell27.Weight = 0.13640736957817173D;
            // 
            // line3
            // 
            this.line3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line3.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line3.LineWidth = 2;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(717.874F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line3.StylePriority.UseForeColor = false;
            // 
            // line2
            // 
            this.line2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line2.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line2.LineWidth = 2;
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line2.StylePriority.UseForeColor = false;
            // 
            // line1
            // 
            this.line1.BorderWidth = 0F;
            this.line1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line1.LineWidth = 2;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 9.999997F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(719.9999F, 2F);
            this.line1.StylePriority.UseBorderWidth = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.Transparent;
            this.Title.BorderColor = System.Drawing.Color.Black;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1F;
            this.Title.Font = new System.Drawing.Font("Tahoma", 14F);
            this.Title.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.Title.Name = "Title";
            // 
            // DetailCaption3
            // 
            this.DetailCaption3.BackColor = System.Drawing.Color.Transparent;
            this.DetailCaption3.BorderColor = System.Drawing.Color.Transparent;
            this.DetailCaption3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DetailCaption3.Font = new System.Drawing.Font("Tahoma", 8F, System.Drawing.FontStyle.Bold);
            this.DetailCaption3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.DetailCaption3.Name = "DetailCaption3";
            this.DetailCaption3.Padding = new DevExpress.XtraPrinting.PaddingInfo(6, 6, 0, 0, 100F);
            this.DetailCaption3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // DetailData3
            // 
            this.DetailData3.Font = new System.Drawing.Font("Tahoma", 8F);
            this.DetailData3.ForeColor = System.Drawing.Color.Black;
            this.DetailData3.Name = "DetailData3";
            this.DetailData3.Padding = new DevExpress.XtraPrinting.PaddingInfo(6, 6, 0, 0, 100F);
            this.DetailData3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // DetailData3_Odd
            // 
            this.DetailData3_Odd.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(231)))), ((int)(((byte)(231)))), ((int)(((byte)(231)))));
            this.DetailData3_Odd.BorderColor = System.Drawing.Color.Transparent;
            this.DetailData3_Odd.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DetailData3_Odd.BorderWidth = 1F;
            this.DetailData3_Odd.Font = new System.Drawing.Font("Tahoma", 8F);
            this.DetailData3_Odd.ForeColor = System.Drawing.Color.Black;
            this.DetailData3_Odd.Name = "DetailData3_Odd";
            this.DetailData3_Odd.Padding = new DevExpress.XtraPrinting.PaddingInfo(6, 6, 0, 0, 100F);
            this.DetailData3_Odd.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // DetailCaptionBackground3
            // 
            this.DetailCaptionBackground3.BackColor = System.Drawing.Color.Transparent;
            this.DetailCaptionBackground3.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(206)))), ((int)(((byte)(206)))), ((int)(((byte)(206)))));
            this.DetailCaptionBackground3.Borders = DevExpress.XtraPrinting.BorderSide.Top;
            this.DetailCaptionBackground3.BorderWidth = 2F;
            this.DetailCaptionBackground3.Name = "DetailCaptionBackground3";
            // 
            // PageInfo
            // 
            this.PageInfo.Font = new System.Drawing.Font("Tahoma", 8F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.PageInfo.Name = "PageInfo";
            this.PageInfo.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // label7
            // 
            this.label7.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.Status")});
            this.label7.Font = new System.Drawing.Font("Tahoma", 8F);
            this.label7.LocationFloat = new DevExpress.Utils.PointFloat(599.627F, 0F);
            this.label7.Name = "label7";
            this.label7.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 96F);
            this.label7.SizeF = new System.Drawing.SizeF(117.37F, 23F);
            this.label7.StylePriority.UseFont = false;
            this.label7.StylePriority.UseTextAlignment = false;
            this.label7.Text = "label7";
            this.label7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // tableCell7
            // 
            this.tableCell7.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell7.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.tableCell7.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell7.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell7.Name = "tableCell7";
            this.tableCell7.Padding = new DevExpress.XtraPrinting.PaddingInfo(6, 6, 0, 0, 100F);
            this.tableCell7.StylePriority.UseBackColor = false;
            this.tableCell7.StylePriority.UseBorders = false;
            this.tableCell7.StylePriority.UseFont = false;
            this.tableCell7.StylePriority.UseForeColor = false;
            this.tableCell7.StylePriority.UsePadding = false;
            this.tableCell7.StylePriority.UseTextAlignment = false;
            this.tableCell7.Text = "Status";
            this.tableCell7.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell7.Weight = 0.12407521713893188D;
            // 
            // XtraReport
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.reportHeaderBand1,
                        this.detailBand1,
                        this.detailReportBand1,
                        this.detailReportBand2,
                        this.detailReportBand3});
            this.ComponentStorage.AddRange(new System.ComponentModel.IComponent[] {
                        this.sqlDataSource1});
            this.DataSource = this.sqlDataSource1;
            this.Margins = new System.Drawing.Printing.Margins(65, 65, 120, 100);
            this.Name = "XtraReport";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.DetailCaption3,
                        this.DetailData3,
                        this.DetailData3_Odd,
                        this.DetailCaptionBackground3,
                        this.PageInfo});
            this.Version = "17.1";
            ((System.ComponentModel.ISupportInitialize)(this.table1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series7)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series8)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
</_ReportData>
  <height>0</height>
  <id>00000000-0000-0000-0000-000000000000</id>
  <left>0</left>
  <readerItemSources xmlns:d2p1="http://schemas.datacontract.org/2004/07/DataReader">
    <d2p1:Connection i:nil="true" />
    <d2p1:DataColumn i:nil="true" />
    <d2p1:DataProvider i:nil="true" />
    <d2p1:DataProviderDescription i:nil="true" />
    <d2p1:DataProviderDisplayName i:nil="true" />
    <d2p1:DataProviderShortDisplayName i:nil="true" />
    <d2p1:DataSourceDisplayName i:nil="true" />
    <d2p1:DataSourceName i:nil="true" />
    <d2p1:GroupBy i:nil="true" />
    <d2p1:MaxTake>10</d2p1:MaxTake>
    <d2p1:Select i:nil="true" />
    <d2p1:Sort i:nil="true" />
    <d2p1:TableName i:nil="true" />
    <d2p1:TimeColumn i:nil="true" />
    <d2p1:Where i:nil="true" />
    <d2p1:xmlItems i:nil="true" />
    <d2p1:xmlUri i:nil="true" />
  </readerItemSources>
  <resizeMode>CanResize</resizeMode>
  <showInTaskbar>true</showInTaskbar>
  <top>0</top>
  <width>0</width>
  <windowStartupLocation>CenterScreen</windowStartupLocation>
  <windowState>Maximized</windowState>
  <windowStyle>ThreeDBorderWindow</windowStyle>
</ReportDocument>