<?xml version="1.0" encoding="utf-8"?>
<ReportDocument xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://progea.com">
  <_ReportData>/// <XRTypeInfo>
///   <AssemblyFullName>DevExpress.XtraReports.v17.1, Version=17.1.8.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</AssemblyFullName>
///   <AssemblyLocation>C:\Windows\Microsoft.Net\assembly\GAC_MSIL\DevExpress.XtraReports.v17.1\v4.0_17.1.8.0__b88d1754d700e49a\DevExpress.XtraReports.v17.1.dll</AssemblyLocation>
///   <TypeName>DevExpress.XtraReports.UI.XtraReport</TypeName>
///   <Localization>en-US</Localization>
///   <Version>17.1</Version>
///   <Resources>
///     <Resource Name="XtraReportSerialization.XtraReport">
/// zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAGAAAAAAAAAFBBRFBBRFBBY+SPgIP1j0OEBpAg898HQ2/gSjiF235WAAAAKwAAAAAAAACBAAAA0gAAACMBAABaAgAAJmMAdQBzAHQAbwBtAFMAcQBsAFEAdQBlAHIAeQAxAC4AUwBxAGwAAAAAACZjAHUAcwB0AG8AbQBTAHEAbABRAHUAZQByAHkAMgAuAFMAcQBsANMAAAAmYwB1AHMAdABvAG0AUwBxAGwAUQB1AGUAcgB5ADMALgBTAHEAbADuAQAATHAAaQBjAHQAdQByAGUAQgBv
/// AHgAMQAuAEkAbQBhAGcAZQAmAFMAeQBzAHQAZQBtAC4ARAByAGEAdwBpAG4AZwAuAEkAbQBhAGcAZQBJAwAATHAAaQBjAHQAdQByAGUAQgBvAHgAMgAuAEkAbQBhAGcAZQAmAFMAeQBzAHQAZQBtAC4ARAByAGEAdwBpAG4AZwAuAEkAbQBhAGcAZQCUoAAATnMAcQBsAEQAYQB0AGEAUwBvAHUAcgBjAGUAMQAuAFIAZQBzAHUAbAB0AFMAYwBoAGUAbQBhAFMAZQByAGkAYQBsAGkAegBhAGIAbABlAKDbAAAB0AFzZWxlY3QgIlZMX0ZpbHRlcmVkX0V2ZW50TG9nZ2VyIi4iT0lEIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfRXZlbnRMb2dnZXIiLiJFdmVudERhdGVUaW1lIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfRXZlbnRMb2dnZXIiLiJFdmVudE1lc3NhZ2UiDQogIGZy
/// b20gImRibyIuIlNwYXJrX0ZpbHRlcmVkX0V2ZW50TG9nZ2VyIiAiVkxfRmlsdGVyZWRfRXZlbnRMb2dnZXIiAZgCc2VsZWN0ICJWTF9GaWx0ZXJlZF9WU1J4eCIuIkxvY2FsVGltZUNvbCIsDQogICAgICAgIlZMX0ZpbHRlcmVkX1ZTUnh4Ii4iQ2hhbWJfUHJlc3NfVlNSIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfVlNSeHgiLiJDaGFtcF9UZW1wX1ZTUiIsDQogICAgICAgIlZMX0ZpbHRlcmVkX1ZTUnh4Ii4iQ29yY2tfVGVtcF9WU1IiLA0KICAgICAgICJWTF9GaWx0ZXJlZF9WU1J4eCIuIlB1bXBfUHJlc3NfVlNSIg0KICBmcm9tICJkYm8iLiJWTF9GaWx0ZXJlZF9WU1J4eCIgIlZMX0ZpbHRlcmVkX1ZTUnh4IgHYAnNlbGVjdCAiVkxfRmlsdGVyZWRfVHJlYXRt
/// ZW50X1ZTUnh4Ii4iVlNSIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfVHJlYXRtZW50X1ZTUnh4Ii4iU3RhcnQgVGltZSIsDQogICAgICAgIlZMX0ZpbHRlcmVkX1RyZWF0bWVudF9WU1J4eCIuIlN0YXJ0IERhdGUiLA0KICAgICAgICJWTF9GaWx0ZXJlZF9UcmVhdG1lbnRfVlNSeHgiLiJFbmQgVGltZSIsDQogICAgICAgIlZMX0ZpbHRlcmVkX1RyZWF0bWVudF9WU1J4eCIuIkVuZCBEYXRlIiwNCiAgICAgICAiVkxfRmlsdGVyZWRfVHJlYXRtZW50X1ZTUnh4Ii4iTG9jYWxUaW1lQ29sIg0KICBmcm9tICJkYm8iLiJWTF9GaWx0ZXJlZF9UcmVhdG1lbnRfVlNSeHgiIEadAACJUE5HDQoaCgAAAA1JSERSAAACmgAAAHQIBgAAACXdkiQAAAAEZ0FNQQAAsY8L/GEFAACc
/// /UlEQVR4Xu29279lRZXnWy/n6Xw+5/H8A+e8lICmdT79OYVS/dQ20NUP51NeyEywJXPvzNSCvFhdCiRYaoIlF4EqJSHT8gaZ3lruIOAF5OINyETtFjKBqhYSpVoBq9RM1MLNPOM7fjFmxJxr7bXm2mvtW7LGZ489Y84VM2LEuMWImDFj/lEXOOEdm/7dSetmd5y0ftN+Oz5m+JLhq3Y+9/r1m6opTnGKU5ziFKc4xSkef0is5zHfuk3Pvn7d7Bdev37mPX+8duaNr3/nO//3FCYuHE5cu/HPT1w3+zkr/F/7VT7FKU5xilOc4hSnOMXXHlrweeT162ZmX//Od/+fKWzsDiecsfn/skKumAaYU5ziFKc4xSlOcYpTnA8JOE9Yv+k//z+bN/9vKYwcDK9bt/mUE9dtuq1fYVOc4hSnOMUpTnGKU5xiG09aN3Ph/33mmf9HCif7A0HmSes33devgClOcYpTnOIUpzjFKU5xPjxp/exV8wab
/// PC6fzmROcYpTnOIUpzjFKU5xocjMZt/H6PbjFe3Mi40W+U5xilOc4hSnOMUpTnERsF/stRTIms0UXgp4u3w5XvxZTiaMgm9YP1OdeOaMzs/cUL0u0f2Gdb1523jC+o0slK1OOmvW0rPVieu3pLIos/89S40nrdtY06Rz2pdp1LnyehvsWvv6OEjdwcsGrxM9qxvL9hj/4Nv6s1vtHBclqzhHLpLTjB8jzwlnRZ4tzm90M+5ZLGzSIIS+Nes3229xHvqXf1cavcBepG/xe+hgF/ujXLXVbNDr0X0cG+1fO9sor10nGHSCk9L9YSjewcONzjNoiHP9nnknmrZ4eqkw6g96oAHdDhpL2t5w5uY63eZvyDT/3rSPUjZqp+qIfMJcDnmUL9/XD7kv9CLuo1zxWddoh9qnNuV2ZfoWC6P+aG9cc0yyhmbsJN8TdOVjplnntM/llPQpeMUxypfuqcyFInW43zH7CvuRH1paPV0shE/BuxPMr+va
/// BjuaPk6gjc6vJP/gX1M+8m8lHTU9xufljLGMjiONt9HZwqhfxsXG1RBohjBDuJHGQAka+t3TRvKvWZuMzMoLZSmdw3JhVs6sxOGsOae9geQBdd6/vFGxdqKUbcH469ZF2RGQ996zmlB8bafhJZ3u+PKnHDpw6Ra8LH9rdrqZDgVV4RgXFa2D4Rj0Sceis5mpB23Kl/PoKP2o77H0G860INXyvuP8XdXGiy/VvQMQXaat8P7k2XPsno9Vp259f/27+KLyqS/qJD+dZOg7R/L6fYlWYbO+xUCXl8kYunQt8SIFX6JL9ASflpq+OCIf6gfbcjtxLXxMPASNj8HzyCd+53KjjMDcxqzPkbekozwfjNZRG22kwzcHDZy/fq2CY7Asr3v5Y6LxaI0NMLKss2xjsHriOzOv4zfuy4F92BQ0a4CH3Z1g6ZPOQq+4Lhm5DOzapNomHlKWfF3wliN1lXlXI9IO56+1z9vq1ziGPPrf1xXVT0SZ5XXJ
/// F1mS9qP1n5KjXTdb83yJpmXDdTOzHmRqM/bl2cZoNQSaYcBhoHJuM9UaHKf/Fo5yPiTPhjS6yc5ASjm+Io6LokfK6gaT6HYncCaBiByv88AcEL9F3jL/QhEHdNIZadYpBR+6Tj2r3xGJf3IE3qF55xp6Y3qR+LBwlE5FmZKN7IpzOqPokNA55Eq9dDIaefejebIY+hO8UOAXtq/rpL3DMx3zTtI7VnPe1oaTZ7dWO67aU33+rvuqRx8/VL1aGdi/V199NZUxGKMTeNcll/t94L8e+1114PGnqmtvvr3auOtKpwca4VV0jMFX6aECIXgKTcH7fvUtBuJ/sI8T17/HB2UNfqYOx/mX+Kr2BJ2Lh9TZ73qWbzNd5o9r4IlrNQsUupLvicGYXfOnQtF23Ve2NxB+cGzXMR9Sp/sf17/godW77mwrw2zFA6JcJ/lArkVbFgupg/pd9tZu9yHQm3jFZAW/k36jtYF7Iih93ZkEc8EftZH8tI9B
/// JnyK39dYMCu9V17qEvbSNAryBJBj2A50M1D0drm/F62rFV1voq1JJtLZ8Lu9PBkFo8wYEOi6ZMNvgfpNdbodmB775E2S73Kh0XLEN3W3xI5+GZYCV0OgKcVBmHnEggA57rj6murRJw4PwaeqO+7/bt15oiiugN6R9da39CgljbTTZ3ReuOdz1cNP/KN3xrQBfMQ6+QPWpoOHnvQOX9f7tXlEPHSoeuTw09X3n7DyDz1dveP8D9e09NK7uhBnTzvUeekaDmHPV25PvO3DjxHw4BNPV4/+2OSRZPTwIbDM85TqMR57Xjvuu+cbpo95lmRxUY4yeKA68+Nwrkn/zEnab5zDn9N3nFd9dN8Xq8NHfmoBJcHhnP0DiRPnqleqP3jM2L/OJlIPNsdsZkCKNwVzr3r6/kcPmt5/xgPbCE7pjKMMydB8QbL/pUDxQ+kYGNxw9zddxm6Lj5uMk10ewC7t6HZqdiS9KHVhMTB8w5ON+v03O7qvKK/V
/// qPsI9HffeHv1ob2fc/kw63ziO2fdbiLgKfmhTjyCJdlUlk3mGcfs1waj12H+mXIiAOP6hZ/8rNuO89Jopn297Vh8FF9lx22f4XI3hM/YPoGdAk/TXXTVeIVd7bzuH+x36Yn0g7aoXYG13lhd+Ip2XQtBaDrjgl3W1xO0Ixv1p5JRW7arE2nTnptu97a6LTrfemW1EEReXmayI7CUE330vnvuTQGmeIvvet26DfKnHW1gMZEvCP2REXJTvx+XAldDoBkoJxTGYcHZus3u7IfBq6+qQzxtx/leBk5NCtG/nqVG0STn7AGwpWkfHYAaoEMbGh31OOCFKIDwtHX6++++1/mkmYRemlcXSl+EWYd+dexla29q9xhQy6AtkHTeuER1doGgAHlL1ouL0emj8/5ortA1yVd8Ycbu1O3nVZd9/svVk88quHTaUwPmLDGXgksHEoZlXX3RZ1Rkc5t3XWUlpHvTQUnJgToc7OBB5yc/Xb1p07bUYQsp
/// R7q5NPzTbImCcAW4W7wDCzrhCnR7W4JpoLdpfP0aBl5VQF23oKYnIH5P1+InXZKEgV8d+131yKF/qvZaALrt6murU2bPLfiNjyKYivVwsilmfGLZTehcF/nofs32RflhowQPDR6ab2rTvthQ1yMmxUGQEvA5rkW7aFPMgtKu3TffoTxpUAX4MZ00dChBTo0BVgj+HLuBr5Kj5HQ8IHHAmvWbXWcF2ZdMhH8GLhclWycCAs52X4l9uN9zXW7SvPQ4854/Ws6v/6ymQPN1aWYKgeLUTt1+QRLzcMB2L9/33/x+76xCCbzj6K1rKREHG47VnWyi0QNNo7ul000Y+ONo8Gr1b378g5nocy+8tCJ4MylEZ5ilgc8EW1uvus7bGh3reJDKKDvB1PHoNP2eBjz8wzFpdmzxHf4JZ8bMfQRp6tDrQNfo2HrVJ6r7Dv4w0UcoGDTbn53XAaABurHvrq/77JfKHYxZj7ZUJ619d/Xmzed68HLrg9+u
/// jh77rdtmDSlNQAvAR/KQl1l2p93K0aya5FrWtTjI7B1BOmtx1UkzwIUvUFoGBssDyEryClo41oFLwlqGccGvFPfF9fr3dA96bYDOMsN92rbzfPYxD5Q0YHF/an6Z64FdApr63vo+6egbztroM61BSzo02lhfXEwo6he/SuwFeEPgQ1u8jeu0/OnamyzQdNptYFLTncvw8uvrpJV3XKCUI794MfFbM9HwGFS/05TH6sMZ9yeSk+yxoevjgpUROtcGXZ3z2edYoqA17/IZ0LciYqx1s1/g0fmrfX9cAlwNgSaG4R2MYaQxkCvM6alTHAIoiinDk88+VxtYrLfwWYo+dS4lqk0xu6S2cX7a9r/2UfBuCzg/f/c3qseeeLL6zdHfNZzRpECGaU7NDt7J25FlCW1aVyfO1G8La03URgtcvuttdJwQNItTRxTXeLx634EfVLtvuq3ae9Od1eyuy5O8Fz/QxF6oh4Eaes/6LA8Azjzbl2f87IUX
/// PKyLwEmYwIiH/mMe7H23etuFu2QzUUaf+tpIPtb/xeNQHHL8Rlnvverj1bcIcoNZDomOVL94OVc9cvjJasOuj3rAx+yZZjqb9U0aw/eQxlY5Ij8CB/DeAz+qHnv86Xq2Glrrmd+6PYsIVGz1NDrXwIDWTKAn+TfXHESUHWpOFzkswfV7Dx6sNlxyufPljTwiNDmgz/JdwTvN5gUfB2HbFigDe/3zre+v9tz4VcM7fLBx4IlD5gNfTsQsEaTGl/yFB1jL4WeO+KNTZn6vMdu+aM+nEu3NvgW+8ALctbfc6T7g8/d80x/H/vrl39ZlhoxIgg51YgxI5e64cncapIVcAjOdqxHhbfjzUn+RVwykxoG6TA7UYQf8+Tcf+6HLkv5548XYgmbikb9kL5tYCTGW0fAM+2f2/XEpcHUEmjiwNHOR1vEgRGZWOoHriamddaRvu2BXKpPF+90d4WJjg5Y0W0BaRzkE0uCpO95fXbT30/5ocTKAScog
/// k0k53P7gg6JnlaMbu8vbzo23OIHfHDvacEqTAXgoPrKu8fLrv+xvZqO/1I0T8sX36Vx6vBQo/aHdcoQzvg7ypy/+S01vABwpuQKfdt94Z/VnM+emmfYm0rb2tTZSJ0d0l7pDt8HQefKwJvSWBx5S/YmIMi0weu38WbP9v7p6t8s2ylo8VAdCWvSbP0q8IF37Jwug375zV/Wxz33RfNMvM72LDLDnyIsvVfvv+ZrPOBIEb7zkSl8GIdo3Vm+e2VptuPjKaubDl5nsP+VrhH3tbRSQUDYR/kA+s4TSZkj98wsvVuf83V4bvGjWLvQ6/Fbt0wYgekk+kIC11A9m4084SzP/5As7dh9o7WCWdfEBnRMfeIFt/11f90H4G9Zrm71y7WPuV6A/8cOCO/HB0PwPR2QS15AT9nj/oz9wnkpnJqc3IdHbHnrI9ZiBgXgadDXlsdoQnfn1y8fqtjZ4l9V1LDj07HPVZTd8wQfa1Cn5qm6O4qvkikxD
/// h+Hvygg0N81NA80hiFDl6DFUZkVmLGD8oDRgBEXCee6/+xvmsPSSwWozMndaCUOR37L9wuqOB79nrVPn4B2E8aRmSyf+yDCVNRlperbD+rgwHMlBHXs4/NXAQ3fq6VEG7XjvVdd4Y5nL6cafAiy/ZqvSvSXaNRaK80g56i47zcXDHESGrLzeNCgL2fHbRdd9pvrZL14S/QmVLmGuOmqOm9G65N+ub7II3aVenbb1/UmnC0j81TEDC/WZTaDTVxuF6KU7eWs7wb2ClDxgnaRcIlCibNLqwDdVm3Zd6sF8HazZsSY/JVrNGQJqP/fI1m0w+MC3q//vwktShydbpG7pwvztjOt/Oru9+oANWuu17q4KpT409SMCzTog5Wh/6D3BH3WLB8nu8A/JZ4Mxqy6d7BaIDkOWUFG/QHypjzoZCPEEB6wDaT+oDK6xfOOy6z9v9aFTmpkPXZoMig+nbj2/uuXB79Z8dXAiSCT9L37KicHg2ewf9owd
/// UBeymqQdLBaKXtlw2Bl0n3Tmu/23HVf+vbfR+ZMO4Z87sSdl0iF0XfejV//lb69Ka7NjABF0hV8djNNA03B1zGjKKcU5o8jP33Wvq0MnRaqBtYe/dOVEQShzNRhaoGgWP3gMGft00ZHO7vpY9fLR3zo/cseglxRGg9R5JLjw2s+6gYdTDWMXPVkmKxljloTtJuDf7Q9819vWG2B1gMSaNlfhM49RS2eYO9j+dE0KaVO8dMA57fWBlD8mUx6CMe+Mg36XcVor1mjTnD8WfcvW90nHlkDGEZhQ14lnnS37NNpnLrnCH00GIK9Yuwmxr9g/p9n+3ffojzxApd3RkToPKNP4Q4DDtdKXtP3KQpH6YtsfT1Ou0c/5n246p7r5IdM377ewLdEbdHexzzoQirT9P3rs36yD/YTJWh8eiI5Qel6sD+yD8VvOY/fboGTjR66onjjyjJcPvOoc9kQB2WbK3zgw+33ZDV/0MuFrBLv4a86znDMt4VfG
/// QZfhurN9NjfUQ3SxM0KD+IGQZeHCqpPMZrGMidlV9yVpBpO6/QlFi55RMXjj/PLtnNid4XJfrtKEzPua1jQhMBiUG5u/aO9nU52Sf9jKykZ4LN0W341f3v9pcHnbQ9/ztvWzry7g/UDc5/fYufGVR+Jed7ItMHS614bmx5USY00DzWFogsb4XKi+4HbG1yoCnYOFpEjA2eZQvRPyQG18R7FUWCo3iLFx1KOZTdXbz/tQNHEMED+dXWZ1vsiZR/lnZYeEc/VgAAefrq1slJzFv5nq2Mu/S+2LXmkYlDqWnJKBl+GpOQ8ymcniDUjqQB7CxedRBJbU63rtASbps6tTZrf5G6clJPJrcAdtR/jC40gCFcqVU8/B6uKhdRyG0enR6Yas4B8zq06n6aNL7FW9tCZI+mq//eq3x6rLr/+i3a8XHrxcD25CHqG3EYTqt156Fo51wO9LNKQPPFZmHWfWNzrE4PpwiJzZ181pvZ3VE7IGg39qe5Ou
/// 8hrpWC+r6/IfyIAj6whVX/xLYJ1vTYNdr3/3hOyC31lLCd+dD0YTwaR4z3Ze+XFtmR4HaUO88Hbp9V+CGId6UNIRkEm0IWT1q6O/dxsK/lLHiWYfWXfGpz+Cl9BJ8W6TP7Vz1vo/HZzGElqn/SH0pqoeeeKJos6sMysZoREdiv5O/sHOrU/iPN42r1nRiScZJO/yprnqE7eYP0fe7Jmb5OwDSfbGTDKX7fSnucRpoGm4OmY000yBj9Q3VjuuujYpBJCNaCDUejRX3Xb/d2TQpriTGFEvNqLQbaWOa7SDgIJR9pr1766uu/E2b6o3l3+dRrwJCh6VcPq285zvOCdkIJ6ZsaVHsyVdKxFFo4IO3q6em1P7ah4NhZIfOa3uX4/LKZuggvVP1Cl54ciXxr7osN0RFvWdffFl1XMvviBio512VLBgaGkFbnqp4a3nf8g7bAVJEXiM35EOQ+ddS6ei3hPWvdvo2FC912w+XgJx+qM9Dqk9Ka7g
/// cbq/Gc39prN8ESz01m2FQNrqob7JtE9yjgA3ZOHt8d82V2/adK4vRxCZqWOzP+lQN4jXdm57SP4Lm1QdoW/4NLVL9ebf20j+uEe06lro8Qf2fFZs9XotScVOaqLY/pXH1Jz6GrOAzOaiQ5QZu3x42n2J6pyPvlEwylQguyk9RhfxPYFZP0hZnH4CzOKWWf/ylYL50BU+bsE5bYjH6OMgNL+OzdqdF2ymLt4gYwaw4cMbLbGTroG0eGD8sAPp07bzVa4YQI7P/6VA9Fo6q50fkDfy2Hb1nrpdIetOMu8D3AWy9VyuW4Mv9X2qt7SrsKFBOA00DVdDoKlAQQ6R9AMH0jYsDskbdgTuO2odFuWhJJPpaBYfQ6FlbErDC/HGnF46sgbnN8d+XfBnOCivHJGgmWZGiZmT4JfqN75ZZ507jJWLOAmcOby67f6HUrtSEzswqum4evVN2/yok4j6OC6VboV9SDZywNew/6CLUUENLciO2EOH+pxN
/// o0/ZeE56vJzlK3vLb4gvFmqfSnQ7Zr/suulW6Fv8dsYFF+cXAOvON+mqoV+xf3TAvM273QYV3E/5lMXRZ0XSIzfvtJLMxsL0lEVyiFlUKz8Ft7q+pbr25ltrWkcCV7ksLwYEqlvBj7fFB+HJLgtUxyh9dJqKdInSG+kQSD7W8wJsexZ8hoZ4fF/rkxPoRCoPR5OP7y1oPI5ZV8rNdWV+tWkZHU3GaSaZIHDDJZfW9HYD2qL1s/V9dmDAQrm8OOM8roNKqyvtojAfP0fB2I8UXulpEWUyQ7vBX+L61cu/F19Te5zv/pd4PgR0W5LXq/LnS+2jxkV4IlrzLDgyYRlU/aQg+KNDd+CGIpjnZToNeLPOCmVPa85CZpp4kQ4PxmmgabgaAk0PFPxRjwKpUcFMzI/hGDk99+rd+uRXn/pWGmJkbYcmw5Ox5Wty4GyFJOjqiMjXymuncIvfeHkEwwoZRF0cm4a4MjF4h0PP+zaGVgwHz5cyR4fk
/// YIkjxhuVrY466oIv6G049MXECGxwwsycHXj8KSMttQ+x1rSngNNwbu4VT/CY0wcR3tnN+JZBQTsyzmUvHqqu4Fup2+iWOl46YH6n4z307BGnvZzRiXblQEFtxRZcd70derzKjEhbXuMgZWj9b+6YmN3MX37i+ib5Logy8ENKDwXL59K0v39+4ZeNTpDgx+uv2xE8i1kX0TMQ69ndDV6eP/L3wG1D9fGbb0l0Nu2l1i9Pp3/pgn6THHj5UrKkLumV0pJ7Dy0LwNDTeqBkssBnCVp+rQ84rdCc+gedV771l5eXeBvBRdgE5534OxSz3oSOkqZe0rzlDi/Bsg8bbWmA5MX9zxtvJGvpUZOWlYths9J7veXNgDLk5Q3MB4Phsm+D7x9tvhAZl7wp7Ut0yKZDVoNwGmgaroZAU1PWZuAmZNaQ1QqVOs7OUGRmJBRrkvrVuZIwlJxjYPzm9KcAk2+/8xsvBtFWPhHYBdwF2V/uOgxSRx1wxvkf
/// 9LLhWXQQcrRNWlcqQjNbkmQwJ1Q2cAB4NvsX2XVUx8Snx7wOCyqkS+o0qC++e9ymZdLoQZgFC6zpIhBxgF46pZJov2Y6wejd/nhjWQ5TDhWaoVf6lTvYxcfk0K0NeYZRj/aiM4cWEPoINp888pO6aTWoWelf0mb79+gT/2hB3jleTpTPMV4QGhdjtt/TLnt1iOIn9SWdsCDu8DPPQZVDHTR0AHKSn/0CqYf61JZ4BCosA8z4dnnkb+bLfiSCNOhVmSF7S5tMnnj2n52GOrAxYurOHaibIZ77IIbf/fpc9d4r/z7xAT7lAN+XMBQ0LRQZANOGCAChO9YlN+icD4xOKI9mxD2szXR+Gg+gVzOY4m+0IWxnHPSyjXYt61Bd1MNSKOrZUHy2VZB9V2cdSv7cc9u/d5x3kdeNzNv0rDSEH5Eu+xxehkvNcZYETzJ0kL1B8EX+/GtuAxpwiT9RfxzDT4JByyCcBpqGqyHQrI3ZDP7wkedSP5mN
/// bSh4PuXHVcZtfE95NQRL8YimrfCB8IfOzjszN4IZa13uaDuB5Yv8cl4YaebxbQ8+XBsWHYQ/Dkuj4pKWlYjq+Gf8e/c0Rx1JtI30YPBs9q+pc7qPx7PigYKJ4EftiIxHbXomj1uqjRdfWv3qt781qhQMlB1nTXtN/iv+iUnW0OlxIHRrViicKO0AY7/IxUTqqfnl18zenW+y+5I2OgH4/LYLPuyz00DdToek90CdmKuefOb56vRt70+P6RUMrpnUEw0PPgqZWzr0QIFJfut9/933GVl6mcnJaxLfF8pgYs9XbrE26NvZlOfBSaorsDwf9Fsbg1bpALZtduO6dXkiM73D3WMy4nlQ2c7DrBPfTz/hzPe4XOE99Mtexve/8FwzsKEvs/pSTC+h80JNsyVIs2ZZfkPlIb+YMQ1bh0+D+NkVtbSDdcTy3eg4ZYffoj5oCs2OQNhBlwaC+wTyGfqWbob482hfP5pWEmY9UR8Xun/LQ9/29rl9
/// +J/a1oUnDajzz1XnXnmNla8Z/Tyzme2GI+c13ywmCTrnw2mgabiaAk06ClekGpJiOeTrKF4zKBD4bI5fM5O19Af2XJ/L91Ers1Iy8jeulbKRLmlZqZgdnoKd515iM+4CMMTosDhwrrNOwFv+ETRFp096JTgqHGZeo8a16AisQ0uP+988c46riNrc1JkGH9JJ7czhU9HRN8Au/8VObeC7uJjXJXnbfKYqy+ADn9zjgy+nVZQ10vkoBjz/wr/4ICvK03HlYunY4YMHQHZe7qVLGyPIrm3fG57l+KtjR6t32D3MLKIr2De6XAbbsnl1MNQX6+fGwQimoJ2NuaNjFFmJvi5g97AeGNr1ck3/+iaNBJuPHjqUSBZvSYfOdQHWBXoHbjoL3dimyh9f/+ArZUaARvqtF+yyWpMeDAPLoyAu68o3Dv5IOlLTuXxIe56vPwBg4GTmrevm9U8G+i3JzNcy0ve96i/WhRzgn2bxzJ+w3MN8pvtOu0ae
/// fjQtJbp8TQdLWZy8+dzUpqKvT2yIwLq+PgKwJ23YaxzHxWmgabgaAk05oy3+iS/pTv0Qpwdcr0LJAtJjA7+5TlfVvY/80JXJHbcdZVTJuCzwRMH707Oy0B1EnZZx8HmzBqRGl04pp7oBe7C58zX+wBs66EkZ43iYnKSlOUpuwrgO7UCtF3XjCz0BCqa0HXicl9d5I7pJy+QRHvtbqfAavXwnbdKefh+89lONIFMzFoJ0Of3Le2ae4V/HQs8zf1Y25gGfOhvpHke2M2qAt1WgpGbhotNhFlTtz7pC2dGJca1MT0a/5Ucol5nnAOlRS/8GgWXniz/QpXWmSyc7viYUNEB1DY2T/kAWvqijzf+RnfnctNl2v7pGRfiqmafsr7HLzlD2Dwn23nir87ksczmRT282fHfLN/WDXn9FaCo7ABj00NfJD+TZzWh3DLaWHyPgzbLYuVcvqgkIniNJIkLw0QGfKh3FtiYj+2mgabhaAk0M4acvvZjU
/// AZAy8Q3cUqk83dAyGRaXwrFzIM1ZbIPCbF0YnLYIweAm4wiXFmUkvDHZADdATzSC9C4OC2A0fP/Dj/nMYTxCmqQxjoeiAWekGY0kx3pWara674A+11k7WtcBrth5zZsm9ONN+9pStJ+2RPDDI02CTDbBpvOPJnBUEA0KaloLkq+75Q6f0YPupXgsPgmMmRV1gFwTz2MD7XsP/ECNK5nhKc3gAPXTDEM2FvdPg56lR5/oi3TG9Nk32U/BS1qyUtKyECz9yH/5yOWudyEbzTJ1BNPTd1mgGWsF253v4qFmvH51TNtLNbvxrG/zged+dc7fYhfPGdzzhvVkBmnIjgEYs9HltZLKYdC2ayY1YmavrGt5cMa3bAoKa/6noGoU8DvTLXzCWDqkOvDrzks7D3tr0rE8GC/viR75Avy5tyWxgkN5nq1qNP5QftiW9HQC9j8NNFcOEwYhgcKmi6+QMuEQisCAdWaHjvy0VjCBgkldS4qWfm+EWeb8
/// +JIF0/IolToXOULNFkjp+tG0krBpDOowCTTbzlNsy91E6+d5QeWIj3rkqtHuynDCaj+oIFP6Er9xzpvY0dY8old7vPNs8aHNN6DfNTgJL0paFgdVR6zz45xHwGywDkBZrL3ipKa1efC3teFTGUCtFBkOw5ApR9GsDgdkaybWp9LOaHvobENsRfrws8+4Lmf7hseyHVCBp+op6RgHnefrzk4USH9KmgZBtIt9WqMTjGO/uiaJXpf5yBisNUF2NAygH/2Dr9CtFxgnQz9lMAAudRlel1+VGgS1vSRALhft/bSXUdazfDjjeztm6vRfVGf+t9tRQ3GZPOX9p8ye6+3UoDz3d+FLJ6n/C8Wwxzhnva/a0hyk4duPHvt9SqutJX+6AL6RdsvfTKbt00DTcHXMaG7ybViIlFyBpBP+qTyUkGCRoDGgDiYjI8pmadlhoXh2TpCaA5NmR1Ma3mpA6IZmjKV8dB4O6Ac/PqSvKMALv9IRyJ+M9qM3
/// fDnXl2aEShqWA+UQ1f6SHg9K7Dd/7OdtUHPUfvSAr5joc5QBkSUS9XkLwmFHXYuN4fiR7WnvPc8dajHeqiHoCiAd5+vT/ot0yM4zX8i+/B1JF8z2WHaAhsxkGW/884PW8QyayYAPdXBnSOBDGQRR1OEBVerQ1Nlg++Pzp9RJyg9wufi/7kCARnvVISYeFHUtBlIPbXA/i9Ilmkck3cFfCkoz6pLdJPzrjM/wuyxdbuL3I+3lQ0Mg/CQ6whKHKLtZ19IjPDrw+FPiPdQlGz/4+GFt71M7tvkg2QLZDPF9nrT7Lt/3JecZ9USwGTLJNtCkZzkwdFBPcj5jxMt/N1s+V39eOH4Y6YmBQfgXrfmfTNungabhagg0Efix374sA8NQ0mMwFI69tHj8HYYjm8vGqH/N4NIvJSDNS0YomGbp5MSzwS2/oxmGZUcGvZwfPPSk8yCA1MOHDld3PPiwsSNczejA9iwyxuyQlhuRGY4h2p6vkZ7xR0S0
/// 1tF5Iv0AeDt1XlfUiuRKfgKcLdVABJ0E6aiffDZvkePQJKuGml5rBwM18YbOWDod5+26Vh5K16Cbz8a+wdf3RVvs9xRssrWTBhAG1vQYcDofnBW5c8KHcKRjQobSH+vQ0kbc3smmDngSGHpCuQFOkv8bDGWWaHOW3dLID/5v3HVlg5iWecwLZMv2do3LijJpw6TsR2WiJ/k4SqDZtm2+s0+5S2XfgxC9f/THT2be25EknzWNgXJJf7stnPkVBMafB1+yE/fn6cWyfv4h0suJoS/Y5R+v31A9+OgPnXagbCnt1m4Do0PwjHrc9pMelXQsFKeBpuFqCDQv/ORnZRxuJK4PDiwu907CkBd7AP/ZPWAKpQpv6J2QneYrAvZco56y85KDyYHLasDScfe8DGSw56ZbqzPO423MXh4Mg5KXay/YZYaY17KuBIQe2r5mvR4Lx5Yhf7bxHKcd2efgWnpw5MVf+tqzg8Yr/8X+4XA8P4rmFwWl8440
/// /yfljIYhbYFW71gSaSUd9bkuZXrtcOzo76v/sP19rtdyoqnztACN83ZdKw1Dp0PnCDY5pxOkQ/DfrS3xoo0Po7z5Oegk7WGnpeFN4o7r9Af38JgU/SGY1yybOtn+9CwE1WGLXq8bOpyA4RD5AcrJPol0kuUiongx44N6bEikJN6OCNfdeIvzgEF9XgoyHtaBiPOXMs2Hr9+SPkXZAZIssl7M+dv9Kn/5Ay1kfODQ005k9mF6P4ElNCGT2ub7QOkb2kf2SIZvMbPf1rGSluVA0SOb/DPeNjco+QDQPjZbRwee+klaMtHMMhQow3Un+clJtX0aaBquhkDzvkd/ZGrQdGyx2XTkYauieqRmCqZ0AVxDPRvGqDL5igRluXL5S0GUKeWeZGez2BgzsaR7XgayZn/8Zn1K8vlf/Fw2WLJiEDjvAHXW++76ptVhTsk7ueV3RHRakl9+U5JAkzdPd+65wSkPWcvhSjf23fV1z+tvdPqPfhktSYl0
/// LKCpP0szo6mXHLZUO678+9bsa7aJkqo6bQno3X/P1+x+64TTyzNuNynIXA36LXrTjGN6ac+vWVti9pHfkMX3n4iZn8ybtPtjBpNrvjLnW3eduuP96mjd5q1sO0bQUtKyUKTM0BWnp0XSIFBzdEMEVUIFrvl8cRD+ho3FC0GaOc48Hgzyu7SAdZ7lS1iToB/6PDBKslNQstk/gdmJxkIcOs5Vs7uuTOUuvn0PQ2z24UO0JdMJjbtv/qq3F38ePqvtn+TvSIkPzckWXWNvV5/VNP2X/8yBZg44lw8lT+SwRcugEt2CnP783V9zmR3gaV60t8WPYaB6FAuo3vHbPw00DVdMoOlfVqEz1DkKj/K/eWZ7UgGclY44XabIcVLxKS321QqbCiXzsKiTns1V7zj/wzUtKBmoEfIK4c8AhFbRSafIqBTH1J7RxDHd7sbDuhwH+NXBED2HGGsw53u6IR/Wy0Rgt5xYyijkBm0nrn9P9cCjByA6AbrD
/// nx6bstce92jmQzqjNmbI7MGV5zzBNzmmXpoWguok1QGD7DsYgdUpsztSJ280WNWh2zV5iT4nq7jO8S3bL/TyVXbW73b9qxkjKNy553NqeOJTLbMh4N+1pgyTpwecFojz4k6/uhaGCljh+6gQsgRUTpQ1mSC4K0J751nCFqgNc77WkHLCZiW3/vWNhsELBQmkF0orkGc0lx9pTz0YDrAT3oynvZfu+281fyPgdP1vHOeH53/xgvsadgEIHxH9SPByOVGDHKXvO3CgbmvJEJJv3flhp58lYuVvncHuCZuapG1NA03DlcCErMzR0dq1tRt8JueyG76clcaOdBy80LJmrTqB6Og53vnQ9+3XHFxq/m04UKa+lKBOHhqCnsk5wsVHjcA0qxnr+GJEC0vYNJkO9PQdWtMafOoCZI3sTK5svWp3qndpO7v5EDmFQwqd4FOFaEDQ7Uf7x5EXQQhIyddv5iMCyQg0e2bIE0SwOi5CP3oXs9KyCe2G
/// APLIPJFS09Z2tpw3Tu38jge/4+VrbaOWFbh91Ta3+jHa5LpowaF/59oY0ebGICDnzuv+oS4TP0CZ5ZY546HKocxRoWyFyomyJkVbN4T2cYI3bOjgE0/XdMvPTqoNUc7xF2jSLz397LNOV236BrtvvsN5qA+Z8FvxoyV1OjzQJBv+vLahVO9S69d8CB1MQPHRjdoLp6b6wf7xpTMmpsjvL05xueRHF7Dsp227INWbY5GSloXgNNA0XAlMkEBRaj365PwNZ+nRFZ+cLIHO47aHvuf5UQLygnTK516923N0sK0GoI58KUFGJuMqaWrTu9JQPGsGxD0mZheuvfl2/w3HdV/sPdgF7F7NAiqwwYAJYCinXe9yILLSgACdyDKr3zZPbfBjUo7L933R9Yd8Dx9+uq9T6hdcRjYPYuxvYh2S74+pzlxLErhOO7b4iwnQ4lX7P7WhlEe6oJ9JJhvYsOsK508EmbIV8ayue7WjDZ5iTS5HBlQ1I/os
/// f+iBlIU3eBmcSBbq3CY30JROIt9RoWyByomydFwqhPZxgjf0lpdawlb71bFwjPKOv0ATObsO8C8pAzZPoBm/f+uR/OSm9guk+/i1HjAbCX8O/8Kfrpz+T08W/aMbhT3X7bO/K8yfx1e8Hnn8aWVIfrIzWDm88Fb6YPGkTc9oOA00DVcEE3y9WDymlmKj7HzBo6ksMqAYfUUnwDG2zCBgVM5XuxkZ4NnmPFBV/aJl5RjaYFTQkB+7QnsJ3jz7R6DpTsR4xQtW+qErGEcJvOweboO17GEas4LLiepYYuChmUHS3zr4WN3GUhVInrr1/em+Tf4VkDZId/o7qrm5fH121+UNWhaCJc3NwF0y9bdnC/pjjSmXoNN/sn9lFuC5//WCl6Fyc5CZ6+29thpRM9lqJxi7UHQF75hdpHPVdV9hMNb0RZNBlQV9o0LZFpUTZS2t7UH7goM31885n9HEX09+WVLw4vgMNF0JkiJEv7b7Rvlz3/Lnk59O
/// PE7ZLCBL2TsBZbLfcDwVYiZfvmFpdawvJp/4wCM/UPvC55FOyJZv8qMb/eVeZRjlmYZgdtfHvP3Rr01CR6eBpuFKYILe9FRHWzvR9Vv8pZPUA/gRpeEN2jXpzVDyYQwafZlSWAC1/66ve16HpGxDIeVjphQ62p19Tq9MpO3x/Wt1uDYCLgKQAALN+vGyjf74HN9IkPgU5X7gk5+biCFOApGZZCd6CILrpkdglo68kKAtcpDzTHXdjbf59YBw5E3dIdBO14tDbIMyHpqOpZdzSCM/ZiBpD+VTUVDkNHFSk5adqR/554lXqs/fc5/WqqIfXrbsJXgUx+MBY4uWaCff5gayLOeHcgYIDeHxWQRx2EtZz8Ix+TWjb1QoW6ByoiwdlwqhfdxAk2UqQbdkNak2RDnHaaCZoNQFPaEiIFTg3vTnrNeUvxsGXqb9qz8x7D5DTxeDl8uJtI8nDSWt2R/PuT+P9wXIm59odOj7C6C8jRdf7jzghbXY
/// 3WJcnAaahiuBCSh17vTkKFAaX2uVwDsDA+17lw1BAafdkwKtt134oaRkBnaM+wZBZMcs2aeQcqS0q6MjjheoRK/xZf0Gb1O0K4IRDJB2kQdncqsF1kWm+aHIU/KTx2DRaSw3KuCV7uAg/DGL0S3ScyAB8Ei91DdekuoXj8QlHFC026+lHzjM1hs7LxxDh4MmHgGxryNtidlM0TA/1L/xaMlP4gW3xBPDtj5z3r62OpE2oodZFy/d/yXxzZkyHLzTSvkZ4MKv0KlmXQtFlUO5o0LZBpUTZU2Ktm4I7eMFmuzl+5SXhd5R3qT5y1HlHj+BJm0KHShXgviae/uN4Iq1+bc89O30C4DPH973lcDXh2J7r6hbNtCmZ6kxXvLLg2rSDnZBX3FK29oZvQTg8VtnSDPAM5dclsrR5FXWq4XjNNA0XAlMQDmy09SRjX2B3AFIsbb+3bWuCJ43PXLXuY6cP/fCLz2v7hsBLHMEIRhvOKyVjtAZbef8
/// 9HoD+5jJExeuu/nOxC85kreeb0F5JygdVjPgOn3bXzdoWQ5Ef7QGUbOajO7LNUsOYkH1ry+/7J9d4z7xYcbf3hSUb23Wt9RQB3vpBw7X3KR1r+NgOLSQC2naweg66inrFDQ7Ea6HnDl57qV/8fLgRanH0u3ja1bTB5xuA5InvDt1e7IBcWQ4ZNb5zFDoSNnpjoeyTWQxKpRtUDlRlo5LhdC+oOCt4O3XDzxWl6UZo0m1Ico5/gLN07efn/xSYfMWGMUaTbV9S/XWnR/MulJGpEOg9Gt/bv7c9cr61rJPWVY0u/7WwR8aeUXf46AXg3lJKPJi+3vMJ9fQlQ2WDx7DU+lPPFUa3/6ngabhSmCCdxRn5ZkXOkeNzpJhubLMVb85dtQVqXROGILuy9f23ni73WL32n2d9KzONFfde+AHNT2uZGZwUe5KRfiFU2ADZI44yXBM3rTUvj03frU2HPj1hvV/Wf3shZ/rxwEQvEwndRLIzm750N8M
/// xjGepcEBG/kDMUipg0c7aNG75TPHDN+4nxlNz2KBuR9SwOb/lRRYuvG75d9742TaT5AkXWZmfovTl/ePfUX9hqEPHbz6ulUOdZCZgHVKlNcOJOOcI4gzLX9fzSg/kPhnaXYWaDBpCCjrK/7/8n3/zR/H5eB/XJSuQdeoUDZB5URZOi4VQvtCA80IZj6Znqr4gNB1b1JtiHKOv0CTF/rwwTFx4GDM5JOgsmP5fZ6CsFVR7a/hu/uPIZDkwxFf6H1D/eRrUvq/cDw5+fMSaN4frG34c9oumUsHrr35VrUpMnaBlJ/YgbKib5iEjU0DTcOVwAQUJdaSMXpBsQgq28BjczkplB+HghLoSBm8LcqR2YxRwLvsUMi5P1Rv2cEnKWVgk9veZPEwjCyOZ7tj8sYktOaZIwnnCY/8cbvx69J9N9Z5gOgQan4YtIOYOIdvbBZMeQR5BHtRrsvD6tLAQHQuFtbyTzz4wN5PO311OwxxShy3X6ltmZCr
/// ZvtmfAF4ZG3MBFgyn7UdNo7/1bROqj9doyB0R8DMuW9ZYpU3w8kOkLJvvZqtekInjn/EJ6BrCth1bd/d9xkn2nIbDOEL/vmFX7huhB6Pj9Fxrb5Ak6UcDHyot62OrdMBIDlcdN1nUgBvfDVdn1wbopys88dLoBlPNsLnBLB+231vCjRp92U3fMF/y5MDHfWf7Fb2P7/wopf1OvNFKnPxdQzdop4c3KnfkBxZBvVpb0rTF+pMcsqy5z2NHVdd29NndQW+tqQ2q0zX00TnQnEaaBquFCaAHpSY89m59zNNpUrJHek7uawjQQE8jXJxtAA0Ohk6nad+8pzd1nwUOh94DvsXyvm3ZqyTmjZfCnS+GR9oOzzw7XBoSAqaol0bwnm6gxef/nP9hm7LIenivECZZIG/b7vggy4PXtKSYUomchRLg9QVyKw0bfcmRDvs6E6U9Y+JxnAimy6+0rO4rvAXTkqnfSHy8CJRm5aFYKnPOF5mK2o6OkBJ
/// M/Mep2zcamXmoOt4Rmyfdpa6x3U6nFEgdDrkXn7EYXzMneiokCTroHKiLB0XH1XnybN6IWNUKOnnC0yUFbYXbRkfo5zjL9DcsOuyxEP56OBn+PPQA+z9P20/r/XUfHigWet9Sr9954c8YFPgNyn5DEZvQ90v6RgB9LcO/PdEnUHRtv/18xdS2/WYm/yUNfPhy/z3hfhPAs2YyKLuSTzxmQaahiuDCU2F9t3/W0rCV1GYKZMTCUelDa3jPmbTWPfDIwTvqNO9naDIfPiZ57w8lFiPEFY2Nnky4y+oOLQYsOGSy2WYZtDkZQYN/smQwyGl4zzMK+USaTYTf/2693gQF0Ev5ctpLE2wHs72lNlt9ePlRhPsRC95qCOKYAQ6eTRV5q/bGIf4waDc2ojfve0FHQtBaAg9juMTacP9LkCAXJDoe8+qnNzpHtdobZXuh1ylC7zY1xVC5hw9bX9aftCnvgWhaKK8UaGUrcqJsnRcGpypNl6iARlQ
/// 0jQM9Ni3qp7/+S+9/eimjpLZZDB4cfwFmpsuUeAUvjl4jzz4vQzMXrc2b+vWXUbZp6H7t36bx9EWYPkylP40TR4lP2a7ObodW3vw594QQ/k5aEWfXjX7/EZDj+JYr21H6TpAme+W+7/ntIQfjn5iHJwGmoYrgQnR+fMZSka8MbMUQPLOekNZ7omgCkUwhUiPYAg0NbM563uCjQIoW/24wfC07e9X2QWdKxXLzhX8eLx1Z1AbkR3qQDPl03KFmerCPZ9Rux2S06nPBwPls3dpPIYOhxdyKOtbLFTHIp3wt82jDQUg27ddsMtnXU80Z+xvda/VwMU70Nbsr0OZRD9cRwqwk3iLdhx0fqXZYI6NfSAbFc4P7oQT7SwxiUHEJBzlSkfaCe9AXZPO0XY+l7ogMH3g3tKuxkOVg76NCqUKqJwoa1K0DUHzr/jC+iULJyj5yk4ge2S7LX25jHJNP8/SLH5PfQvC4MXxF2iGP2/4JoOSxteti+3t
/// NukN7fhiQwcov6YH4M/fuE56lm1q8VB+T9u5nZj8sl+39IXWFm+3/WmFaujdnC+Ri34mlzfjM71tXg2DyP/w4X+y8vAn6vtDl8bBaaBpuBKYgBNDydjb0NeYIHNDFj+HumhtnWYYIwBEwRTclM5XHQzHBx49mO4eDtKzpMTWyey7517NkE5A0RYboVGGIR7wJnRpaGGozNxFMBj3OU/Xb/C395znqVMYBm1D3rn3U3V5Yfg8fgmDXUykTeGs/ItHTdIcDj9zxPJqnRn3SN+kJ+8i0OxzD0A767bawQdBBdCZtekZHZtLDZiNd5iHph7I5Dmw6bh48toINJv6zFFrhE8yf3Lvo48lrswPDVsxLDvet104mU+Mht5B46iQqVu+R+fQ/cQz+gyiCMJPdA1mLJ/5VPEy/MOMv7wom+xX56gYvDj+As1rb7ojUWWQlAGdFY3iZ/hAjgz6eQI4CtQ6ll44ij01g5eLieGj6NdVX9Jv0w38ean/
/// nNBH4c+ZvQ15u70nvXJ/DjTXEMwLpf2zxZPqFw2T8J/TQNNwpQSaBJAYyc9+8UsTfCg+U+TaboROU46V9RhZqcAwLpUV1zfpawmjgNcr58kenlFfSevKRdEKX+p9xAzKICkcE+0K/sE3HP6dDz3ieaP9cV9phIPgfgvq4y3dWC9TymJx0dpkTunk2b+U3vg/hYRxfvm+L3m+oCkcGnTy3fyAdrv9qKQf2/w5MPFAc6Z64MBjqcqOHXmiL8jcdDEvCSjAn4SjXOnIgBB9jg5HdqunG6UtDIJSz3NqLulN/3pHQ9EEjaNCpmd5Ak3q4QkPuh8DrXgDulNfbnkI+vQERYMA+SD8/jTQHIYxkxysDhnMWEAlHQifHn3kpuqWB7/rObtCLcd0fODAD31GcSn8R9it+vU8YcIm7U6O/8ttYSDIrhCaBc1tBrnfH7cD0aYR4OChJ52WKLMse6E4DTQNVwoTeDzzjgs+UCtHqSO+SbspfXZQHKWg
/// /ijUFbVc9yPlYM3gr17+fSplONDZUG8EF+/wl1wWf0ZuEpgNdEt13Y23qEEF0CYck/hUGE9adnDG+R/2RxONDrfYTqO83g/4lf3MkIHWgKqeJQl0qMva7W8nQnOLVE55kQGnFPoRwQn3Q2sJ0daeNps3jkAz4ODjh5q0LABDnz299l3+zW2HVvVdgc9rRrllPcczyi+ErcpHcNxx5e7ElYXAnA2gflDXMR5Gx7U6ZzQJduIJU9DTVT3xIhsvvjS9XRyBZt5CZjIYZR1/gWZ8IrcO8v1/M9BU3uzXeJGtq3wcWpk5PWXmL2saFhORV/RfodO0wXcPgRDD2u96Wi87xgxo9uuUZ/db/0Me/gXPBoPKxt8/Zjoj/Yw4I3i7cJwGmoYrJtA0BeFxtQvc/xtYAufG5u0oz+vXvtuUSh/OjxkgKUNemxlluYKse091+4MPpMIGQKrQwypPS/H2333fRBRtsVHtJqjDWLdU+7/GpzsTJB7SLJwn
/// zj06ZPjmvPN7Z6vnXvy5NZ2cEUylWcEBQWYZlDHKjMBSfMtOfzHR6zL9YN/JRiCYyOYTZZ7POzrJUzPoWY8C9Nk2a3erzX5m/yi//I2BTEnLWLh2c/UXF364prsrtLNHG5eC9ysC02Ap9DpkyzV0fmRAziZj+Pqbo7/rrW9BmGUyKpTyVTlRlo6LjSfPbNeA3QmZS7NfqQsviZsHmKGHVmYv8VHIB5lNdmlS8OL4CzR54bCGwj+zWwY6H7pOPxB9IHx+vviy3nCgzOQ7k0wvNX/epmWxUH1XtEP7q379wIGaFvl16Rybt+PL23YgX66032b/2hMD/cHypHr4oEezTNE1Dk4DTcOlYAJCwxgiIIoOIYyC33E+rCsJxQhFYWFyWVY/lFLI0GR0XJ/xR6Ln/N1eBQb2lwNJQdQhBQ4j04wYV46+fMxpDTqbdIdDk0IuNwZtvCnICyoB0VyCzdldjIC10DoCrLgXg/LP9gUfHLoYacCcv+1M
/// B0Lgmg11fP2CtpjR1jWVz3Uen9Cm+lu4yM8Tue0X7t1fvXHdBs/vbWbQYuVEGaTrzAZeBvdHWUOAMqHNO1CjLXRG14c7qnCQIPsMBnRzkiXpc9WhIz/1cqLsMv1aRYdSvulfV/7Gi4FhL+JpHrR0Q+WljFGhID2VE2V1q5982XaaKPvM5YS+QmcE7Ltv/krtO1N4KZ/qCSG89CvpMjm55+jRo9Vbtl+Yys7+GYw6J4PRhvDLx0+geeDxp4LNBX+1vVHIK/wPsg69uPamr7Z8WNb3kKeDHUtbiLqeeuYZLz/qcD9MPcbjbA/ddHAQOs1mT+GLwZM3nyu6XM+CtlfsnK/3fSbN3Fr+RBt0iE7o2eL0619HSFXAL/UpZZmZ1oXgNNA0XBomyNHltXsxCtNv5NnxseuyXrjQ7Z9duPXBbxfl9EcZlsqhTJwndWAQBBjPvZBGdi3FK50lbrGp1IKtV+122im3qXSaBYx6lxOhL3gMjY8+YY4p
/// tY3/kd5gI+AwZvJGEKj0Rm0SvkCIjoY3u8UrlS0Zj4u5o+SY5Z2uW5sv2nu9iU7tDOCM9b3ogOsdG6IX5YoXutYMKU0HGjO7g4Eyop3SEZXZVT9og+xi1l/kydCt/gCc5MOHWDOa+RXyfi1jU7YJ3L104y/bpeC7KAu+iqfNjnE4Sg/Qk1Gh1GqVE2UN1y2QOkH0K9LcW+oq67RpDz6T85hVwp7roMRsoqSFtDDCTwIYeCq+8uLze6+6RjSsZW19LH8SDUHfZDB4cfwFmrQDH17yHnjbzovtd9l66ILarmv/afv7Uk7JqSwgzr1v0F+CbBPIXXvJztQ7lIgmBbOT6/9CZrks9tKuoaDv6LHfm45uSJMZZRlxP23f3N/m54GaB95PztU6GuU16xgdp4Gm4VIwIUbGCBDn5kpanHO848HvuSPLGi+Hte3qa/uWWaKcph4bOLJFghuCHKk/kq/LzoZUQ/yUjhGYcQJdlBFOmvKpM3cykzC0
/// 8RE+RiD/6OOHRH60w4A0W1YEr5r3hvOf0ei540xeE4yvVt31X7vXR6ea3YtgK9e1MBSPoVFyoA3pEZxdX7N+c3q7OMk2xGdtvv2Bb7usCDK9I00Bg9qbyz546AndZJC5ZtA46Q+UEbrBgnbOSUMrdKoNg5F8lMFsdM3/DnW3gfaWdcKrsp7XIj71kyOJOwWMwNvdN39VM/VJ38KGRuNt1uFRoSRV5URZ3erPAYHsBjvwNpylNviXf7AF9sI130nQyZF1cD974QURkAZx2BSpHvbZhQg43e0Y7r5RX82SXSjIBONaSeP4GLzIAcjxFGgCia01SJ7wMa991T1ZP/DnQB4KIJ8inY4Z5MdB8sVesnnGUXWGj+nq3wYhPpOyRb/kx3Inp61FoPYt1v7Z5JOPzf2XdHtTdfjZZ9IdHaHQ7whig55+NI+C00DTcKmYEIJDiLHnlxz3jE+TYwihWBxBHl3HY85BSNkcpRjsKYYTTfty2W98uSbs
/// xxMGtcNMRuezG5bUWQI74XE+bzNDa5TpdZmTjvqWG6FDToD0Rn9BJRpSOxU7wOvIJwynrCPB/wf2aB/KrrM9GSy/GetPX3qxlhl0de0MByHlqI2SZ8gA5Jxvm6uV6a1Y/lK7N37kstRGBaQnnSF6oqyQ4aOHFJy3oebfAOAlKPSBcuR4yzYPbz800BFD09PPPGd1LjzQ1JeKVOek+L/akZ0BgNrWOaaOpQvQ2TpPXa+xFfG0aUvDUPegc6NCSanKibJ0HI4KMLNuRrAgG2iUZ3nw0XwG+Mn/yXZGsiloCP7VQUsQFqd2jEseEFjwQ/lhZ2BJV79rC8fgRfi04yfQdH+eIPhLotQ/yTanCQzhre8rbLre9OdN3970ceoHA3kaiBxZX4t+hM75gN3sobsOzo/QWZYTH1poTHgYLTx15Kt35JH/Tv2WpcEoh+Ojj+eJg1HhlI3ppdZEW9C1UJwGmoZLwQQMQkaBMiVFZVsLU1Rmmni7LAI9
/// INLMzjB6aZfXRpSMY6kUUjqlUT7fNslLz0ZWGlhZfxtiT7GoR0qt2bGYIVtuhL88niL9q9/+trctdh5GSB6O4ZzCYRFIEzTVbz2PDOqCdly1x8tTB5Md4EKxNPqgH3QHY7/5Y5bUXj/wz9CdJPrWZ7AS8ozjwcdzp9R0vMOBfdtoJ2UpYAy+juaIuV9gfEw0jEYJs293WFmlnMfn/2rHxprlhs13A23KL99V6k34sm6ovOjyqFDSGXSorK71K0DAVqDdr2ETtV2Evqi807fv9FngqJdjYAzkHNPBwwE/l2/dfdNtNW2US5v72XAcJ4PBi+Mv0Cx3oaj114LHaGcg5zHgjadKBG2+R3KSDdB3EsGDUU/4f1WjNE8VQ474Ex2z7yxpWChG38Qjen1AhLrTkMZoI/WzX5o/t/rxr7QtZuJDj3RUOQuRffD2XZd8zOuIcsfFaaBpuDRMwAkI66BmnRbc8piGTz7KiJojmPdeda07x97ymhjK
/// RifPMZDfOPL7pdd/IRU8H5hiS89qiFO2ODnhLM3CvtEUHGOQQ9NLTCUty4FqY/A4rUlLxJcda69TkFGGkceXcm596Ht+v8ujxZP5QBNEcky33/9QknN2+uOgd+wWBAe9+ZrkwJ5vAXV77bDvnm/Y73mgAi1+n5URuqKyNlYHf5zXtart5ngL3g2C2DaKsoKfCjiD7t42tZH7mUkC9BrFwuBv933ZysudbrTxtYzfOPijxJ0MLt+UHgbMKMlG4rGzyhVvg9fDUPm4d1Qo6VQ5UVb3utu2Lz013TckKKEszi/ce72/wEOlqZuvoT6zBGk/j4Th0aMvV9uv+vu6LH0OWPWAbV3kfHL6Gbw4/gLNGnCyznQ7mP4G7+LDE/Cd/pQ+ifPQVbYHxJeHP2sEmqm8+mjwh/qrQgr2bv/Wd9KXxmarPzE9iv4vfGmb3lExdBOf+cfrN1QPPlr4c/8vem64+5upbt2HPYbfLa9xfOTw037PKBD84Utx
/// wbtJtG8aaBouFRMQmByQHIJG1+kFlD7KzijM90dM+QchZQeW52We03ac36caKXD/gCL9lvDNs2lPMTobV8BeJV9OhJexkb23ptUk2ki+4Es4pkjrus55m1EQDmcwOP/sLzom/v/7Ted6ee0ObqFI++D3Gh5/G60hgz/beE7d1FKOhGqnbX1f4XRzhxcOMoJByn74iX/0+7wMRc2dYXYXnVLu4OBr6EZcG4TB+7desEvMg++jkeAA7by4QlmU2cV2Xgu490ZesCrCppQo9WUQsPMFOiL7aHewXXmcbW1UKKkMGlRWt7qp0/WdQXGaxQx74sUKBs98npaXCGXzCYuKe3inQ53giyqnbj1fdfqjVqvD682BOQgdgXEev42HwYvjM9Ds1dU591/wN3wNvHTfE8uDktzxCe27dZ79e11+MbPp1/Tn/R9lsW91OdFS0rlQDH9J+X/G2+aq3Y8BkMKneWkzS+/yOkrZZdYjaJqpvn9I/nwhED60
/// 1NtxcBpoGi4FE0IJSoeHEeDkrrnxLlcpH3Eh5aRfvG2OAsrB9y83kDJBys8BhQxBxiCDePLIs7XhCJKhcaHpVw24kGiy9KX7brQ6FPhSh5dp57SjTc9yYLQTQ3RoNEZmG52MeJV4k66Rpn3eGa3fopcAgj9doOAVCW1Bkfc6GwcVLIpe0Zf1Z+eeG7zWur0czVkeevaI5dd9ZZAQuuJlJF2h3dqQOgoRx/wsX5oX2M9O9QR/285vMHo+u4dHNoJQxh6lHApn78pfBZJMu9FwPKO+DtQMNLsGmQFuW4UORdnwuKxrflQ+9G1UKClVOVFW17qF0E39zHoRDL79vA9VH73hJl9X3R+S/cMvpRw8zT9D7t1x9TVOC/qPrZEGCWDbNAbvOIL4q/L3hWPUQ926dvwEmvIDWQbost6ODn7jP5y37s/ly5GH/OVM9fyLhYzrspJ8E5SBZXyKUlnm/Jvj5XsPfAyFOoLX4yDlyGdtsXo+FZUmUNsP
/// PftMymttTrOrnNN+YeiVfO/n79Ke3AuB+LJalDkuTgNNw6VgQq2MZgR8NF8KyqPoLWYAv3DhNteN8Lb5Hr+v7agWhnKCF37ys8mKzFBdf6XEQ8EClyeO8K1sgp4t9WN00devvqVFaIite3iznCbhNJpNm3NeYqDiaQ7a1IbsoHEorPVzsEIGdcrxm//nX8p68JC+sCDey/hBrmUnIadFehCG0eteBVE63+ybQbszSrLU8os560C/7GVH/sE44y/RZCh1cTjwAhW0qZ0qs3vdQvLTuQUfRw2EAjbsuiyV2QyIXsvY9TOUg0B63NRX+NtFf4WyT/KPCrUmmFqGXFVv2KzK1nXZW9g613kZkseB26+8zr+bzfejm+uwX7E6ks5HZY1ZffOXoY9+mPP1z39z3WdqH7L8KB5knqzGQDPriPrITdUps5rhy5AGTCafmNHsLaeJ6K2+l57uTTLM6SFgedg2LfQpPpoyKQwdpm+978CBRJL8uQB/
/// /hXPKxtEt/MSAe7Ntqn0npv0NaWR/KhnnTN/fr2XH33quDgNNA2XakYT53fSme8upr1nqr+44EMuXwSM2odK8Ka3zx5YYFp23gtFFI/jn82c63VEPXHsAuTVp/1QPim6yp2MMo6P6lh4McXbZf/iKGAELF5GoKmOSferc5KD45wlDdhofXsfqINMO3q6yEw/dfqO81J94SBymrpxlCGbQZjp5tx0Z60CfZxwuZrR6bAjdf/79DnMcI6DkDzNYGS0QBMnHjMHlBV8zTrSW2cT5RxZ6wn9IzlHg1IOeuyjMnvreW1iO9Aclb+A613S3bLsLvollDwoY0FgSq0hlP57HGgYAWK9vj1ddwywtPyr/aft/OlQI/9KH+zXQ6/SP+okSGVvYdoTj1B727ocGHSszkATmuWX45ra8a6PXJUoCsjfm5fuDec/fui07X/t9wTU+tIBVJv1f9vP8zopD4S+7vo/DGf8oxuiKlooIH3KpnM8H3FB1rss
/// c+wSDLri+/BdoPYHdiC1+8Y7W+WPh9NA03BpZjQVWIZhhDLc+u3vSLgmaBe1eTKO2rvLhMwMqOXrV+YoqM5ByshnCoEwNK+3A0AjHVZ2BmrHpJRxHAzjJ42DFME6+NGQA3nIq+BddMNfjDd3oFk+Bw49mY1wGJAtyS9miuFXLld1yRkoyOzqpFwHki7A/1iLetkNesEr06hOl5e3Im+/8vphPYPrMHqgSRkhgwigg49lPf0xBZofvsJKU91NVzscggfIX3zuWvfxj+POaMLZkBE8Rb6xw0N3+8/2Niog2z9Ur0g1PMKEJjvxtB3t4Ff9NE7qg+7zg4JNXUj3kyky1jcYpPRvjh2tHnjkRz57ecrsNqdfvhz9ykHd8mOWR9C0WgJN8VQ2y7n8ovrLvF6+CYinXc58GPtU5g95FN6llPlAmDMfqX1Rnb8mf+xBy0l66xwFKQ998q+iGT0lSdCrl3Gxv43aC5oXPJP+qQzJPMrhuCCbT3Xv
/// velOLzv8+bg4DTQNl4IJKEgEFRxDQfztRslXYAlG7HyNgjVE5I37xkHVqSCHx0cKiOSgO3XoloVcR174hZUnpRZd4xvZpDB4yoyWk1wHXwLC6uCleCEj0n0Yld7qjvadYOe+zQR8StAuswR+ieDdv7Jkx+d//kuV7+uGmvRCi4Kx4fKFnuC1ZCk6fc9Jr1EQnSiPPnBMuq8bfuLmr6oQB9OKAW1tQwTUUZ/re+st+UEYstAgQfzuXnsG7tmw6wqng7d9oald12sR2W6noSdJtqPIWJ2OdJB9egk2SXfvjHQvshkZjMy56t/SifSjZ2cC92kCjp6um4evs/zp3Jsdaf9NRy4dPvKs74F5+fVfrt5xvvlho5tlTtgctJ+41gKXdQq2afukOuPxUfwVvbq2WgLNekui5MNpQ/DVX+Tpo6f+sqzn6+JflEfbBnG3ZN1b6jxgGV8xfWPdPnWG3yaAzXwfByWzJ5/9aW5rHExv2b4ufJp0Tu0h
/// Dc+CV5K7ePKJWzRxMIqNBzAbik8OPRoXp4Gm4VLNaMZ6ilBS1mCG0wQiSPnnF170e1hsPLmOUsaB8qxZv7n69W+OeV1l/d1gzj/J5UpvbZCSL78S0bbg7ezFlzqlbfPSFi0KakSzHARGyjV1nDLa4PvJs1v9jdsuxqocwc/UDdrF4Bflwfv5NkwfhmH40qMZf4yjGZ0A6p7zZRex5IKywwkNQvJt2iW+BQxvcYa9N95at0dOczS9gFaOHmimikepvwQev4uvk3OUqx1jdmMhnU5AdGCUB1/F42xHw1H5uG9U6KW69FsEDayxFKiNsgUHO+VKWQb77N578IDx5VafyeeNc+yU2Sna9IYz3522PJKtNdse56lzZ3apbuNyYshhFQaawcvkN8J2wfDnAaHD7PsbfmMYUg5l8miaj6AAWR9KXeoPXid/1kefwSQQumFIHx28Hgfx6f9hxwWqC3oKv07/Qz3kyf1UtEn2p4BXfUro6Y4rPzGC
/// vWtiIXLv+cotXpfa1tW+58dpoGm4NIGmlCJmzThnrU8PmKR5bC7DU4fdr7zRUc6R8lDG29I+kR4OddVFy4cRfP7ubyQFFJbp5cJwUNBy0Z5P1QamcauayNdR+D146k7KZxozX5qPQbQ4m7f/vYzCaOczYL9e/IRjuuPBh72uePRROgrxrpuMvQxo9JexZqrLr/9iqiMqNAdlyVse/K6Xiw7FI6N+5bUxZoID+rewP3z/iSe9jOgkok7Ou9Qvemersz9yZSqxbNdoQDsoK5YXgP3qfC0hM5rjAP2efJLkhLxiYNGdv9Jz7hkVSk2I8lTvTPWm2b/ypzS3PfSdlEP0AjHDr3Qqhx/tj72LeVQZAzf0VL5BKHtTZ4vfXmODxHhcyVvrXI+8uY3LiUHH6gs0oRk5yGepjwz98sfJfeDRHz/psuhfXhNDVwgQb37wgVSCqYFP7nQINPnn7nWuuu3+7xSDC9HZrm9UhL5L938p+TwFfYI5/wR0
/// 9E/wJ9rCNdERgyA7pj2LyTe7q+nPB0PigVU7NzfnH2gI3obdj4PTQNNwKZggZTTBpUeo8VIO/0KlAPTrbTsvlpAtL0IOpzEuhkOFDt7ApC5/XDRShz5X/frl31dr1jKSi1laKeRyYjgo+NxemxLtY5878kbgk+mOTibKiuBIv+NwCVgpZSCv6p+S0abejkc8b1zHMggFm6pTWNYzCMPJaOSq7/o+/Ywes2SKVC9rmqQ3MevSTT7ttVDqpLsB3xOWszM9s/pUt86D313wrTs/nEpMUIzsuwIOlrLUdsmzrOO1iP5iwAJ4GUB3jH1kmY4aZILSQ+4bFdzuIN8CgyiHutGzsCGCQfYZ1FeQ0hAzNVln6LMw7Jj/P3vh5/5yzxvO0kCOcsJfZ98rW6K+drtznuXGsPNM9+qb0Yx08HljvXY8ibIG1luWfmYwKh+BGbPXAQP9eV+Yq44e+635uA31dkrQ0L/O7ogO+0dbDGqfbv/QW73cGDJV
/// O9TmzCOVE8GofmP3je6QfH1ihyZlsj6VtC4Ep4Gm4VLNaEoxbDS8dkt12Q0xG6XH5YK56qcv/tIVxafJLSjh2K+8UVGOM4IrKevzv3jJ6+9mahF0yGXjmGlT10Bp8TE7HBZsQ2S7XQcO/ZP/HgYk2rf4sXQWlOMBoQX62oJqk/Hq56nlyKxZcnlOygM0S/hV/zdXXbh3vwebqsvqSQMO6hUdZVv6I3lBdILH5lFrluFc9TOTab4nnNNwpM1jBZrJMUUHHW2STLrrxxvXn+1tqXlnqLZ1h4/s+4p3AqVOvNbxlge/X/NzIfCDH2vZSfBTuti/rvlResB9CwHMDJ0Mm3Rcy9fVONebuJSNnTGrr5uyf6s78ALcdrloyNeT4qMUEWzSzqir3d6wx9zRLzcGrVk2q+dloKwbEWiGL9ntHxuQmErgAxMNXRiAlEmQiV/nZZp6T01zceHXO8Grys1az6B5EvL/D9v10ZboOzxtuql4QPwgX91/
/// +H0lz8Lvyj65B3/e7qvmg4avt1vQm1IGqm/hOA00DZdqRlOOSUrBot+8uD0J2gR8w133pvxSrpgaD6e2UIzyykfF++651+vsCp7V/zGd/x0rIxS8f5uXEqGDNtG+a/wxYdN9kD5w6Gk3QPK7saZgr4ujuMa3isAYS4O0OqzgLgHZfQcOejnI0+m0tGaDpRtlXf2wlCEzhpffsL8hj3TwT07yElO+l7qGOwr4546JcgLKsofAo4cOWTlbkhwoUzrWtX7dIzqArg6yH+gNeAWZQUu7vuMPo72Z37XOWDBWBhzOWf4Z1lyOtP9D5uh2+tUO2kNQ+ke5BGKqS/U0aZkPI/+4j86bbeToG7D7oFHr2lljGcFm+NZYM+2HvvrF05rf+to2lStbizRIGvpjAmBl6VfQIRpJr6ZH58Hf8MvRDvx5La2UQEOzTrbLmgctKI1+2P05ZfVTg35g+TyrH+d82VvogfSjT30Fhp6IXvxkppsBUuwekuEV
/// /88yui6TTdAQyzvwA9j9hovTMqQObSRL2AmgQFN0j8TjeXAaaBou1YymnNam6jQbvWAoEq5B8UiLhcZtpZQR9pY5CoYx+KgutZdNjIFc+/zgeewfDpr0vx77XfXmGe3rNQlFnARiXBgln9tzOludCY9axFcMMcu8C/3xmdCaD+URAx0C5OPFImikfuiIz6P1q68fIkM5lI3V4ed+Vpdb1n/a1v+a8iPvPEhpl9VG6PiTtRuKb/yOBs+9+ELdFqfTymIpwyjtA8nvX2SyhrlZqIEjARvPwyPZ0crRz8XE3EbpB3yMTpXrzDgHOEsTb2MYEXadTmU7KQ2wTjnKD75q4JN9y3BMPsjuHxUKUlI5UVbUrc7baUsznMxqP/b4036v7pdut9yCg19K13lCsOfGO/yrXqG/7ltSnVxjCQt1a7nOStGv4EWW0WoJNDOf8zHWWPOiIdDWyUceZ3AbbR6OYSOUefq2vKdmu5+YD8gVWTk0/Xn/OgOR
/// h3RVsgnUmt9N1eEjP01tSzrq/yvvdzSI6i2ziVk3OVLXmzf8ZSqlG3idqeLDz+jjLCqvO4/nw2mgabhUTMBRYUA+k1i7+HB+r/p0PvlQLBmZFExfIZCSLhRRmHoUbkEA32vFSFCoLpCNMQciF+39tJfbvaNZPHSj9bZuqu49oH1Cw2igHWQdYUkrG+crPZx+5HbgfzyZCuTP+MCx5ssQsGyX7/uSlSUd4Bg05yBhfswOxAYq29Jjc6cDkEz45KQ+Bxplxgzj8PZRLve4XqY2eRuBDmv7yJEdudbLqu7+9fVD8qL3Dx86VJc5CpAf2vn0WuYz5S6/fi42wvPQqywH2Th8zXaeN7tuMjjLvQaTu/PUkHXPbGlEuSFT+Bp1BB2DMd8/KpSUqZwoS8ewj5iBxIeuWb+5+tOZc6ujx35vd2mGqGzjfLbrV+3f7Q98Nz2BEP2Um3VJs8VR78rATFvQvHpmNIXBT/wY/EWevGjYD5rrCAdj8ENL
/// aiTLvKdmN4icvtzNTlj+1rX+0k602XqiyQZF7s9rOlI8YMiaTfJ0sS/Kl37GNeiaqcsaCi0fzxnxgspt1rUQnAaahkvBBBmQhO8zNkmY+iflooNk+jvyI2hwEoIGRYPSdEp8peij+77QTRMtj7IpwAIeePSgv+UWHfpyIjyKDpaXAdxwW+0i0MxG2+w0opz5kPLzHmwJknG2qpkXNErMM9TwTTMj/essUe3TCB8HVweBdeVzJktzfFa+2qiOsOTLICQf9JSN6a1jAFiekp+lrpXp+TDaB81fuOebnapsgN1AAMV98ZJALnu4fI8HLAPN0Cmu0f5YCd5cEy5od7ZxXh63X6k12dIT6VMcu/NX+ShjVCgpVDlRVj5mPZeNxZrNy274st31SjJXdDr7MID2BV+4XNbFkpdTNp7jy1FY35eD+M1uuz4pkAbwy48hh9UXaIaP0BvnWZfhLfaMULJc5JcOPvF00sFo9/yo8mIgYvpiOnLR3vgc
/// 8wjg+TVUe/LIs4nu4fWzHABapSvhHzUYvuKGL9VlAn60f3wggN9jJn0YUj7tKsumnCh3IPTJRDld+6dhOA00DZeCCQgLwWsLmcLRoQhpwTr7uEUngZB1T3QaKNvCUeVpzVHdEZnyn7rj/aJjCLQ7Iwe7dPLmc618HHuzvUuNtE8GRqAp59qmuHxLUTzIBt8ur43kf9Omc31PsyakYKwDELixET+zyWz6TJDO7LLkOxhLWg89W27SLgcFskdcHphI7qSjcxyEoRNRsA7d28YN0IiOR3soU3UP52/QTP6Pfu7zdZldoQ6KDH/wY+2vxzZQ0NSl/uMBJWt1DuqA5XN4Q3Y+Vva16yR29DVmb96+c5eXpTLz8o+oN2gYjDn/qFBSqXKiLB1df98pmUddBJq0nd8OPfec2tVobu7ca0h5FHjqM5dPmr29ft276na6jZnPc5uc0D6Kk0HxgmPQtJrWaEIzOuZ+w3yj/PRs9cjhJ00UaWlHAdmf
/// D/dvoSdRD+W6Pz92tKUT8wA6waHwM+iHf1il5vv86Ppp9aI7oOxTtODPAS/T65EBQp/aJ7sbhGGPHCV70dSeqRwGpT8QX+XT2/WNitNA03BpZjQ3+uMA9uAKhXJITl2btFsg6Fts5M4ZRdMoaDyUEYfipEDT0hwZtY8Kro+mxOxx1nz5ZLlQ/MIoDhw+7OxtdyPfP6Q1muST4YeDiOMAPJMOa7O/BBXGy39PNauZHyzfvru+6fVKHtK7Lo4kaDx12/tUlNdJC6VAsTidsiiXYCNG0ZL1MJSTCj9TO9SubTOI9UbRLjnJ0Od+dWYUjdZGy8/WWw4Fn7sCebmNsny/0Q51Hx+YO4Swc9LIoL2bQEDZqTTkbGl+C93iJ+SCfghVPmktkejK46Bp8oGm6NF6SS0L0sAaGjnOXHKFCkE5rFm5bX6S2gvYedK7AIJOX6Nq7dTgxXjMrhTw5CzxJLdxOTHzImx+NQWakpnSoWucz9eGe5PP619e
/// E0NnQ1+YcKE+3yO5Ke55we0l5Y0Z8P13f8PLadfXRvU3+Vx0zFSnbs0TPbX+Gcifp766w0QOZVNH8Cx0smPTevLRVvFoMv5zGmgaLlWgycsz7MEVEIrL0Tdp91FcCDYMbzKBJogjDgWMI8GIP0IYBqUmimyHQz/hcXA4uOVD+ESb4OFTzzyTqAuQ8e656dbc7nSP0l3oJ88Wn5FusaLJm0Fg+RhQMAsiOkRz//p6kbys84xZJtoVVe/c87n6MUe78+/iCIN/fD1JIJ6NAm87/xIvJ+rjqEdVXfVDNKDvcuPWTAIA7KQTZJpZCM+bx6+VQNM7mRT0qEMTL2n/X115TeJKR37az8rBjCZvnLPkRPqq+todUHf5coS+UaGkWOVEWTrS/qAx0qGHYQu+v2YqKFuOdCbaS4K0n3s652SLKAac0al73eY/43Hv8qN4wVE6sLoCTY7oLOmQHe1gRlk6m2RF2v7w580y5kd8o9tGmomOQNP3k/ZS
/// B4PyZP0IWnyCaB3vUPSvt8Swy0hDz8f2sawj62DQwlKV8snEMMxl5z6F4+Fnnxlu7waRQ1lFT8zWRnnj4DTQNFwKJqDcF133uSRROXDS4cbY3gDDBmc+fIVvKgvGNQKcsfGSq7xMNrT28ndd4dd3XJ07ooEgUh1iRoAWsKdjvzYvJbrzsAAFg3PWJmdUOqjdt9xaB+04mbKTKsvqh9zHjDRHXtryLyolFmReDAAj4w/ksyNOhDJ9n1Qz5KBjENIu8h3+CW+bS2uijXxSTQ6BEa1GzuLFBp9tpo5+ZZYYDi13TGoT9ejfYCD43bjrSisjOzt/Mck6YjnB4Qjt3ENnEAGvV92aYZofxF+O6Do0dOHt8YGSP2nvpJMe0H62ewJKLvbvfJB5KXcNaPhMo+t+ki1IuZQvvenKY+XjvlGhpDZoUFm5zJh1zQGmjtK/GfN1+rwpn6tsFEib0bHGtRLEE4D10Qw4Vbbq7hoMLD6KHo5q8+oKNH3d
/// q/vnrF/odIglZhEd7CL+nHtDzoOQ8twnmuzwu2vWaqDADDUb9g8H2Qa0ZNuRXvBVqn51NnBt7E4g3Q35xGPzKB84evRl/03+iydpw9uXdT0HhqTjxcpRIH082eUvnxJ6tXCcBpqGk2GCCSM5OtIKZOScEThKdt9jj7kAsz/LDmxlgNGTiKtptEtSuxQS88+wfuRkp5ft2+88CIfOjB3O2B2+BxrjK2oXFJ+1D2OGzGPenA2jIe8odGkErA7FN4Q3aDucTmC33PngQ27A4Ugpk2O8bEBd+XfpEe3S2+ZFJ5mO7BdY0rowNKd75mb/rFtve7q1Lzqm4GvYQPB8MEp23n5z/qN/MlE0whLEcvk+AgLj41nMNnWX82pFDSzEQ86lV3Zunfe9BzssjTGeacBUylpvavPovV3fwlByQCdGhVB5QOVEWd1kG7bLer8Y3Nc60zfoboFnEX922EAxOnP5OtWBDKinpqn2fd1oHB+jnhzIrJ5As+mT
/// pcfyufNJBx8R7RyGOfhS2mVladbwXnPjXV4e9RBkNesr7UF56t8tgYXc8dCDTm/4utC18N3RrvBvQRPbHHpZqdAoN7YSY41x3nGm2Z42Rp0gdakPmdW2ZlFwB3BT8Pw2WE/yL2leKE4DTcNJBZrZyctIpGg6EiSEQjF6luxNiS2h9DJD0GEkMfNGOmbMHIokUHdKdvHIi7/0IFttllLK8BS8NPm0eIixUV+z48iOYpxAE/T81j4cBEAtnTopoMhG4H7K7Lm+XQwOT/oinsVjb9GneqVHvD2bv21e1vqOCz7YoHNhmBzToadTqaPD7K5moCkn26+ufpjlQgf99p0f8jJdEzuyuIRbHuCDAmGTo8l5NWLWlbA/zW6zs0SXLcwatm4QA8lfHXvZO62yroVj1otRoVQBlRNljULbTLXtyo+rMMN4wtAV4ikGy5/eesElzt/6kazzH3+X9Y1Bjt58H4XGcTDqWX2BJjxEZ+FVyU+whNLf4s/D
/// Z/Yrs40qtwhmrQ7q9D2SS4gq/GgeyI5lvXXKryvYZFkc5Qfv4yXPkIPsUv3hH1twy7Ie7R7SC2fsvKh4EiR+lO3oh9GmaGM80Yg39rtAmc2fUJn84W+X+ofhNNA0nAQTUCQUNwtFRhKKxhYbr8aXgEyijSc1HRVhsSEeAUcn4141XeO8pFfplM+QN+ZlFDhf1sZJ4SehpN1RBgZkx5DoNxgn0Iy1PT5rbR1IYwPswgnNC0UW8rNV0pr14lPUUfKKutyJJp5yTsDAfuoUpbmmuer5F/6lUcZCUY5wU/Xw4YUFmrSJmR7KCL5KB5rtmh9DFtIZto352S9+mQrXoROkvLEHXbPs4xelA9rWB/7RdgYxJ89sF0M6gK9QMKz12XTttof0BbB+dY6OkgPljQqlCqicKKubbKWDyvvcC+hV9gujQPhG9qw9ZXZbXb7sNWYzVQ91+oy6BQ2Rb3ExeLH6Ak0CsHpwVPsLPhe5IVHTCxFotsvqjyEX
/// yYlrPKqHT/iaw0fSrgQOKYEtpLTrH//8WvMcvHDPp7wsjwOcpiwD2hMTCLJN/cbXAXMxqgefFzrt+lPzYjCG/wa5n3Pq4AXYUUH2P+dL7NSm8fV3GmgaToIJoRyBeXSmR3ceJEiOtXIKau1edigVvibPziOdOyAdc/65av/X7ksKCR8UlIXCl3xZXJzx9aJNyPwdN9AMB4Xx+Z6alJ0Z1QlinREdgPjUdChyEE0nRb3eLqtL1aU22QlfwYm846EC20/GVzjAJO9a7kPgEzd/1ekNuUNXV9rqvK4vRsuZW/wFOdrarfZEp2eWXGImbml1cHmR5RehpwSaBAulDcwLwbrgn8NctfXqPT11LBzD9pY+0KRO10mzOb38WCxB6QLm815hRhM++X2vVCxZoTzKjycT8vtKx/WSjsXF4EX2H6tpRlN+Q31IHN96wa4e/xPn+HMC+eD1IEQusousO74Vlg0CsJkP7P20lwmUa0G9pqg+zQ7hkbgU
/// lwFmDuulT3XQnGdby+ATvxTfNs+FMHP6h9RHbfHgN/Ohf5uamO2grOvzd38jlT8caj6nA/68WcfCcRpoGk4q0AxnUzu1ZDjM9qFICLApzDn/jBZr/lCw5cQ9N93uXyyKEXsiLyXqQw+E0T33wkt1xy7nr7Z37QjGxTDIsz9yVeaxQ+5kaWcYJHSNQpvKz47iTZu2+SNw50DLEQ6Cmr+GLKcgsMJBqR7RVNKF0+D3+rG5t0dlAGyPEW0aDxWgoAdAtKhr28i3++Y7ksxVHmk5vXZdvcg9tNv3GLUj9/4nC64ptwsFZZ7oKHjRTbycBH9WNpb6qQ6Va5t9IBKDx0Hg/LN/kreC+2Mv/y6VM6lAXXKAxlGhlK/KibK6yTbn073sh6s256BiEAQPa3NIR16kRMfhP/4f5Jw2im+j+ZnxMLdRNri61mhGcBb6Rvpdl/TfmgsYZY0mKJnoKVF8FU4DgZnq5Nlzsj8PWft/A0u0/WD0e4HAf9z+
/// Ppd12CLlk6be0IHQCz6uEX7c70+FsCyLF4ci0ARVXm97SixtNOrgyOeYR4Y0kYQ/V9ndfPggnAaahpNhQijWRl+X8yeGKDNBwhfuvq9WJo4So5z5GRdc3FCS5UI3BKPjZ794KSlaCmYM20bml9Nvjg5z1bar97hS+ptyazHk/CivX52TRfF/vj0DgXECzfI+0nQmPFb0dVtN9vSFMosHQnaBICCXWdLUO2h56shPM7v931z60pA56DpQXTjKMc30fQmnLf/54Nqv5O2jQqcj6BmGfh9vydf5pTddO8qgMAIlgIFT8LNd3/GI4p1sTrqUvqHcFUwv4V7wkO99U0YMIMdHlUOZo0KpgSonyupGW+gBesksmOu5FypdGQrOGCU5pr64Ovqb33lwgA3iE3KwKXsaZYua8TF4sToDzaBZctJs4NkXX5aoaQI6ij/vOpBFJpRPueHrYqmbzjdVX73/21ZyCjJNviFuroUPrH0hhyLJP6cnfHGq
/// g/Kz7mnSgHQ8NveyUwpbVV7pq/QmZDocvXy7x/Uw6V1MHHSBum0GpNRflnJZOE4DTcNJMEEKRVn6UsQbXbHN0azfUP3q2O8kvdKpmSRZK6RH63r8spzoaxANr7z+S65kjOp07IVSIeNxAm3j28CUFQYSRtyuazEwDJRZrPlgnEBTTkqfnQvntvWq3RoF92NSX8jyh4fPm/wzn+QcoCnOVacWq5O/rsZZPlddtOdTnm8SgSZ0ILfdjIApP8m4fIw0DPbeyHYjon90+ZsNeKAZbdf9LFHozF7AMofrZv89gqSl0sHlROf1WeId58jylE3njMY7A3jHPeB/NL2TDk6qkwjbW/pAM3xSvGTBV1fwy97W0p8NAhZIpwgTq/CU/eOx6Zq1+P0cbMKzqJPzfjRNHoMXqzPQDL8qvomHGy++NFEjKGXFYKHro3N4Qr5YK0kd8Eh8Et9YY96jCSbyuNbQk7rfS2Bpnup5PWaHMdgIPZAPko/tefko
/// AR8/gZ7cHvmubu0TZt6pvtjabFTAD+y92fhrdYcujYPTQNNwEkxAgfN2BFIWHM/WK/cUClkEmgb77vmG5UXJlx99z0Wjnc7Fg0yMyukuLA1IBsbvesRAXv109NjvU1lhwKAMvOTVYmAEJixgng/GDTTlBGTIjsaz55kB7gLwSKzzf7GNxjvO3+Uja8oTnzJNsf3G3+77CncZNPXnT2f1ycnJdGTixzWMgJ3IgGadg0DbLAX9IfduPK7XwFogwH2k1a6Z6mcvvJBqGAAeABitjQnmOdPn83vqOl5RnQx817pwNvFvynII1HkZNH7bg/T4xne/+kZHlYMdjQplM1ROlNWVNgWBpLmHiYBbHvp2M3gYBJaNnJ67ToRtzFW7v3KPB5vwCv1Fd5t+cCkweLH6Ak14JppZt67H2shr0yX9ZzSBy2/4Qi3TYSh/n31s+HGdW540yPUnegbet6U3L33g6vK2Q6EvpJr6M+cfrXBd87Y0dTSOl13/
/// FZXfApZjxT1ql9I1jUNQPIx75At6/XkHSPlvfuA71Zr1XQP5wTgNNA0nwQQEHB0+6RC6f7IwQQ7egDlf6Kzv8Uo5lhOhAUNEwWM7FEiVwflpJ7jok5+qZw1inUmMshYTg9/X3HTnvPSG4wxjhLZwyMPQjS05o/Ke67/GutYS9D444Lxr+xPPTHCumcLbH3wwvVAg50faj4lG6nr6GTb1dXdXH/n8GgEFvG0EvwvEqK85I9zrDAfBgUP/1ChLcu/2GUjy1HJJ+sM13jq9cO9+K116KL7F4Ab6gi+JtfwjH2kDPoQQjpIyIx1y5NiFvpWO0oGS1zP+GTuHgh8l9AZZWd7Mujh/DLO9jItZp0eFklKVE2V1py14wz3YTn7BTroFvuKJpFeJP7GB9TB42wUfTvqFX9H2Nv7CSaJ18THqWX2BJohcJE/5QNrBOsH5YLL0Wd1W7/Vfa788k21iEISm8FQv5H7iWWcn367yOXKdJy1ludx774Ef
/// ef/iT80sLwOWGGh38e+RJwaZpPFtrCEWbcOhne/hJ/7R2qKgf1ycBpqGk2BCGEYIGWSBMcJrClAKxiyNK5TXne9ZThQtbMX0BafRwYjvoqiR51uPPJYchjqUcLztuiaPCmgHPSoYN9DkvpipCMM+bet/TaUjWbgQQRA8SR1YQHrsRrDkXZed8vguaI/HOpkmvUWfbstFWWL7xz7uj41CZuNidMIEmjkA6eZkAx55/MlGWSWfdRyEvQMSzQ4p2GSmIZPVekGocSKIS3x5I8oN2QXPkGnItax3daIGtzFoPXnzuYkD80MP2+wCOnvH/d83nmhQ1U12XVFlIYNRoaRV5URZ3emT/KVna9Zv9r0OmYWPmSu3VyAMzsBtuqx8HiDL4Wefd/7LhhN9BBoT6qyHY/BidQaasXTIl9F4GwY/+p00feiH75GMMA01vBjNB/765d+7/KG/oQd2xD5Pey8f3cggnzZXbb/qE3XbOTJJAz3dbVDlB+/k
/// 1zZVM7s+6vV0gZIugCUhQXf/OrvjNNA0nBQTsoKpA6u3wHFoHvkYvxTL8rPXWp/ylhJRynBObD6bbM3J7TaeJ79ltpvevHmrb0ZOWRhLN0MZF1OgeXNe/NyesRkn0CQIxOjVHlBlMOPjL1xYVWVtddXl9To95zMnTp+xbJuNOqFDBi2dUH0bqyv87UTd4//tFt6Y5e1sfu9K/3BUe/j2bxAMfW0ezgfkYm9R6VHiDQHe2mhTvzpLzIMTzqP9BJsc+WwnPHByItC0f6JOvAE4J5DXdQNLMDtHmchPjlOzwNid+N4McFcjqmOR7tDOi9iuhQCqDUUQ1ZYt5+jWW3acV/ME3kfwOj6qHHg+KpSUqpwoqxtt8GeNBZe8oOn3WPugg10bSqhZUlfYh4fzgd1z3VeKF1R8Zl761qZncTB4sfoCzfB9mVeye15mmc8HTZo+6nZ/np7oxcRBN1BugO2zKItBBgO2HDBuqv52P09nDIomHT161H6T
/// 3ZIHnQHL+7pg8C6O3DvonYVhwFfiutrXMJwGmoaTmdEMp6Ijm5azdZE/6gulMicf6hgbnKMMoyjTYiE0eMCbHlvy2C2bTgewrN46cwr+koov0taobFLKOgipA2Q7h2GOKdPTPdBErjEg4B5G3zymIL3zun+w0otgJ+qHJ5aGjw2aUqDENRBei46gR/RR36GfPOt5vXzKsxRry+Ib5uTXPeOi6vTtRApSgQbtA4Dvk0MLHUR0HJQZjm8Qym6yYz3pjBkPDEhH+75/2DrNIAVeGF0xM8zlNp2aoZqrbn3g+04T5TgtPKI6i10hZH+TC6SWF2mbL8WxID06y1IvA+bm+usqeZlBCn5znKz9qhzKHRVKyaqcKKs7beGbQw/Utk2Vz2pa270O++d608u2weD3Cd5+/t9YwLLFfSlrrIOfi4/Bi+zXVtOMpvyE+lDOPdD8yi2Jml6YLH3Bsy3+Uo4rADJNS5xGgfsfPeh+hfLQN/wLukY9h488
/// q0xWdvSvrIfGn7u/Mx7Q7qCLMrrHB2zblG0D9F1YQjE7QviEg48fbtAyDk4DTcNJMAFFivWWGMqpW893+dYyLk74CgF5IlDoV97SYzmiig3JkzHUjRgAKQ9m6ds0rM0KvxRtjA5k/11fFyEFhOGME2gi3zpYsSBF7dviMuQN1syioocqZo962Jh+88/gGfBJSq/Dyvc6TD/0bfMAOT7gbRd8MDllOedROtv5MMr7L8WMJtAO3gYBso9OgjaEk+pCH/ehf3F/A31WdJMvI/jNsV/XDlqBpCeUDlJrkpWTzyjyKDnKgZ7svElPxpkuJ4pv0mf0PPSl5lEfaMp2rvrpi3xlCl5oP1NPr9183LwMFHYVQUDYNI9Lf3XsaKoDfolnBBmha11A7NS2Y9SDn1DgELq22Bi8yH5ttc1okg45cbzVBwH9YZL0oUcuM0PtkWySR6Adxe/Z+GfI06o3b94u/SrWTPpnqGvdioLnqjN2fsh/j0A7aAqe
/// dPWfWe4RrM9U78Kfd4B+fj6Wdams3jpHwWmgaTgpJpSzTGwTBNTiSwkEevm+L1l+CbC7o1xszEZOmsCHb/qGYXSFaC+b14oXS9U+1cMnFPsZDTBOoFnKis4pnAiPRpjZZFQqCH61+Bby10EJP1E+NmRXB2ij0tQR8lZl09fxyUm2REJntY2WBjaTCJSSQ1l3dqbV+Zgc7jBIdEIL5UTAQtmj8FjrVHMwkH9XcHj59drouKYoBez+P54Y+B98NdQPPlOnl9M0OKBs3jyGTtFa1rX6MOsCe4/y2TnpVXAKGZIKWZYyjTQDGJWVfdOa9ZNbB1zqw6iQqV1YoEm+aFdc0yBN+/3y0YyyEg0AE/fKygeB5VP+Od9RJOx4MvbZBYMX2a+trkBTafFMPmDQJ3EnSR8ywn5IUy97JDsg0w6zmqEiYUv4c9oQn2NmAuGKG4gJ5JOkJ1X1/IsvJlkhsw3JR4kGjvQzWa7DsNmfoe/046WtjwLc1Sx/
/// 4TgNNA0nwYRSwChsbJPg/WAhZ5LMdmalaDq/5cJwhtlxp7dWrQGjqKkrtf3F275t5754GJ3s/I51nECTfLkddv9aOUIcCM5g29XXtvikjr4N5GkYvthVz3J72dRhTofvKet3lcWRTd6p1/fzTFuplHQuFNXp6tiE/u3oD3N+P+WJx6KvC4/VpmaQCUY6B65bqu8/cUhMMyg46RDndSia+Pebo7+r3rTpHC8f+6TcNazZS459tSPtgT/9tvdqdzTlOSm6UfYklLwUeAffOVdnNwmUblPuqFC2QOVEWToOQ+SedVw2w4yjtqPb4i9u8p1p6imGMaNDcevMJVd4nUHr4mPUs/oCzbKfQP/wBbSB5WfzwWTpa8po69/Jn0uc3X2g57d/vFlOO5iECN3jSV/8Hkf350kn8eeun2dpfXopz5K2fpj1W3yMNe74utFhrrYByWR8/Z0GmoaTCjRxWiwAZpsLiSkpaCiWnT/34gtSJlMKKeJkBDku
/// QlPQheOFJtZaJsKHQysfQZK2dqBti98+0b3JX0gRpOCsoGucQNON1mfAzIjtqPowaj0aQY7sJODV8c8wd+hF11UnuJavk/ZPUnp9M9WpO7RJuzKEo5urTt/218qzNr2h7jxu0rowVPBF59uMS0YLNMPRicd5bdIwlP3IDrk/24Uebedy2Wx7W3X06MteHwC5YpWdN2gHgv5Xqt033un3xxudqlfllrSsRgx+s8WUz8Y5U2h7tL8X0C+CzB/8+FAqQ29HB28ieJ0cf2R3yGBUKMUaeqGydByGapPpUloGAA3ZhtXOHVdZcOHKn7+D7jrVAYK+mk4boB958Ze+rKZNy+Jh8GL1BZoKrJLtmw+KdwWc/lL4BUySvqzjWlOJ7sceyfNU3wTLFLpCfvSIpT7Rl566/QL/TYXJ75Pn9B3kyTqs7bDCFkVHyHI4IneVpftIz6jKkSD1S6bDGvxLNuPgNNA0nNiMpi/+nqluf+D77sDbb32iWHwW
/// j0cq3ENgGs68Xd7So5Qa+l1hzUBOnt3aXUl96tYT/h9/TcBNWf2CjUl37vAf1J6TAG92G8hi+Fdt3HWltTGMRs6Y9nY35PmR9uz/2je93R5AxpG6gzVDYP9X7/WycBD1FlNejoDgPYy+Dgas45TMemlaCFJ33bmmNnQHBcvQRjnoE3yZDH9zoM+I/x0XfFA2VtJX85lr+XrIgFnNU3f8da0DOHV1bOM70qVAH1gYX8WLLYnPLN0Q/duv+ntngYIlb7hYko7effiFBJbm62S+frVV1+KgOkKWnCRqOoO3yf/mfLZfW+Go3En4EpU1U9332GOq0FUmz+x0Ac+Zsuugje8pO2QUx/hEITKcjC/Mfkx6Iht8+NChEVqQgXvYLN2f3KRyFxMbPsMCTXhC/5hfauvVGGbvo83jovd9plPBR5DlDwG1TfWBHnsDLLH/nq+lsmZ8yU9ZAmmeYk1q6yvqoC7pknwE1/htFAga/Wh9OsFy7jMXjtNA
/// 03ASTPAOy4TL2jn/5KRJqnaOhZK+10bNefTGcSUEmaAUVW9Ty4kTwJSGPgi8hbmZDvvv5lvTGHG0V2WX9bbPx0GcRSahCEASMAIO4wvDpN3c1y5rdJzRHmwGLm7DUd9Y5GUM1yHjCU6oBHTog3s+7b+V+pOdSz+aRkd4UfJulECTvPA4Xoqjg1ozoTV+IS8Fm3ok5C+shcDht3dFTXr95zQI4v+9j/zQy4EmLyfNIKx0DF9R6y0BgA0yxNsZHxSyfreWHY1Vs5UMX+SvKugaWxn57hdedm+dk0TpqephbSx0QsOowD1/sXNXCtQkx3ZdC8EI2uHjsbQ2XfQZP+chtPTrQOTnuqfN/vEA2C0Dd/oGZriQYdisy7JFy0IQ3pa8IE3Z7ATRFZzmesKgqv7qymtS2ZPh8TDM/kyDSgLO/PmLLIbgO0sTJsU/Ye4TwD/f9tdeaeZIL5Q6ILlLXzjGJykpOx6b5/xz1d9c9xmfMZxEG2r/mJYf
/// qS3Ss4WA02l/7EIyCflPA03DiQSaaRR24Sc/bWIKZUtQJ6rqzTNbUzBnxpSmpSflLMdDKSqbGGfln6k+f9e9ifLB4E1M7VSANeePHkLh+9c5QUyzyZmGgukJ5JiMlvRYBnnB/77ljYx6icfXVQJFcNMNFCDw/fTTt59vNypIlfNSOegOdcmpZEcyCUcAhqMvA+R24DYM2LcteKsyOY4v/2ir9NKQQMsCxQuvxd6A5vdbMt9Fv4JQT1Q7rvyEl4GeR9C+0pH2e/Bu9OYlKRoMwpP9X7tPjfZG0uZoN2Bp10d126RYenDGBbsmpjvDMAJieP728y52OhyKwGYwZD1kyxYNONCByehX+G/S5d6DNf8KKH1LpPmvdMF3P33Vdz04wwJ6Bl7h651+lt0kPS5pWTgmPiT/5rZcEzMcGqG/JXffeLvLi/J665oshp9Az/O1tF48kdUeuEegOQkdjjJCn8IXstayC/tqPYBGSzKg44g/L982DyD3
/// KbM7rJ7J+KDoxzL/5CtILxiMSGaNo45xcBpoGk6ECWaMa9Zvrh49pBFkdGyOSQkJvFDeMCiUrHwEtJwYhiUjC+c3U31gz/VOexegnWoqj5xwCnNuaP3ryzyfhKMA2coheA24BPTnEF9fQE7hoCLY71feKEh5ILNsJQ0OrdP+YI7I8vEJM95YdLr9Pj2+48Us9uYjsHAZFR3jZFCO6U3m/JwWB2puOsj5wNtsfx/d98WkR9Kp8jgOUiads6fXhkNVkOWbOkODE8I/gZK54w99OPryseotO96fOnl4mDu3FY3YKEEmj9uMdtdfo521hal13r6wPc5dfv6DHUxGnrTg58K917u8y459MRE5hY+ZSVto9djJAIggg1tmL77U297Ws3GQsuAF/KS8+PRhzbOUng/qX/oGznM+o/WnM+d6HarT6jkjdHh8GQR/kalmZxU0dQ/kBUmLvEF7b77N+dyvvsVA50OSJbS/9YJLalp0SLacdGHblR9P
/// 905Ch1UGNIRdMBD4AB8+SPUCg3RA+9OWNOqTlJfu1w40WUmq6t5H+YKeBoqT9D/SJesnLK4Ifz6KnQFlfvqisLNxcBpoGk6CCTyCY02iO3mXU6Gcnp7zF1XIG05NzmB8JzkpbHa6CjhZ19gVolML54yx3fngdzRytzIpb7EcF7S/96prEh0CP0KPn9kI/ebbkyFGW0XTJAzdjdGc5Cmz7MEm8Hq7OvqUjWUXPDav77IEdk8wAc3qCIPm+Lb1+PRHJ3X2Lu3BKF+TdXgYhHPad9fXncdBo5zU+PTVuumzNTFQQ5/UKWjbI+iQ/aGLdZDFucgzsMDdLj/+3HN+H2Uvlk5OFq3jYxPwxAOuMYN+2o7z/RF4fKU7bE//kGNoo4DHwj74M76hS/AgbGExsdSHbX/38fJ9m06g5ugO1i8zOyjdis61t85RMILVeAmD9B33aw/Hdkcd5+3rbeBXBW7I4dXqjge/52VDL7RHkDEJ/Qv+YsOkKZ+X
/// 5qh+MJVNqPNa4hsHbXBr5QWfFxWTXcMT9BHdbu+gEIGm+Ik/v8PvDdmNh6o3/InLxwL2eE9hmKyDcbW92TmXWBf+xJEj+hn9dR2ec39OPdQXA+hJYMQT0Y4NF4/Qf/fRa75gOAn/MA00DSfBhNedtSnvpYicXFapo0vw8KGnknNXxymFHt9JTg6l+KFYOKyRFLXV3ugY+KRlOFPNIGZ+l+lxEJ5ed6O+IlGT0ArykE+sQeUY907CUSFHHAZl3fqg6YFVHY6xScX8QL48UEn3WxvYz9QfYZl8AmmvP3bxdXrj0y+5b6w+uOezqtwhHPtwUIfK93EP150FPIljvzpHRd4Wr8vyjonrVgdvEtv5hWmXhFerfxMPEx8F6cUO/fk/vaixYYJv7i8mSu5hn+gwgcShZ5/x1rmsvGGFzvk/QL+hRwyGXVe9LGxAawb71zlplL/bfcutTk9NXgcI2QG8ZEEgIvnnQeM4KHsSPxRcKeA87C8XSrsH
/// Bhvpp8jRDvAd7EeCZNdZo9nt1vQ2vjg2DsaTmeAJuOESC9SszgFUZ+jJN1e/fFiWudiIfiAH+MPnhOF50JXpI9B81Tdzj2C9X1mjoNeZdiQI+cRvdzyoPTVL+ffoQjr16+VPnsYmk4e0f3wcIPxt1rsmPQtB8S0HmrSB9cGjQ34Jjie0E+HvBGx0ErjqA83Ttv+1yafQMEsTKJSKx+weQnNjMuciIw6H37/cpUJo0GL1HPxyfPt5HxLxCwHabQ73ulti5Kl2LlZ7Y32k2K3ONbHegfU2sdE57cx0jG9IpWNiD7YSepzSQIiAIYHpEQ5Vs8LhALMjREaT6QhUzhfvzF9WGo3uTPYb1+n7vie+02hMMxX96+yOyEqBJo+N8xpi/WZONfFg595P+QwftJSbPjQGQcWRR1vS+2Z9Kw3DT3BcY3x488x2rR8zGXlzUpsks7Re1ZLhfp576V/SLhAqiw6JzaQn2dENR5OXyaqx5U6iuxuYDO0P
/// O9eAfXK+Mzr98ikBenWyBfMEm5DpmGyixzbslOAy5ymUL0EMPC+67nNGv942nhT/oZVgM/wD9nf5Ps3ydwVvUd0shRrYMmX3q3OSqDoY9HAuu/7WIwdESoIIfoK3yCUetY+L1M/gJfwqOhDpbVfv8bqpvUfuCdrXm2fQa8FbusgsIe0MLOkYB0vaXResz/jiV+9RpSNB1l38yBvPGN8/TgNNw0kw4ZHHn3TBeHDpKY4SWCgdX+yIkTIK5lPmzKhMUNkWivXaLzM4HLgHCnZkwXUnSI30QzQ48eLXL/+++tPZ7V7PYnVqsbawrjrxvgR++w/b3+/8lmOjMyFoGT8Qgl/unAgIrWz21HQoBx9dIGX3gzWBY3yxBfQBSh0YqeOO38ZD6SRvvvdCLy97IRFriGPOPJ6UzCUrylKgFE5Vb/JGQMv1tRd8yN/4DHpKOwRL4De+hd5b38pC+QheONvsj/PqbyYD3kYDdM3/kiwMeCmBwI4NycVD
/// 8Y3yPKAyvrketeqbNEpeM9WfzbQf53bRLUHM9nPv6dt3Ov3iyyQwHtsW/s/0imvMHD/9k//p9Wa6e8F9PwFHK5Nf9xRtlWx42z9k4P1AX5pGQel+PPmgzFu/nb9u0wXqbJ6QXLZevdfL61/nJNH8j/Eb/cRvcPz1y78VKYmw0rvH2Vt2sP3OZPwL9cespvoE6QPnz//i53X9PUGlnYePURZyZr1u5p7zAZ/8WO6HmrQsDMMWnHb8obXnpy/+ct7geChwmw2epAO99Y2C00DTMJggpYqRck5L6SwvjznsOsGiBxZn2gjsrLOr9165R4IZAMjspy/9QgqGQVkHqSCHESP150/jhQNymjxPL82jowxJZUWHI2Oqy6/brPMTztpQf/N8XLjmJtZHbnCnsGatHhuU9IWzCLqyAebOUbwvaZdRQedl+/bLoO1f3dF6GsDoZfh/a6N8tleJurTWS2XSbmSikfWM59N5pnM+pD2iWW3Je7BlhzMY
/// mvmcfHMQOIpo/2DMfCItfkp30SHvOFNb/ZrTq0ewcR9bE4lt5igTOZl/3YB7WTqgR1qxpYvRxCDGaeMxdVpraNdEi9XvgaL4nYPpaEe0cRBKV0ifuP49FtCcW33z0cdSAxL9KRCrQY1NNH/X9P9s2bTRFLZIeSWvOI9jYOQbhNxDWyQDySF+ky8hXQY7ca/apfxbqn9v7TqU3oTNzWl2wQJd40Wpsq6FosoI1LXgA+2SfgWdTR7l9Ez1wev0cmGmtx/t/SB0UIs7P3rDl60ulU2d1F/Wx7l00PhZ81y0cnSeu25Z8N7h61Bvnv3L6hsHfyTCC3NQJ64LSqk1vX278uj3uerosX/zN9FFV/BN7YAuaMafcB5t5PfgpQJKtUlH2Yoeoav9vPQG9JAyH1jGdt77H/1BXYd8tvRTvBONoj/akXjrftPO10ofZENqT7RR5drvyW8qn5VrfuEDLOExYuqPDwQEjekaL9rIn+j+4I/4pbp0LnQe
/// 2TV+Rz+YxSzvnw9vqHdfSRL2fyH3QiHmAbJzJ18MLAfFlC0+DMbII13I7Qy++sdiUhsjb949YTh9AdCZWOsJ9qm446EHJTd/wUg6Jv8oeYcOkAffHfwt6ZkGmoYwIQQH0163zgzaH23nazCOtBirYASGsuWMvgneAWxAztY1PPpDQeI7qBgWdbFxNPWQ9rWEZ/CYDOFOYOra2hAKQN20Q79Zu1InzzlHfl+zXu3n0eIkgO1U+NpNGHV05GqbeBv8Dmyce6Cie/zceRi/b/GvcMhCMOdsWH6pthztVcnsjgc070yPhawsOWg5UvFDv1Ffm65+KLnBYwUqXfZgK6HhrOImO7JOqV99bQwHID2NDglZFwFbHcxJ37MMTMdsJJ+/qiRojNSHgOejvfSw9se37qMeOnLqgDb4Kl5l2QX9cd3xLI7qgNDHaOcgVOerNosPm6q/vf5LPjOib1c7aQakIyQwEMnWqf6o/pKL32/88iDd+VrqQfrN
/// ac6d2SBUG7JsnO9pfS111TMpxg9+g2cgZbvs7Le37vyw72vrdHuUae1oBM+sreJh1yu+p2b95RS3nV6aRsFoo2iXrnOMdLTL82EH7rc0oKQ9Qn2aF13xR/sGXWdbPJf9030WqP3md/4dZ3xo0EJdrjuGoU/QVdLOUfkMXce4NjzQALEX/ya6ges7vO8B0ytfnyl70JV4pM4/v+T6eOzo730nDNELz+TTgqccow3UT744d56Dlg79cL1ZJ/va+nd6MTLqGwmsXaJXX45ad94HVa/pvOqRHQe/47dSDuFPsx6QT/dyrjJA0U07KJPAD3lJTyCiQANZbbJd+8dnQ/m0LPZDeciI8l3uiU/4g9zPSE8jj+oejqdve3+DhpRMIN8yHOb8e+fBB8qV/vWvs8Roi+gX/+Je343E9wOm7eH7ZvwJapPO+aG0wzplCS4TbLJLx5rUf1CH173uPfWAQqgXFJ2mxF/QaU/XlxuXPdCUIOngzEAMGYmJ
/// qTKkGBWrs7a85qTetPFcf4TVWZimaHc88G2fgdMMhhTN67Y6EY4MVHVkZZIQx8akKJTn5dq5DJRrpqjpnDZDy6k7/srb1rV9g2GueuTxp71NlB31rln/l34eSinakqMg2La0nAUOSMaEQ4Jn3iZLX3PTnSLSCc1OqD600nzBhzIpT0arjtRpSx0+yDXJQueD0OlLsqM93BNru7pAI5+dhOGfuvX9iT/96w0MGuuZEKMldBXa4FNZjui0697+meqichsPr9+6GI7BzyGQ8yiIePgQLwUR4GhAlvU625RkID4j19wZqD2g7skymQ9ZDxrlkz/0gzQb6RNEO438S8Q220Xb9YnYt134ISsrBa1WHgMR6V1RX02f+BfX50cFM3Ff+Rt0o4vwhfIYXKp+eKWZih1X7vYZKpeHE66g0ptj/+r1gYZ8KIHHvdAs3o6PkplohyeU62l0yH6PNG3RPdhWtEE80p68EQyLVlD/hoO30xP808x5yFx1
/// icehX2GHQWOmFXllPyN6B2PdLrOpbVdfU/3m2FGnAVL4389K6mseeEJ2Ck4T/TE7y1OWkwiY19rg1vqBsBnVaQMPb1fWn+Cn7Fn0Y2s8BQh5+3p16kkkDAOnDdKS30kHh0NHflq9afavqjeuC17pEXfwN+jSbwS76rtEW5u/+XqpKxyxWe679qbYWkp8c4A2P8hOPZ18FGsekSX0BR2Ujc9B5gQ/9Neko98lX66/TWMvQpdeDBM4BRAxIvApSslQdbu8XQ/71xtIfmQbgTs0x57XIQvyufzN11++jy2V+mllf/B8/EvNKs/BA48/5eWydKeWodmCng6qjwFd7smuQk9dX1J7lxuXPdAMQSG0cEC1sRiD4xrGAEO1TiopnktlGJjQk+HwdqwHdVZOGFcIp1Z++52jC7AIfhaKZUevo9oW7Sb4dWdlDhtkm55wVl1nHYYBToIZUjmWNNKxdhM4Op8TrdAI4rDKa0FrTs9UG3ZdlviPURWG
/// lWYbato5GHoekwOGGLNVlBUjMdGjIBeZOO+dviY/+6NmM8MR++Mfq68riFbo04jZ3+A2Q1aZ/erLSBtCvrrHrkO/t0sdFU425O4zB972s00fP+ddv7NoobL22+hIU9KAQCD4AX1RdzjWkCPyZ7QcTjRswNtg+blWtrUf6p7MJ9qqQRP3Sh4X7f1sYyugmma3yyQnP8xV1958q98T/K9pr+nJdXVBtTV8i65RPtf4jTSdof8GL6xefjtl0znVvQd+ZCQRSCbmGgaPa7rtAvaqL3kowFO98ldxvlCknOAHvOVpS7RJv6ld0R6X41nonwYTsTdsgAKG7oBaynbV+NDTWx/6ntXHICoNUowOH2Q4PVlGYde0QXqlwAb6JM9me3vQZKJgRcEc/v++g//d6FCwU7YtIC7HT/L/hY8y8KDbLtx74Ac+M4euhuyp73Vn0i47N/8cfOZ3JkJ8UiTaCw/wZ5a+/Pov13W8wg4MHVjt8oC8HpDO3Xvw
/// YPWmLVvrQA2kbujTU5zEI+d71pfQveA7x7ifc8lC9oXeZp+ZiLa6Q1dq/XffDh/TkMVOL913owfaXo/xkHKZ3Y2yQ8aaRMr9jejJejIf0o7Y1SJgFF9JTga7tBG/G+0u+7hBmHmVgsl0Dfp1Lv7hQ+MjFvWyg65kpkEQnG3fRvq2+7/jvPR6Cp750hOXu3idadU5eaaBpqECzWwQUjzDFOyJadZZ2znpt12wq9jrMAmzI8xh+Abs++dlYxSU7SgHLWHqCJZCXTgmg7PON8oOhQW9g1j/Hv+NLxnEG9wjNm9eCGdBYbc99B1/m1NttbrX6fEXNOZjIYf6nIBBjpY060e1bEHOu+nCM9RXnQT+iRY2QedxPrxwHhgtYbTQ5ksbzKgyDwcjNOJ4McQ/MX7SxtECN2tBGowAFzEgsXKDvkFYOh+OTn/iXXay6ijF403+YtS3Dvz3xKAkaMPgY8/6qEFg+cqskT7443+s/uN7z8v65h12fhSt
/// AZBmcTgP/Xd67TzaMwwZWUdgST3cK8zlUTcBwr603qrWyYAgOjWbF4pmPqyvj7iN2v3B59BT198OTtT1lsGLy0RyEg+Qk55wqL2yUfIRnB099nvRVEuFzrUpF/ZeZduccrZDvsrKsnLbtCwEo73BT3SLujiPa9QZ+eETfDlt6/uqex/9sQKCejavAL/UkkNfyG0mP0ke6VHwo0/8o78UAn3UCWpmEFpSZ+e0tf2LdC5oHoQqV+10nXT+bvK9HmMLpAzQKjtum7+fepsLSCcMgnbu+WSuw+rVOvE8+AJDj7geEwjYELL2YMhpyfpS+pRhUG467vFcoMFTPzlSbfzIFV4X8oVO0lmXZ302PuTALK1+M/1O/U7Iw+3U0gQo5Dll4znV5++5r+kv64AyAL6mZAN0HV/GI17Ko2x2Z3C+rYUO2VQegAR2s1/y8pTAdc7JCkLEq+EwpwkmKytkGTR1qV+ztZY38Zlr3FeWcfp7/2u9Lr2WudHZ
/// pQ9q54HrXAmMZj7646d9VjYGOfI3QQu0lrzNuGICTWPeq/1+WAp0JiTH4eduuDBGwnWnaQbF22IESQ7GfZkAEuigbGk0yy0xsj1w6Gn/HJ4Lyw1AApMRSxHV6SgIHRe9PDoHVxLalxxtmrHDSK/7yu0evGlNGy0UzWODtxvltfLs72cv/NxnmLKzlyNSu00GKRgJBfZZT17WMPr5BB2zfeqgwATQ6fUoWQLnbnrpN+51+dkfL4LM7mI9m/E6dZYYtMsiGUrJx35I3tCXkCEjvW8d/CG1doLoQANYgyZH0r/OEvOyAtXvPEu8hXdaJgBPZ6ptV1/rSzhK1gHubAoCnJ6OnVSmvXl0tHoI6tlQHxo9eDc+w9voRNFzaJYdSk/hoXSjt729mMtCdyQP3e/6lI4hy9O2XVCvP44mq73pLAVFnLGX3OyuK43e6DCNdp8NVlCjcgej+J+DFdJcD7q8bPyA0XfRdZ/xR/ilgKADjkKjnxhgp7tv
/// us0HNB4Im31EmdIFq9v4OYlgk7LQZ591TTYS9lraMOek0bE7H3woSBXAT9Mnv2ZKwVHsbiliH/BP+hnU2sh9ZWdvydvvf6jacfU11Zs3b63lH8g6NpdXCuJFf7SjmXc+VJlZ/n5MARf7zz770kuipdGelA5SDTzZPrd8zhH7Y4DDd7B5qkTZIPU7neh4mpEL3UP2TA7ce/CA3+/lOUvatAwG+WdAdkBa54D4zwV8L4N83k9AH1yfbQAbfRV6kWft5JfkRwmS3236kwaads8ZO/+m2nf3fT6gUn2hF6qZg9ohqO0T4LegOaU5sjE+T7pka+Ib9sdTHPFT18Dg7TD0/sfa4ntle4WiqbTHYcC7AapPOuR8M171q6+NJc2he+4jzW9sv3KP75wBQErNr0RaFw+e+Z0ao4KKZNIJ7w9eqe577DG3cbWBQV2euHL5Wxr9rNvpttPbrqVEo+UPyx9o2hFHyiM8FIrRy8aLL6127v2Har8ZwpNs
/// J+KMN4eQBOBpLtbnA8CzvZLzc3ChzlXHjh3zjpg3sxkx8jWe/3fzDtHmitjNGAahGz2de1IAttegfXRqrOmqH5NDWnQGpKE4lG8M8BK8fIwgGanVQ9t5bPT3t9ztswMEfBt2XeGfqePIOXiNdagEBv/8wi/tbpQ9lcG/FBQUgumlWRk9ST4/TdfCMPkm8SOHn/Zg+/IbbnT+8OZefGN8EGpWunQgBDyz5gR2e9ldIFM8584Smckx9a+zRD36l7FTN/I9++LLLLi71r9ZjIOMz6OKDyEDeGFpq5zBReaLQeJTJ/lblghKPXfIwg90UqqPHNDBY3XeiGagdbbp/Bnnf8DbGgEznVa0pYv+R77oXOLedtBJmhkh7Io6WL+pgFP0+TH0qQFzHgBceN0/mG2eq8eU0GrlqBPqT1eg6laQGfqRZ6NYD/1+X5umGcwkBwMN+BJw0fBfXz7qASaBCG2mvZRNWZQdAQi7O1B37LIwLkIn+Ma1yGiT
/// 69jMhy/z7az23nhrdf3XvmGDZ23z5m2AjYbRhlibmXWiD5sHQuZF6CS6S7lRjvRZe+ai83w9Bhtk83K+7V7yCZT8hutX6FPc5/JzXY0OVbxmEIw/E629sgtg4rA4zSd1PukA/QKyhn78IS94UQd+iSce+++6x9r6U24oykv1csgXO0GdPSXKc9LeH5jsdGQvyyPVfTaY5qXFCz/5aadv0yWXOb/kjywI3nG+f/gD//5xy8eylEcOP+kDJS/EIfHL/YaYk38iwKnPBPyeZF3/lq7FvfhzXoi57sbbqss/9xX359DAU414iQx9KOU8H0pHtvhXtVRvi8YhgI/BJv0xs/FFukTZlDtc/7A15M5ACn1gwos+m/olicQ/g+BBxmR3Q6DmI9DygbU7pyzSqsp/OGg2Dz30MwSf6OYZ55mtuY/EPs5eKYHmqwSaL/X7cSkQJiB4H62b8tFpE9yI0SFAoTPcEKG0H2ENBIxFiVqgoazpJIE5YEvj
/// WBASCt7VGAahHKH24WMUdODxp6BEVdoh00I7LZmU1Un16+NCk1e1TtfXqFd1A73V2m/pZ7+eDAE6Pa8uWjrxl/OwjgQ6U6slg1xfQG1IpNPvyKIfT0uM2cLyGnIjmOi0K4HV6dX6cc4M9hrvwMIpleX2R+XzxdoW+CDf1IxcdgHONzEt/ai2klS7e3kzEMo6PJ34nM79QJ1KOtT1G/D4M9aZeQfA7Eia3YxOfDCqIwDdXpjF5VrSe3hDWSoPW08BaCr7zRvf6x8WOPLCLxJFBTSIllrdd+CgPwrjq1caZPSjKWM9q8gMI220+k/d9r7qin1fzGu9DRSsF7yv69aXWqgTfkjX1Gb5h3Ru5VO22kudCtrb9IyKlIXfUL1bfDbq+4f+MdEmKOXZ5pm3yY6NLJyU+QZB5Kv9qAG31yeZZ029jsOcBx1sQC6eSR8IxmN99iAULxVwxr16EqRAX/yxwMrlsMkHAWzBpJ0c5JeaoPOgLX4PG1Hw
/// XLSpTKf2ycIy+Fm6FPYnaNfdH+o67Ebda+d1Ifqtdqkc698C0mdQDeFN8JVJgjZEO6OIXFRBq11stvsPPlRR89PgNd/owKlfavcPXEv5CYTkm5McO9gvcsWOsKtYrpWrzzTOB/hzZnIjxkBfKAtd6tK/Mzj3ulShdIB0Os8gWqIfi2xDIWUK3QJI1edFIXXSEkpTZ80Mg7nq4Sef9K0fNduJv+jShy0uGg0vEmg+1u/HpUCYEILXtRkfmWUYrkiTBgLdLjMlXVGOUkEr7eStYMHSt22lQ9ups2l9P562UU5LvKYj1vmMzxgPA7fRZLg4shxM9K+rjatdvnzwAPqhXW1hQf/k9H8YZmc/498hZrPr2m86FB13klNKWgD4TKOs+VFBCRvwP//ii35vT2BZpi0D30pmT9Z3nH+Jd3boRPgpynJdS8HyYqJ3tKmziBdUGMysHpjTm7MEFUmvwmZGsbNBGLobfAo5nbxph89E4Qd89wNXHuTc
/// DhXRh/aV1QOiXO0KPjAIY7Zz+SHblbb9ksyzvxmM6EjoSfbnaTlBUTZQS9ASpNktol3eqMggSZDqqitp1r1SgOUV0M1sJjqwQmY0H/ujk9Zv2t/vx6VAMSEpkj861yJvoLcjWByo9cYAX4MxROfXZcTTBcPx0dbYM7EMqqZgjr9w9MEbOaZefjZRQR5p+FzKjMce3UAdz767vu73xYx2145wNcsXx0TApEduofMKbrq2f5IIL5mt5C1Y1vDqbXXZaa0hxUm/MkqM9lBuvZFyurcuz4A0ewiyZQsBbwSRCvTy4AM+UVYES2Vdi4HNlz7UFv8aWkn8CgbsWoGmbKrmXfL3k8Jsg73nEdAgx7fvvNgfM+658Q7f9oklB9hsDEAEst1VwmKjM/kaIzjaCX9ZIrP8gG+nL2cSJz2hMtpkT8PtJ+RIm9r+vCmvUmaWtgSBabu8UfHAE7HsKUFUyjETsLxgdIQOMNFR6v7KmNHctJ8ZzR39flwK
/// LJkQjlsOletMq4cyLh7SkVAf9brypxmtcOolvQvFMCrqiccAamfU8dpFeKOgRs4kAp6u/Cef+Cu9Cf3h0blmOJr19cN2Z55l07/ONq5m+UKr2pFnzrryfjKY6Wg8Sk2dEXxkwMF6r3qta7E0o1lWL5ayJNDUkEL/CWJZ18dOFO84f1d61A0tG/WozdKiQXRQRuhW5ttiY5YLdIRulb+vbBT/SzlEW8DcjoVhyKE8NtOxNrTMXw4egsZmOfzmAVujLSsVaVtJr/S+q/9bfNRLa5JBtqUuKL3R8rrXxdvsrTxhH6pL+dX+rG8LxUyr/ILob+vP8mHwtKRZS3iSzZU+dZnQ5LHjj054x6Z/d9K6Tf/aL8NiI0yI2SM/dyUSAyehJF0xlFnnoqWfABeGtEVlNx1tO99rGZudTsi+n1NpY5uPcjLhFJq/zYfhOEhzfzx+j6B3MK5u+Ur3I8AXH2ST4ku/eyaNqkdI3aXco7MkT/CUWSleZuJr
/// MZFvPuT+GEyyPQgv/hBwnrpd2/KozKb8OS9lGXpAXsoDXU8KOhcLqUMyCl+ZedIv/0pF+Antwe9oV7+8C8GQRVsmcR71okdlHtEV/idju5yVi21647y7/1tslG016YTfYVfDUfdlfSnbmH1DlMc+spNrP3WF/uh8kno7LgYfQ3+hLXgBD5Y70CS2JMb8I+DEdbOf65dpsREmTHGKU5ziFKc4xSlOcfLYL/ZaKiS29CATOHHtxj9frlnNKU5xilOc4hSnOMUpHj9ITElsmcJMgf1wRTvjFKc4xSlOcYpTnOIUpzgiXpHCywwnnLH5/zpx3abb+mSe4hSnOMUpTnGKU5ziFIcisSQxZQovm/C6dZtPOWn9pvv63TjFKU5xilOc4hSnOMUpzofEkMSSKazsD2SYzmxOcYpTnOIUpzjFKU6xKxI7Dg0yA5jytJuumL4gNMUpTnGKU5ziFKc4xfkwxYpXzPu4fBDwxhCvp08DzilOcYpTnOIU
/// pzjFKQb6m+UWI/a8Xb4Q0Kbuszv4lJAdnzB8pV+lU5ziFKc4xSlOcYpTPC7x316/bvZ/pFhwR70Z+0D4oz/6/wERmN8jpZLp/gAAAABJRU5ErkJggiAHOwAAiVBORw0KGgoAAAANSUhEUgAAArwAAACuCAYAAADUO976AAAABGdBTUEAALGPC/xhBQAAOr5JREFUeF7tnT/obdW170Ni4TsITyxicTggCCHVSR7vCkmRQhREBEkjBCzERgsLbSSkkRSC2AjyCxZanCJYWImFCKlOEwQLU8TiBvJ7JIRLineLPLjwHoTLfeNzxtye/WfuvdefOeaca+3vB76Y/M7ea6619tp7fdeYY47xHSF2uLq+Yfqh6QXTW6YPTJ+bvjL92fT3I/qj6a7pE9N7pjdMT5seMz2Qti6EEEIIIUQD3OC+YsKs/qvpn6b/KqT/MGGWMc6Y6EfTqEIIIYQQQgRydX3T9KaJqCymNGdWI/Tvpk9NL5seSXsj
/// hBBCCCFEAa6uv2t6LhnOmib3mDC/d0w/TXsohBBCCCHERDydgNSCnPHsQeQJP532VgghhBBCiIF4RPcPyVQuQaRY/CztvRBCCCGEEEe4un7cROpCzlQuQR+bbqWjEUIIIYQQYgsvCVay0kIr/cP0SjoqIYQQQghx8XhUl5SAnHlcssjvVTkzIYQQQoiL5ur6eRNVD3KGcQ36m+mZdLRCCCGEEOKi8I5oOZO4Rv0qHbUQQgghhFg9tOz1OrY5Y7hmvZ/OgBBCCCGEWC1X1w+a1pivO1S0QX4gnQ0hhBBCCLEqaMl72WZ3I8qufTedFSGEEEIIsQqurh8yLamRRLTupDMjhBBCCCEWD9HMZTeTiNJ76QwJIYQQQohF43mrOcMnXV2/mc6SEEIIIYRYJFfX7+4ZPOlQqtMrhBBCCLFIrq5f3jN2Ul40p1BHNiGEEEKIRXF1/SPTfyRDJ53Xx+nMCSGEEEKI7vFau19tmTlpmF5MZ1AIIYQQ
/// QnQN1Qfyhk46rf9leiSdRSGEEEII0SUswMqbOWmY3k5nUgghhBBCdIc3l/jjlnmL1D9N5Aj/3URkdFt/Mf3DxGty7+1Z7Pdj6YwKIYQQQoiuiC1BhrH9nYl0iRdNPzOxMO6miZbF23rU9EMTr3nB9CsTtYD/1ZTbdm9SQwohhBBCiMH4AjIMIOaQdAMMYE78G6/BMD6Y3j2cq+snTKWrMhAtftv0pGl+bqufC47xNdPnpv9nyo3bWv9uupX2WgghhBBCfIu38H3chIEl2ko7X0wj0dEh5o7X8No/mIiIsg22xTa/m0bJ4wYyt82xwjQzNib3gbT1GPy43jT1GPl9K+2lEEIIIcSF41HLp03vmzCqEVFLTChlxkgnwIjuRoDdFOfeN0bkrrL9x9NW6+EPCs+b7ppy+9ZCfJY30h4KIYQQQlwgnqPKdH+L6CRRY/JifXHVfKN4x1Tf6OZw895LxFcth4UQQghxgVxd/9TElH/OINUWuaaY
/// 3alRZaKYP0pH1hee6tC6ysOdtDdCCCGEEBeAR3R7MbolRHQ6Nkd3Lr7ArWXHOEqsPZT2RgghhBBipXhtW/Jzl1hTNieiwk+no+sfz+/l/OeOpYaU1iCEEEKIFeOL0ZZSO3aISGH4YTq6ZeGlzHLHFC11XhNCCCHESvFFYTkDtFRRtmx8fd+e8EoOpWsNn9PnaXQhhGiP13VncS+/h+fE66jx/pjpdGnLS8JnDpm9pe79wwPE66ZX7fHxNtvZ33ZO0+rxCzEK/xKUqmnbi8g9XsePnS8arGl6aZP8aBpdCCHa4kY291t1SpSdZIHzKyaVW/T7POeD87LfGj8n7gPM9lJb/w3TuHuCP6SwHoWUwtz29/U3E+N9bKKzqR5WRGH8KbjlIqkIrS9CWabu8Bj1WclCCHF5TDO826Ks5RNpa5eJR1AxsbnzM0QYV2aBhxlR9xa8J7etIcL8LmftjegcfwLjySp3sS1VvzOt82neIxW5Y47Qc2lU
/// IYRoy3zDi1iE/ULa4uXhaQMl7vfMnp5PPbi6vmmii2puG2P0q7RFISbiZpcFXbkLbKla/1R8veoNb6YRhRCiLWUM70aXGTUsZ3gRgaXTJT7LGV4k0ysm4q2Bf791Ma1BNKL4WTrC9eILAfixyZ2DklKlBiFEH5Q1vH82Xd4ahbKGF51uUlTW8KLn05aFGIG31c1dUEvWK+no1o83p4iukfxhGk0IIdpS1vCi99KWL4fyhhcdr9le3vDyoPJw2roQA/DVlrmLacm6vHa4V9dv7Z2D0vo4jSSEEG0pb3gvrxJNjOH9Xdr6IeUNL3otbV2IM3hksHZN12jxBb7E6SlKzEQ2CFEtXiFEH5Q3vOiyFrDFGF5KnOUbO8UY3rtp60KcoU7uZ21dbl5PbNWG40/uQghRkxjDe1nrFGIML8o/OMQYXrZ3M40gxBHatamN1OWlMmzjUV7qS+bOzVzJ8Aoh+iDG8H6Qtn4ZxBneN9IIu8QYXtau/DSN
/// IEQGLzhNF5PcBbRU8UW6lY7wcolrBy3DK4TogxjD+37a+mUQZ3jfSiPsEmN40fqrMYkZxC9waqH8l+zSmN/N5pi0aE0I0QcyvPOJM7z5GrmK8IrqxD1l5cSCOBZSfW760PSuCbP9dhL/+z0TvbLp6U2ZEern5rZ1SkzjqzzJBu98kztPc3TZ6SJCiH6Q4Z2PDK9YPbG5u5jVr0wY2xdNj5toanG+17Y3UCAHlcoRLL76wIRZHlJfVl3AtvFznztPc3R5dSqFEH0iwzsfGV6xatxURixqYpvkjubLkUyFVoVX10+YaJ97bJqevz+W3iHAHzSmRMpPSa0chRB9IMM7HxlesWrK/0hQ1uw50+ke2iXwhXY0ydivNaup9n08qk6kffs8zdXLaetCCNEWGd75+D2Vhhu5czFH+fJuMryiKp5Hm7toxoqIbpt6tx71fTntA/uiFZo5yn3WG+k8CyH6QIZ3Ph7hJWjFLCmBpBJi3U6++5kMr6iG
/// P82xKCx30YwR+bkPpq22w/N9iS4/lP4itinbMpofscfTloUQoi0yvPPxFEdML96gpPL+QIZXVOPq+umti2SKuFCfTFsTvVP2hkA0vf1DjhBCgAzv8pDhFdXwyGzughkiSoY9mrYkloAv9iMym/s8x+qTtFUhhGiPDO/ykOEV1XDTmrtgzon33UhbEUvBKzWUakChsm9CiH6Q4V0eMryiCn6hTTE/MrtLxXOpSrSP5gdFC9Yq8JN/+fH3fvI/f/zffvIv/+P7ph9k9H3/9x9/L71FbJHOzX+38/TY3nlD9jf7N3tNerkwts7Z5jzdNv3M9MTW3252d956N7yeH3vDxO/wD7fEvZi/n69NvzZiDC9a7v3JF+GzHumWieuDQBXa/G+un8u8XiZD7q0bl9zFckzkbSqNYamUM7zUadTCwMKYicDUPmV61fQb0yemu6ZvTH81/Z+M+Dv//qXpM9NHpl+bfm66fSlm7t6DgRszjvsd029NX5i+
/// Nv3J9L9N++eOv/FvvIbXcr7fM71kwuB9P21+lSRTi4nleHPnbHOe/mn6r6TN3/7NtDlvvO/+Ndfq4as3w+vmhH2igyidLgkWcQ/l9/MfJtLLEIaPv/PvvI7Xv2Ba/6LgS47wurHFxHKN0LPgjokOtJQPpboF54Xrg2tlc70QpKTQwB9MVNPgeqEnAc3DWJOl/gNZxndX42T/KL1bLBEeVsoY3o/TFsUMkknDWGEWMLYYsI2xKCGMCsYFI/y66Qdp6FVgx3PThFnDqHKc/2nKnYep4vPgc+HzeXYNDw92HERnuRYwqpjW3HHP0f818QCGCeazuZmGjqcHw4vhIN3r6vr3prmNfrjnYn5ot1/H/LoJ+6npGRNBsXPCZPH6aQGQuAivL6b3ihPndLyKRGl8LB5mKBHKQw6fcW7/pwpjzDWDCeb78Ega+cKhLWz+hB3TG+mdYqn4l61EUfEX0xbFBDABpl+aiJDlTEOUMCMYOCLIi4xepocE
/// IomYXCKNueOMEtF0Iu+30+4sghTJxXxicrkGcscWJT4jPqtn0+7E0dLwevv7j02lDcxGmGe2HztV7/eIKZ3WCKQQbXw6bWkYcYaXY8BQEg09J0ziu2mPYvAF40RwI471lBiPcXkwueAUCA+d505QTp+nd4klU+bHhR8HTZtMwG76RNdIOaht1HIiesm+LMK8eV7pvcgkkdzc8dQUkWQeHH6edq9LbP9IkSE6jVHPHUdtEfm1h62glIcWhtdzLYmmlW7bfkqfmmJmW6cb3m3hLYalPsYZ3rGKmbX0SDnR/tyYtUUaBLX4LzAdcVybWa14XAMehZgbgVA5spGkCBs5krWja0NE2gN5q/Wmnkdi+/asCbOU2//WInf6qbSr3WD7RBQ/ImWhhJjZKH/Oahteoq2ea5l7X7Qw2KROlI3a+RT/XMOLOC/nTXk/hvfDtEdl8IguOba5sVqLWd4XTRcS8fWLeugXVfma25Dr41MEy5vW95yrsQsV
/// 9/Vy2poYgN3YmX7vJcJ2SkSdf5l2uwtsf0j9IP84t7+9iXSB5g8Ntg8s3KudKjNVzDCUS62paXg9rzb3+toieljuuitneBELrE7PBq7N8HrE/4Ot7fYsrp0n0p6vmOEXmcpPbeOrbpkW4Nzw32V1GsOsHn7GY8ST4cNpa+IEKdeUfM/cjb5nMVXfPGXF9oEHhdKL+KLFQ8NL6RCqY2MT1d2uqLAE8TBY5h5Ty/D6gqPca1uJe/m43NljlDW8iCjn8UhiP4b3Ttqj6fgMKnnDue33Kjzer9IRrBQvhTFkalu5uxvcLO7XLV5W84X5UYm30pbECewGTmSSqe7cDX4JwrjFLzI6go3Ngr7cfi1FH4XlqWZID1dES3P7sgSRE/16OpzpRBter2DAwqzc63rQ/FnH8oYXvZK2fshaIryeIjB39rSlhuddLw5/Eskd9L5eSO+4XDyF4dgTPStTl3ORzP+xJqpNdQ++3Dw0PZC2LBJ246au6RJS
/// GIbo1XRY1bAxlxgVz+kLcrfTYYWRFvORTpHbh6XpvXRY04g3vEuYqp6XchZjeL9KWz+kH8M7PcrpNXRz21ya+NxXWPvZzcq5VaXLMnMR+HnapDAcU2w5k1J4btG5Yxkjrh+2x8MAN5qLb0hiN2zyJ3uowFBSv06HF46NRfmq3D4sVd9Eml62bWOQgpIbe6mabnpjDK/vz7JMzXP39nkKMYYX5Re+92N4p6WE9JPLXUr4vpUVKRj2w3DZi9WYhhmW9sFrfpje1S9u3iOnXEj3oFwOqR/drviPwm7URHZ7XRU/V+GL2WyMJU/JnxKGtHjN45TGsJbI7r7eSYc5jhjDy32A387cv/UqSkdOW4wUZ3jz6RZ9GF4W8I8v1bU+s7sR10//niYLCeP+heWLS+FqCi0PMT7H827WzP0qDLlzckzzE96j8TSE3L5HiC8M6RPcgFaf9mA3aOqdriWN4Zh+kQ63OLZtasXmxlyLPkuHWgzb5lofEDYa
/// n04TY3hJY+i1vNQpsXhq/KxbnOHNr3fpw/COb6pV937aQtOunya4yaXdHz25qbc7tig2UcsLKFexh5+zqXUVy6ySjaLdymIesHgSXm3U127Oa420bYsawsUrttg26QCWG29tmha1zGDbWvsDAmIh27haveUNL4GhZS9EGkuc4c0veG5veH+f9mQ4vgaqZqORVvpdOuJO8UguuUZjmkrkhOlbVsmtuVxdv2aa8+PW78XhUeupRr6UiPrSkWhVXdrsprz0igJj9A2LpNKhz8a2R+e5teU8n9Lsyhe2jaf2trlm/WlUDnRMhHfpGhe9jDO8+UVhbQ0vxzlu6v7q+oapl85pNdRZyTIvlcIXnbISpZ5GP01bXz/eSnFMm+VT6rMZBdU28vvbQsweEG1efMTXbsjk7RKJyt2s16rfpMOfjW3rEiLj25r1wGDvv4TUmX0Nv95keHPi93Z4G+LLMbwsuL6V9mI4HrTJbW/N6qAXgxtdFgiVXHm/
/// 0TIqD8zFW0OW/HKT99Jfzmqf5XSI+JLqsMj2hmnR0NpWyA/V7B9A28bre9u8FE2uemHvpQV0bptr17DIuAzvMQ0PYK3f8LK4mpbM4+/TnvKY2+ba1XD22o3uGybKR+R2roTWv2AtboVlX80oSDyPvVbmin17Pu3tYrCb8KUaNvRlOg2TsPfTmGOtFS3OiVzo2+lUDMbew2xCbnuXoGHXmwzvKQ2rqb8ew0taJzO3d01UDyIyy0znI2nkcbjvuqRUhn29ls5ERfwLXaN13eIMyGDKpjDkxJe3n+n65awmJc1h2o9RZewG3GJqmTa735iIKpMKsNHXJvaldkvZyVUb7L21I5WYTM4R3e+2zx3//0+m2nnEH6VTMRh7T4saxVxTnDeuO64z1OJ8ofPXmwzvKQ1bnLUOw0tqp9eSLTWDOL8t/1hxDASDNsZ9Iww863H2u75GizEr3Z99VWDN0ihPppHXhf8g1rhQ5nUMKol/QXL72KP4oe3+
/// 2rObb61V8phcOo/93HSTNIq0CzukBgREAIk6Y4hr5BV/OSUf1d7HQjUMaG6bpcW5eNV0+9jip9Sp7DHTL0yU+qpl5ganhfBaU60HGsbhvHEtcU3Zwx3pO37tpfPFZ1j7fJnZPtOuuQ/Di1EhzZASoFRJYjE0kUX2DdPEonLKXtYIXO3rfBe2tRneEnh0t9bnhcHlGiF9guDcoWH3RejM3D5nInId8XnlNL582yi8vBhT7zVLYDDWQosOH8HP47vp+Gpo3EKBKDxHudRCxprK/zh2gN14a0R3MYSY6kkNC+x9GCQimLltl9ToKK+9p8bDAsc+Kc/Y3ke6xTumaFM+OMprr60R3cW4EnkflW5hr9+crxqG/HRt3raGl0AK95gnTOejim6iMDXMbHG/yG2ztM5HeWV4D6mz6BtDzfU7PiLtBpg+CxGpIduixOiNNGphvMTY3PJiU8SXbz39lDmWNufxk7QH7RjfQKMn0biiuwWA3HT3bsKl
/// xTT7D9Jws7DtEKWLNG5301CDsNfzsBCZu4tpG9+wIINthygmn0VunBLCIJ79nO01tKsON9+mWWlY9n7OFykPue2X0unrrY3hJUBEJHf6dC+lGv33Lrf90jrddliGdxcPlkXPrr+dRpuHR32jr6OA9V3+RMEq9tyA0cLwriPC2/Y8onbT8/7AVCtyECV+aB5OR9QFdtONNEGfnJ22HYltk2npqGlnjNjgBjX22siHBYz06MVgp0jT95GR8rPNKOw1kYsjMd3FOuil8xVdueR4M4r6hpeIV8lIIukPuXFK6uM0Wh4Z3l08Cp8bo5TKG0hSKvNjldD4ZiYnid3ZIVq+4fWnsh5KcbUr5+F5QLl9WppIlh9fLzEAu9lG5lKGzQjYtskBzo1ZQoM7iNlrP9t7bylh6ENqRQabOBorHH3A8dzZ0Aesn6ehimH7TD55pOk9ngpS1/AyBV1+EY/nZUamoRGRPj6DK8O7S6yPiKvbHzu7WyBd0zt4
/// 1JrWOKVlG952qSDH1KYZhZ8HFkmQV0aklBWfS22HyCKQ5h3a7GZLrmLuJjxXkxaAjcHGiKqM8A0mJw1zFHtd5GK119MwIdj22feoVIyjptP+jeh81ANWsVbH+9i2I/PcWciZz22vZ3h5CI/7PYqvCHC8dKYM7308zzqqQ2n+fJTCF7wxA5Ebe65mll69un7I1FONt/YLrqbgJbh6M3VEAoISvUfgP2QsqODHlKdWTOSSUh7Y32bnMTjaNjgtYCopUklJqdz4c3U2umqviUpnGJVHPBUbJ2r/j3YSs3+LWuB391RkuQQ2RmQL5HwaRh3Dy/2lXBrDMWIXWR+feZThvc/V9TNb2ywpKifFr0+JK0k6rMRdFnfivZSO4svMvjya9m4ZeHScMjC5Y+pBfTWjAH963USBOXe16/pNUeH8oeHYTZbFQ7mb71yNrsk6FRvrl3tjl9Iv0xBHsddEpDNQfu14TmdhbKyIBx4iltkFY/b3qPzhKufM
/// xomaEfltGmKXOoa3zm+5p+VF+QLWteRncWV47+OLEXPbn6un0wjxxARSJ2YBtI/sMs3NdDelz1jg1XzaeDReo7hFTcMx4gvd90OEP3hxDZBW03Kh3zl9kPa4KnaTfWnvpltCTFeHR3c32FhMNWOwcvsyRyejrPbvUdUZvkhDVMHGI4ebigbURi4htoUOpuhTLmxEWkC16jHpGCJmFch9PkyjiTe83GfqVY5h0XN+P0oon2onw+vEVWeou67Hy5Xl9mOuRi628whbi8guX1qKFROuX0Rnq6N4i2Uu7txx9qZ+mlGcw3+E6Dfe64NE9TaHdpP97d5Nt4SqGjawMTFYuX2ZI8zs0bJW9m9Mb0c0wyi+6KoX7Ngw17ljnqtn0xBVsPGiqkwcRqnjDe/5xg2liVt8dCeNsIsMr8NC6ZjAT917l5dljTiO/PVzlLpT8BwwBa4xud3VNh1N/ykMOZEusqzcaH/KJerb0yJAxJRK1XNpN9iIGqOh
/// i61y2Jh0yMrty1ydWnwVYXqIfk5qzLEE7NgiztmXafPVsDFpTBER3T9Mo4k1vBVbq24R1zyINREPplHuI8PreLWM3LbniPtW/Vl0b0mc25854voZ6CXrdf3iS0ptv2VHcrfx41lqtYHTNRB7xm8mXOS542ohTHiZPulnsJsrq/QjatlWS2fYYGOSixyx8v9oHq/9W0R0PJ/HuRI4vr3jLaGzudYR2Lh1Pv9Yw/tWGqU+MVPrmK/D8mQyvA77m9/2HDGjX+WetYOnrOb2Z44G5vHGrZzbFuUoyN04fIJbMh5x5GGBL2TpL0ktPZOOZnn4+SfVgYs9d2y1Fdzb27Gba0Qd25NpAFEE5lUeNaD2bxGLvYp0VOuRVFEjYkah+gMW2LgRswpfH5TyizW8LZsIRTWkeD6NcB8ZXicmleT9tPW6xHnOM98Jz6eIXA3PtjEk6zK6OXyRFdM9HC/pDUSzI6Z+SmtGSY9O8FaYEdMkY3V8tXFB7Oa6
/// iunlDTZ2xOr/7MI1+3vElPaoDm9Lw46Nc1Z6ceGgeskR2NiPmUrPkLC93dbMcYb3j2mENrhviAgyHJpQGV4npphAlQDNAZyLmFnxM/nIsSaBbVePGHWDLwLkg+VpmHxlKlDkzlMPeiHt9bLxRYOt00s+THsTht1YWVGfu+nOUbXV8vvY2BHHk105b3+PKOf2p+hGHS2x44tYsNYsBcSuC2pYR3Rf2124Fmd4Ry7QKYzPrEWkNRwelwwv+0T1rIhz8FwaoS4eHPzL1n6U0ttphAxx5SF48luHgSpJ3DRQCRGNfijt6bLxZhYtHy4w3POe5s9gN9aIGrL3DK/9l5Jd1ZTGjKiPehhxM+xvEQ0Iqle3qIkdX0QJvF+nzTfBxo+oDrKb1hJneOtXZ9iHKj/5fZujw1kZGV72KWom3lNIKFFaT5hdFFFx6ciapJgPFbFwZ7ltgCOJ7YFdQv01o5iKX98tm6eERmDsxhoRncIgUmmghSJq8aKD
/// jmv2twjzdrQ72Rqw44tIoWlaws3GjzimXRMfZ3jPdhIMJyYPk8DLbvqjDC/7FJECwD5xnJxbAkS1RGSXMSNmYo/UFPa6t7k3zBF5q8svMRaBTwH11Ko5Jy7+W2mPl4+nlERMuw1VSJmytIDom70brZTXgamyv0V0d2tSbaAWdnylI/DUQG5q2mz8iIWfu10KYwwvkb72DZlimlAc3oNkeKOuozUqk9tOBNY/gNwbpmo5TQxa4Oe8dW7pELVZtRmF5z61Wsz2btqLothNlVQAoqK5G660q4PKCfa3iPSJl9LmV4kdX+kyXswm3E6bb4KNH5GXvJsHH2NUKMV4I43QDu8oWnrhGtvbDRTI8LJPNSpprUF/T2dsi/LlLU4kCot7LOeC5Yu5rGYU52CKrE2jCqZuHk57UQy7qbLCPCoFYG06iLza3yIWyK22wxrY8ZXOGef6bRqltPFZvFi6UsNuLneM4W1TO3Ufz8dkijq3j3O0G/mX4WWf
/// el7/05P2DK9HGku2dVtXRDCKZXVha7ZaPwy/7kv/iA1R8cUldlONajqxRr2TTtu32N8iFitVbY9bGzu+0nWLmaFo2pXOxo94cNxddBVjePv4ffZAAjm3uX2co9268DK87FNE04k16sDwluyotj5jFIF/YSOehCO13GYUx/A21rljjVTxTnZ2U42oIbpWHVQCsL99sveauSIfdbU1eMGOr7ThbV7GzfYhoh7z15Q8S0Pwm7Nmw8u6lIhOl7vNJ2R42Sdq++e2K+1qy/B6KYhST2QswFpHGato+ktnYNHDOQPex7RZaWJaGp4S5/nRNHoR7KYa1Yp3jTqonmB/K214efg4KH+2Juz41md4ffFn6Q5/u7WfYwxv2xq828RUwpHh3UeGd6h2DO8Le/84VYeJ5eI4PJHnz2MrEem8YXrO9LaJRV05A9y+1mNpvHJD7XzeotFyu6k+sXeTlY7roLmB/a204aXLmgzvOK3X8G4fV4zh7WeBeEwV
/// HBnefWKqaq1RO4a3lPFanxGKwnNHI1owTlV+it2j/zRsoFMZ+cabKPD6OuVdXT9typ2bKBVd1Gk3VRne4dotE2XY32R4R2LHV9rwkkrQ9LdlwYa3n3UzMrxDNdfwEpjKbVfaVTK8vqKyRKeOI4V9RZa+piIoizasKYiX88IYtq/3GEH5SiWnVPQ7YzdVLVobrhqGVykN49VDlYaIHN4aKQ3F1wVMJma2TIZ3Hw9E5bYr7epbw1sij5QPTakMQ4lbxTpVKh+3IaaG5DERKX8kjTwbu6nK8A5XzvCWrilLPrUWrY1T84cEGz+iSsOXafNOjOHtZdEa6WER9zcZ3n3Y1/x2pV19a3g/3PuHKVIJsjFcXb+yd/5aih+m4jVhF0293Gp+7Ip1lbKbqgzvcOVyeCPq8K69LNkXe8c7V80fEmx8Fn+SjpLbv6mqUYdXhreMtGhtfTLD6xfm3PIhpEMMmw4XTptmB8f0QtorsSGmNeYxvZhGnY3d
/// VCOmYteqXIT3vb3XlNDaDW/pqDh6Km2+CTZ+RKe1S2o8EWEM0XNpBEeGl316eWtb0nH9g5NVYuHUh+nUiyHE/NBN1adpr8Q2nnISUUcypzfTqLMhR9BurKUX2yCmd782fbMS8VDwi3TavsX+9mtT7vjnaO2thVfXnY7x9/anhHajrzH3AQIpD6YR2uG+omQTq43UaW2fchW2tsU+EaHnHvjHFYhr5G6pL92qc9SK4hF16hTnzmNtEZl/PO2Z2KdebtQHacTZUNjebqwY09wNd46+nf73MZavdDg72HG+vnfcJXTQwnhN2PFFPCQ0PWc2/qt7+1NCuzMKMYb3z6b26WkxM2QsrN71GjK87FNU06Qn0/ZpIrJ04bu+y8HMzf+g9Mj6mhBE0df0wxtpr0QOfoTy5620ikbZ7cZaOqcSXUTnRDvOX+wddwkdNLhYE3Z8Eeaw6Tmz8SNSW3Y7+8X8vgyvthNJTNTxMEAjw8s+UTI0YpH1+jqq
/// 2kHNLVr8WtqSOEdflRmUynAOfypkOiR3/krq8zRiEezGWrq0FrqbNr9q7Dgj6hjv5m6uDDu+iOn/z9Lmm2DjR3yHXk2bd7waTO73YK7aG5WY2rAY293otQwv+3TLVHqf0CtphBWB8ckf7BDxNKlSZEOpN0V+TuRW1Y0C+BQXswkPpL8sA2+0kTuHJVW6Fu87ezfaEtqtIbpS7DipclF6dX7zzmGR2PHxkFC6nfU3ra631HQiIi1od/FinOFtH4SKqXLz+7T1+8jwsk90RiWVJbftOXorjbAi5uWT/iFtRZyDqZiYJP4pqveD6NMtG9O4vAekOiVfWGhS7EHAbqwv7d1oS2j1DRTAjvH7pr+mYy4lDPRq1znYsXHOSlcGwUA3ud4Y11T6oYfjuZ2GcGjcU6bh077upBHa4J05IwzYYVMNGV6HWcL8tueonyYmxZg3xa7qDEOp273rlOrkYnoife5LWKwiQRXqVNQobXifNf1nutGWVNNS
/// UbWw47y7d9wltDudvSJ8EWDx5hPooIpGDRh3bz9K6HCGxI1hhFkjDavdupq4ko6HzZFkeB0WPue3PUd9VPwoyrwPT/m7Q6B2YP781RafdVyPes95ZbECtSBz46Oi+arh1Om6VtrwRnSJQquuNrDBjvOjveMuoYMmF2vCji/inDVZuGbjRhzLYR63r+ngu5/7TZij+QZqDlfX723tS0kd1iuX4XVi2gtz31tZFad5H94KV/EV5ur6IVOteq7ntNulphR+jK+ZhswW9LGKeCgehaH9b+5YSqn4gjC7wUZEKVe9+GqDHWdE1QHSJL6fhlgddmwR5dy+TpuvBlFYG7d0Sgt6Jw2xy7w1NKfUZibNS0BFLfQ9TIeT4XWoT5zf9ly9nEZYCdM/PNy/uqudY34VjFJ6N+1ROfzHhhzXsYZwOV8ij8JEV2ooHvW2G2xEM4BLyeONWISFmkzR18COLaIzGZ9BsbbbQ7DxItIZUL6RRsxUNGJtTv3p
/// 6LgUMIIpD6VR7iPD68TsF1pZOcrpJwmT82jaisgRVxB6rMoaKl+Ah5GfughvOWkNHrE4laJRQsVLxNkNNurGvVtLtDI2PgukMKTkKVMOa4o4N0eNe1qlH9Gtrmlpt3RcLMh6ypQ7L0PEuTvI5ba/RSz2Q1XTGmy8z/bGLyHSix5LQ+wSMxW9Uf2W8fl1GyWUN14yvPeJmS1oG9j0NEkWdxLBJl2SB6qx4n2kld5gg1M/PKJetgGRxafCe6i5y49BmTwcz2clIjE3p5WVyXG5xCWpY3iLdVrbYDfYiJXmqEl5MhsXs4UZwTyUWJB3snWt/XtEHVZUvWWujcm1QKk6THyJyHXWfNjfI9Jo+Lyr/FbYODwI5PZhro4/6MSu76j7gBV7LPkmSTK892Gf89ufq8PFgtH4eX7LRI57iTU0pJU+wIanlkXB8K5sBV9B6tRvPadSXyRW3ZZ+elxGWkMdwxuSb8eNdu/GW0rVorwpp7L0cfz1XF1c
/// e01EaTf0Tc2avDYeDwqlH3xeSpvfwf4e0WIYhS+WTJUmImrvotfTMIf4bFlEabKN6vzO+jqOqNQv7mP5sn4yvPeJy+OtW07UZ8ZLn+P3NxufGoXEMcvw5vAFXLlzVlvTO6W40WM6IMrsLaPGXx3De7j6uAB2o/3l3o23lKrkVtoYVJuIMCFnp8ntNVERcvReGiYUGydi8R153Nnpeft7VIQ0PHfcth/RrAVxDZ3e95hKDRthHOJX2sdVZkBfpVEOkeHdJe6ho04aIg9o+fHniPOb7lfTG08opSGHR0M5wblzVlPpiWYkvkjrFVPUF2ejZeSAxxterpUn02hFsRvtbRNmIXcjnqvwqgO2/Yjarmi349UR7HVRaQ0otC6vbZ/Ibm7cuTq6iCUw9xmFVQixbUdF89H5FsnxC5sx1HG/tX6/yI1bSscXXMvw7sK5yo9RQsVT73bwCHWEd8LLpLKf06eqMSyP+EbEPfzL0EPe7vinMf/hYAFF
/// xI/HMcWUSSuJt22M/EyZzryVRiuO3XCj0hqQbTsmn9e2/du9sUppcMtae21EhHQj8pBD8nltu0Raox50TlaasH+PipSi4pFx2ybVJSIqcmyUTf/Yoc7i5piqDcxO5ccrqeNmUIZ3F+9smhujlPLnZS4sjCt/XjfaapE8/elyeW1iI6kz9T1E7MNh+ZZj+ArIt01RF9spxT4xloDISOy5OewPXxC74UZVa9iIlIP8CvQJpFzKyMjq4PzjlD8cUXlgW8fzOydg24vI2d2IBYvfS0NlsddElCfb1m/O7cNQbFtU+oh6MEDDFnjGmbZ9kYZYbsU95ic/TklxPzveNW4dhheVS2uLq+28UdkHTzfpUbXu9+r+ex3V3AuHqP8IXS3i6imOEZHI81NXHrVk+oCHnRIrIKeKfut9p8X4lzEyRSW0PbfddCkXFTXNvNG/mV6dY0R4r20Dcx61cAgdLw91BHt91EKsbRHNnlWJwN5PqbaoqPhGgx4W
/// 7HWRswqIVJdZOeT2fhplRLTf3tZwYxA7Fb0tSkmyxmR6tNer9dQK7pxeh7Iew1suR9bLcOXGKCk+/3lRaQ8mEWyL9CB7KViY1vwLhyhfKuTSmPfQUEp8CYdF3H0KLdLEjdHTaa/6JP7HI3wVtd14I7pg5YSxZqHc7SHmN5lcFoexf9+YctssqdE1Xe09UW2a90VUFsP61NAqDvZaHmY25doip+URDzWDcrbtdZGpINv6wvTsmActez3pHlG54dsat9AO85D/fYgSJpEILVPJxyOoG9yc8Fv4O1NuexEiIHI6bXI9hheVi5zGLoTcCA9B3WWui2E54l7Ng3VOJcqbnhP7t/dg7E9rhH1zbzinZay0j6TO09Q58dQ+/GnLiznzQ0edu6iphKGatriuFvHTdvlyOwUJXkyUE+aLSC0GjpxODO22+Bv/xmuipt/3NXmlv70vMi81J9IoMLF0y+MBAgPJeeO//H/+jtnDhObeH6HhqSD1rzeu
/// Iz4jUhTsAYpUlI3uPbBgcjlv0ZHnbY03L3XN5Ebc+zFHd0zcD4j+bkQgB2OCqYksnXZM5+u/rsvwIj4Lzj0zi6Qb3kr/3Ral7M49CNTIrd4W1wfXL9cL90yOgTVBm+uI2WRSLSI+q2PK+FNflT91RT5T6Gn12wXihbanPiyUEuNPn97zHwwuyuiqDMeUCkJ3Smw9ZY69SkqH3YAxTLkb86Vocu1gey+R1JrmsjeZAR+3ONHeUyvKuy8eoDDbzBjw38gc3WNizPF57fNmW9emYVV86hteDGik4d0WEVCMJAGtbfFvp9e/+JqiFg9QvYjo7pEZ73k39ZCSSt3jkfHNxddKjP9M2qN5eNSXp8IaUyH7KrNCtTT+o4Epze1zCVVbtMe0r92Ea0a4etJow7aPbaOVgetB5ysN7JGutxqpAz1qeqOM2AfsJWlYuuS6De8p3Ul7dJz6aTI96cTsgEf4cm8aovpt51oTu6pwqIjsljeKbvJY0FbT
/// +OZ/XFozL91niKr2urcbMQubonM9e1SR8l+2HdIIcttfs47W3T2HvZdUguiFYb3p61md9DzVrOVC4h40vKlVfcPLeOQW595TU8MWO8c2BOlVZ2ZO533JuNgupx5vH5FdpjniIutuemuWWKNGZH9pDbEF1fneDC8fVwi7IUd1X+tVxRaC2LZYYNdiiryVBi9UO4a9v3b+c0vxMDk/J39eAGoNei6difPUNrwQO+s3VEMNLymrU5uLLVEDA4HzTkqdft2tcbP7l63jbiEeTGLTSOqVyNmIfJvwxVujoaRJfn9LqFkNYrspsyAqd8Nem75kaj0ddhFsm5FduXrT7Mj4haU2TE9l2OdyUxvG/S62Mbw95MYOL2cZP1PZkwZWDptXWosnnvOlTZaMXzQtVqpui6mU2GYfXjIkN3a0trqhdICvxo2M5Dcrx0Y+q92coxsqtBYr92fVtj2GbfcSouTFWh/btoiMr/16G13y7iReK72HSGJNsXB6
/// 3KxXG8PbQ5rAuPrtfVSTitaI2Tw3dLmNDNXpAtFLBnPSPo2BihjFOlplITWlXbWGu2kv+oBZi/x+lhD50U0bbtgNmnzetVYemFyCbCi2/egmDy01uaLFMWybdGBbazrIF6VnEu7hD92XYnqnVRtqY3hrl/zKaXzDIo4pv601aMJaA6+3l9vYELFy8Vba0nqINT5DxefycNqjOOJbEp4SqRrl2l7OJXba6rU0SlPsRn3btDYTQiSxSnqMjbPG1JBy0/J72LZ5yFrb9fbZrEVq53BDdwk5mNNa67YxvNTCbb2wcLzhhT6aZJXW+YoVWeYv0llXIwovxJ07zpoijzQ+XaSPY+1jlsDLuUR1ohtWX7ISdsMm8raWSC+1V2NnQbZI+alrMr2vp0MLw8bA9K4lvSEmsruPl4xc82r76WuAWhheiF3fMUTTDC+sK9I7Y1Gy5w3NLbmx/HbD/gPT+oJGdc5lbDWCMfo07VFbYm8u76ZRusFu3GvI
/// sTTjOa/W7lRs7KVXIqB18lPpcMKxsWjksfQSbx+lw6mHNzoitS33u7JEESWdFtnd0M7wkuaYe18tTTe80M89f6pIgSkwUzrf/bMjZZohtMDb9rWeQmJx3PDSLHPgs4qLZo4Vx902LcYLi0ctTmx/fEewG/hSTQiloMKm4Ydi+0BjilptkkuKZiTVouLb2LhLfFCgrnB4JPwoHpR629R6Sn2umOmaX0e+leGFtkGxeYYX/AGqhyYaY8VDX6G0Nc9PmXvDZ4FXf2WmzuHJ6K3Ld7BI4fG0R7Fc3Wtl2Vu5knlP/HPxnt+5/Sqh7pu0cDM3LcW4Ue6qm98Z2xdyoqkOkdvX3kQubTvjlrB9IMVhKWXL+Gxvp11viwdmPjD19vs9RJRcK5PW1dbwPmpqtahwvuEFX6jecu3OWFEytfCCb3+CzA02Rjw59Nkydh8vznwn7XdLYbbqNGDwp7teIrvbapcH7jeRqOjuYhZ12k2dFIeeo73kHBcr
/// m1WSlNdL2bKeHxo+MTWJ6h7D9ocIea+55KR82GdaIV93LN40CuO7hIgv5rDs7G9LwwteSSNi/HMqY3g3eNmyFscxVCwiDwpuuOsv0TqXL2HV9qmj8Sn91h80JqveefLKEz2aXdRuURc/Ivl9KqE30yiLwW7ytIZlyjtnAlqIPGOMR5Nc3THYft40vWfqpSoBqR8Y3W5n3qh2YPuH8e0lSo4BJ+1iVre5KrjxYgV+q7KSp0TXTgxV+WBOa8MLHumt3SikrOEFaiD7NdRTmgPXzvNpDwMp296QMHRfrWP9Io00OENFybGQAvlZ+ilLQv4TtZ+JrO+b7/oPSdSA3N2HkiKy0bTu7hzshv+sCbPUwryRM4npNiPUv9Hdx/Yb4/tr059MueOLFg8JGO8+puIHkKLkXHPUOq4d9eXBgOvt9SVeb/Y7w4Jrgjj8rpYIWk0VJpTI8/jaumPw4FxE99Px6WfetAnjGzVLuK24mVA/p/i/VukanD+u
/// 39hrZ4fyPZg5ee1THPwH4Q1TjYvylMhzrlfRwp/eemlXyXV1v67w4bTcxLp6M/Anyf39LKXlLuLcwkwA5o0cX9IdmObNGYYSwlhjOkgNWIxRO0WKXv7c9JGJ8mm54y4lts84Nt4CTdsW7L8dxy/S8USdNx5GeKDj2l7F9XYPNy6YX6rO8JsbmfbAthmD4BZjxteNB7+vETTCYOMxSogI5/QSmR5M4xzgMzj3mDcCPOwn9xnGIBLPOJh1vAhBn1Pi/PIAw3t4fXxnUsqheolOPlOaJbEfuc++hPj88Ceso2pUtrN8m1lOGB9+nUVZ2/jqVkpx9FDWhXyUeufAc1N7meqi7F3+gvZpOfKY+XLVyzGMjXqXn3rqADMGVHUgCkf0ErOAGcEEY1aJyuaMxbZ4Da/lPUxhE81jW5jCejMeDUjml8VaGKzfmDD3RDI5H0QYc+drX+QI83oiuDyAsB3SAW6HNkJoSDpvLAzkODlejpvj5zycy5nm
/// vG7OF+eb93P+7XNY9kPBINy8sCCdhcqs0eE+zO8sBorgy1Azg/HCcGHaMHGYIdIVqG4TXy8+hwfnML7c40uIbcXMSHvAjTFIxeB+hznmcyHoc0rcw3kt4kGm7oy57zf7QTok9+jNQwbXztCFk7yO12Py8UAEuXgoeMI0rqV0GDGr1vnS8IWLzye7H57vwehy3NOLbE/BL1Austz+1BY/rue7qfmP5yPp/8XiT7BRK535QeimyUQkaRqaCDCGBCNMVA5jsq+XTJha8oN5rRnnDhcDVSZFMlksyHnh/HCecueP88r5xTA/dhFm7QTpvNl5uHc+OC+cu/3zxd9osGLn97LP1w5ugrk/YmRI6cIME2HjfklwaFuYWmrPkoaGUesrRVHUxx8MMOLcQ1kEf+za4e9cW7yO19eJ/k/Cn554Eszd0OeKp0q2TZcvvkhlnhD9CYopBXJ0MVm5sWuLp5k6Jg78R6mH5hkbMR3zo7R3feDGem6jlVN6
/// Oo0khBBCiO5xZx6Zv7ER5heTylMC6RSYYEL4x58m3ZAzJcA+Es3k/ZEmZqzIa6qYfG34eWido7wtIp3nI7s18SmayLzd7jqqCSGEEOIcnmuRu7FHiqlmIrTkn2KGMY8USSZ/hP+P+LeezN1GpFDUrTbgpp9zktufVmJ/+svJjF3A10eLZCGEEEJMoI8yXr0Lg06E+sF01uLx9AVyonP701I8mPSXrxNrdolm10tdEUIIIURhPMmd1XW5G/2lixxVouC183Qpe9Jje8n+2uh6ekzk9ctMw/JaagshhBBiD1/oQ0mS3A3/EkW+MGWtahpdVjpSDqaX6gvbYp/6667nK5Gjc7srdIQRQgghRB08sthL9YNWwvSzOKxeBy0vHcN0fI0FhFNEjnVXPfrv4WVRKAmX2+dS6ruFthBCCCEm4AukLs30kjpAXio15+oU2fYC1RhrzGRun3pRfOeXsXiNyRq5zS+mEYUQQgixOrxs2CWYXqbC6U5T
/// pzual8yiLBuLBHusQLEtjHhf9XXBo7o1eskrsiuEEEKsHs8nXWNOL1PgNG6gw0x82zs3uaQskJvbSxvgUyJX94209/3g5zCyvu5GHP9zaVQhhBBCrB6fdl9D9YZNygLt8OJzUX3KnZZ7tG9egsndiMjzrXQUfeD9uGt1lqPGcn9RbSGEEEIE4yXLMG45g9CziNRhcqmdG9sNzHtPE4GkfBkNNHpPV9gX56mvslve351zmdvfCPFgpzq7QgghxEXjxjFnFHrSX0wsZmIxWFyk0uu+kouLwSX6SFOCXissnBImr2575FN4ZJwofO2uckS26yxWFEIIIUTn+GK2nlrcsrCOKCD1comwls3J9cgtucykJ/zKhDFiMdfSIrj74pz1YXT9HHN+KctW+7wynmrsCiGEEGIP6tN6F7CaEU3GIorK1DtjE8GlfNq8qBxtgj1ai5HHMLOQ7S3TBybGIqezx25nU8RxYNh/mo6+HX7OMbmcZz7X3P5G
/// i8+3TnUOIYQQQiwUX0xUI9qL2aVaBFUOnjHRWYsGGfwX04tRRaQYbMT/p6YuJawQ6RhEaNkGJos0BFb8Y2iJEkc3L2gpjpFjv5k+ufp4FJfPikg8RrNlhJzc7lfSngkhhBBCDMBzLqMNDNFJTOlaoq3RwtRh6omiPpg+qXr4AwkPHZscZ0x3bj9ri1SOvqpQCCGEEGIh+GIjUgEwWjmjIcWLhwEWoZHu8Wj6ZGLxGsPkOBNNJ4pOygRR/96aljBD8GTaayGEEEKIGXhuJmkDS1/UtRQR9cbkEkmNKb3mppYHGlJISCnB2PIZEy2lxnDPDzkYb/b3gXQ0QgghhBCF8IYVGI01dmprLdIDiKSSmzxvet5rLPNZ3TKRk02klhQVovXUXibfls+Qcm9LynPG6JK3fCMdqRBCCCFEEG6oiApSckrpDuPFgj0MLnmwRHFPdwHz803lCSKyj5mIylKBgs+AVAcWjb1t2l6492cTn80S6wjv628m
/// zLoaSAghhBCiAZ7uQPSQOrZrMFclxflAGLZN6TUiuERdfdHZ/ZrAVDtgMRrnEgPLa2m2wfs4t0RkKfVFWsmlnGeOmfNRf4GeEEIIIcQBHoUk6siUMwbt0isvYEwxbBhWIuHkxxKF5b8YWaKwGNhNlQo9LLg4F+QRE71WlzQhhBBCdIxHLZlux+z1Ur6qljCvGFm0lrSCaPFwwMOSmkYIIYQQYoH4tP3TJiKcRDx7K28ltRERbvKOuTZUcUEIIYQQK8LzfmlgQK4qi6wwPoqCXoZYTLcxuQ+lK0IIIYQQYuV4BJjKA6RAsFiL/FaiwDLByxdpHXyeVFmgPbQWoAkhhBBC3MNLcBEFZpU+JphGDEQH1Ya4b2FwaVxBTWEeYJSTK4QQQggxGI8EUwmC8l2kQ1DtgIoQNFBQNLiNqEZBBHdTco1IvfJxhRBCCCGK4jnB1LF9wUQjB6KLRIRZ+a92yOVEmgkPGFTe4IGDDm7zusIJIYQQQogZ
/// eHeymyaiwpgzzDCRSAwbhphyaSobtitSRmiUQdR2Uz940yyDBwvVxhVCCCGEWAxX1zdM1Aveb9O7McWYPvJRNx3Olp4/jLHH4JMCQvQb0080nHJx5EpzDkhJUAtfIYQQQoiLgXxUX0D3mAljTKQTY0jU8zUTzRIwjO+bMI8YZWoNb1IqvjIRSSYdoLTY7mYMxqRDGXnNlP1in9g39pFUDxYAsv8YfCK1yrMVQgghRId85zv/H1DxjIL5y0CPAAAAAElFTkSuQmCCAfwHUEVSaGRHRlRaWFFnVG1GdFpUMGljM0ZzUkdGMFlWTnZkWEpqWlRFaVBqeFdhV1YzSUU1aGJXVTlJbE53WVhKclgwWnBiSFJsY21Wa1gwVjJaVzUwVEc5bloyVnlJajQ4Um1sbGJHUWdUbUZ0WlQwaVQwbEVJaUJVZVhCbFBTSkpiblF6TWlJZ0x6NDhSbWxsYkdRZ1RtRnRaVDBpUlhabGJuUkVZWFJsVkds
/// dFpTSWdWSGx3WlQwaVJHRjBaVlJwYldVaUlDOCtQRVpwWld4a0lFNWhiV1U5SWtWMlpXNTBUV1Z6YzJGblpTSWdWSGx3WlQwaVUzUnlhVzVuSWlBdlBqd3ZWbWxsZHo0OFZtbGxkeUJPWVcxbFBTSlRjR0Z5YTE5R2FXeDBaWEpsWkY5V1UxSjRlQ0krUEVacFpXeGtJRTVoYldVOUlreHZZMkZzVkdsdFpVTnZiQ0lnVkhsd1pUMGlSR0YwWlZScGJXVWlJQzgrUEVacFpXeGtJRTVoYldVOUlrTm9ZVzFpWDFCeVpYTnpYMVpUVWlJZ1ZIbHdaVDBpVTJsdVoyeGxJaUF2UGp4R2FXVnNaQ0JPWVcxbFBTSkRhR0Z0Y0Y5VVpXMXdYMVpUVWlJZ1ZIbHdaVDBpU1c1ME1UWWlJQzgrUEVacFpXeGtJRTVoYldVOUlrTnZjbU5yWDFSbGJYQmZWbE5TSWlCVWVYQmxQU0pKYm5ReE5p
/// SWdMejQ4Um1sbGJHUWdUbUZ0WlQwaVVIVnRjRjlRY21WemMxOVdVMUlpSUZSNWNHVTlJbE5wYm1kc1pTSWdMejQ4TDFacFpYYytQRlpwWlhjZ1RtRnRaVDBpVTNCaGNtdGZSbWxzZEdWeVpXUmZWSEpsWVhSdFpXNTBYMVpUVW5oNElqNDhSbWxsYkdRZ1RtRnRaVDBpVmxOU0lpQlVlWEJsUFNKVGRISnBibWNpSUM4K1BFWnBaV3hrSUU1aGJXVTlJbE4wWVhKMElGUnBiV1VpSUZSNWNHVTlJbE4wY21sdVp5SWdMejQ4Um1sbGJHUWdUbUZ0WlQwaVUzUmhjblFnUkdGMFpTSWdWSGx3WlQwaVUzUnlhVzVuSWlBdlBqeEdhV1ZzWkNCT1lXMWxQU0pGYm1RZ1ZHbHRaU0lnVkhsd1pUMGlVM1J5YVc1bklpQXZQanhHYVdWc1pDQk9ZVzFsUFNKRmJtUWdSR0YwWlNJZ1ZIbHda
/// VDBpVTNSeWFXNW5JaUF2UGp4R2FXVnNaQ0JPWVcxbFBTSk1iMk5oYkZScGJXVkRiMndpSUZSNWNHVTlJa1JoZEdWVWFXMWxJaUF2UGp3dlZtbGxkejQ4TDBSaGRHRlRaWFEr</Resource>
///   </Resources>
/// </XRTypeInfo>
namespace XtraReportSerialization {
    
    public class XtraReport : DevExpress.XtraReports.UI.XtraReport {
        private DevExpress.XtraReports.UI.TopMarginBand topMarginBand1;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox1;
        private DevExpress.XtraReports.UI.BottomMarginBand bottomMarginBand1;
        private DevExpress.XtraReports.UI.XRLine line17;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo1;
        private DevExpress.XtraReports.UI.XRPageInfo pageInfo2;
        private DevExpress.XtraReports.UI.XRLabel label6;
        private DevExpress.XtraReports.UI.XRPictureBox pictureBox2;
        private DevExpress.XtraReports.UI.ReportHeaderBand reportHeaderBand1;
        private DevExpress.XtraReports.UI.XRLabel label2;
        private DevExpress.XtraReports.UI.XRLabel label1;
        private DevExpress.XtraReports.UI.DetailBand detailBand1;
        private DevExpress.XtraReports.UI.DetailReportBand detailReportBand1;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand1;
        private DevExpress.XtraReports.UI.XRPanel panel1;
        private DevExpress.XtraReports.UI.XRLine line12;
        private DevExpress.XtraReports.UI.XRLine line13;
        private DevExpress.XtraReports.UI.XRLine line14;
        private DevExpress.XtraReports.UI.XRLabel label5;
        private DevExpress.XtraReports.UI.XRTable table1;
        private DevExpress.XtraReports.UI.XRTableRow tableRow1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell1;
        private DevExpress.XtraReports.UI.XRTableCell tableCell2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell3;
        private DevExpress.XtraReports.UI.DetailBand detailBand2;
        private DevExpress.XtraReports.UI.XRLine line15;
        private DevExpress.XtraReports.UI.XRLine line16;
        private DevExpress.XtraReports.UI.XRTable table2;
        private DevExpress.XtraReports.UI.XRTableRow tableRow2;
        private DevExpress.XtraReports.UI.XRTableCell tableCell4;
        private DevExpress.XtraReports.UI.XRTableCell tableCell5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell6;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter2;
        private DevExpress.XtraReports.UI.XRLine line6;
        private DevExpress.XtraReports.UI.XRLine line10;
        private DevExpress.XtraReports.UI.XRLine line11;
        private DevExpress.DataAccess.Sql.SqlDataSource sqlDataSource1;
        private DevExpress.XtraReports.UI.DetailReportBand detailReportBand2;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand2;
        private DevExpress.XtraReports.UI.XRChart chart6;
        private DevExpress.XtraReports.UI.XRChart chart5;
        private DevExpress.XtraReports.UI.XRChart chart4;
        private DevExpress.XtraReports.UI.XRChart chart3;
        private DevExpress.XtraReports.UI.XRChart chart2;
        private DevExpress.XtraReports.UI.XRLabel label4;
        private DevExpress.XtraReports.UI.XRChart chart1;
        private DevExpress.XtraReports.UI.DetailBand detailBand3;
        private DevExpress.XtraReports.UI.DetailReportBand detailReportBand3;
        private DevExpress.XtraReports.UI.GroupHeaderBand groupHeaderBand3;
        private DevExpress.XtraReports.UI.XRPanel panel3;
        private DevExpress.XtraReports.UI.XRLine line9;
        private DevExpress.XtraReports.UI.XRLine line8;
        private DevExpress.XtraReports.UI.XRLine line7;
        private DevExpress.XtraReports.UI.XRLabel label3;
        private DevExpress.XtraReports.UI.XRTable table5;
        private DevExpress.XtraReports.UI.XRTableRow tableRow5;
        private DevExpress.XtraReports.UI.XRTableCell tableCell17;
        private DevExpress.XtraReports.UI.XRTableCell tableCell18;
        private DevExpress.XtraReports.UI.XRTableCell tableCell19;
        private DevExpress.XtraReports.UI.XRTableCell tableCell20;
        private DevExpress.XtraReports.UI.XRTableCell tableCell21;
        private DevExpress.XtraReports.UI.DetailBand detailBand4;
        private DevExpress.XtraReports.UI.XRLine line5;
        private DevExpress.XtraReports.UI.XRLine line4;
        private DevExpress.XtraReports.UI.XRTable table6;
        private DevExpress.XtraReports.UI.XRTableRow tableRow6;
        private DevExpress.XtraReports.UI.XRTableCell tableCell23;
        private DevExpress.XtraReports.UI.XRTableCell tableCell24;
        private DevExpress.XtraReports.UI.XRTableCell tableCell25;
        private DevExpress.XtraReports.UI.XRTableCell tableCell26;
        private DevExpress.XtraReports.UI.XRTableCell tableCell27;
        private DevExpress.XtraReports.UI.GroupFooterBand GroupFooter1;
        private DevExpress.XtraReports.UI.XRLine line3;
        private DevExpress.XtraReports.UI.XRLine line2;
        private DevExpress.XtraReports.UI.XRLine line1;
        private DevExpress.XtraReports.UI.XRControlStyle Title;
        private DevExpress.XtraReports.UI.XRControlStyle DetailCaption3;
        private DevExpress.XtraReports.UI.XRControlStyle DetailData3;
        private DevExpress.XtraReports.UI.XRControlStyle DetailData3_Odd;
        private DevExpress.XtraReports.UI.XRControlStyle DetailCaptionBackground3;
        private DevExpress.XtraReports.UI.XRControlStyle PageInfo;
        private System.Resources.ResourceManager _resources;
        private string _resourceString;
        public XtraReport() {
            this._resourceString = DevExpress.XtraReports.Serialization.XRResourceManager.GetResourceFor("XtraReportSerialization.XtraReport");
            this.InitializeComponent();
        }
        private System.Resources.ResourceManager resources {
            get {
                if (_resources == null) {
                    this._resources = new DevExpress.XtraReports.Serialization.XRResourceManager(this._resourceString);
                }
                return this._resources;
            }
        }
        private void InitializeComponent() {
            DevExpress.DataAccess.ConnectionParameters.MsSqlConnectionParameters msSqlConnectionParameters1 = new DevExpress.DataAccess.ConnectionParameters.MsSqlConnectionParameters();
            DevExpress.DataAccess.Sql.CustomSqlQuery customSqlQuery1 = new DevExpress.DataAccess.Sql.CustomSqlQuery();
            DevExpress.DataAccess.Sql.CustomSqlQuery customSqlQuery2 = new DevExpress.DataAccess.Sql.CustomSqlQuery();
            DevExpress.DataAccess.Sql.CustomSqlQuery customSqlQuery3 = new DevExpress.DataAccess.Sql.CustomSqlQuery();
            DevExpress.XtraCharts.XYDiagram xYDiagram1 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series1 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView1 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.Series series2 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView1 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram2 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series3 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView2 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.Series series4 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.LineSeriesView lineSeriesView2 = new DevExpress.XtraCharts.LineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram3 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series5 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView3 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram4 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series6 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView4 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram5 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series7 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView5 = new DevExpress.XtraCharts.StackedLineSeriesView();
            DevExpress.XtraCharts.XYDiagram xYDiagram6 = new DevExpress.XtraCharts.XYDiagram();
            DevExpress.XtraCharts.Series series8 = new DevExpress.XtraCharts.Series();
            DevExpress.XtraCharts.StackedLineSeriesView stackedLineSeriesView6 = new DevExpress.XtraCharts.StackedLineSeriesView();
            this.topMarginBand1 = new DevExpress.XtraReports.UI.TopMarginBand();
            this.bottomMarginBand1 = new DevExpress.XtraReports.UI.BottomMarginBand();
            this.reportHeaderBand1 = new DevExpress.XtraReports.UI.ReportHeaderBand();
            this.detailBand1 = new DevExpress.XtraReports.UI.DetailBand();
            this.detailReportBand1 = new DevExpress.XtraReports.UI.DetailReportBand();
            this.detailReportBand2 = new DevExpress.XtraReports.UI.DetailReportBand();
            this.detailReportBand3 = new DevExpress.XtraReports.UI.DetailReportBand();
            this.pictureBox1 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.line17 = new DevExpress.XtraReports.UI.XRLine();
            this.pageInfo1 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.pageInfo2 = new DevExpress.XtraReports.UI.XRPageInfo();
            this.label6 = new DevExpress.XtraReports.UI.XRLabel();
            this.pictureBox2 = new DevExpress.XtraReports.UI.XRPictureBox();
            this.label2 = new DevExpress.XtraReports.UI.XRLabel();
            this.label1 = new DevExpress.XtraReports.UI.XRLabel();
            this.groupHeaderBand1 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.detailBand2 = new DevExpress.XtraReports.UI.DetailBand();
            this.GroupFooter2 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.panel1 = new DevExpress.XtraReports.UI.XRPanel();
            this.line12 = new DevExpress.XtraReports.UI.XRLine();
            this.line13 = new DevExpress.XtraReports.UI.XRLine();
            this.line14 = new DevExpress.XtraReports.UI.XRLine();
            this.label5 = new DevExpress.XtraReports.UI.XRLabel();
            this.table1 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow1 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell1 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell2 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell3 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line15 = new DevExpress.XtraReports.UI.XRLine();
            this.line16 = new DevExpress.XtraReports.UI.XRLine();
            this.table2 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow2 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell4 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell5 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell6 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line6 = new DevExpress.XtraReports.UI.XRLine();
            this.line10 = new DevExpress.XtraReports.UI.XRLine();
            this.line11 = new DevExpress.XtraReports.UI.XRLine();
            this.sqlDataSource1 = new DevExpress.DataAccess.Sql.SqlDataSource();
            this.groupHeaderBand2 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.detailBand3 = new DevExpress.XtraReports.UI.DetailBand();
            this.chart6 = new DevExpress.XtraReports.UI.XRChart();
            this.chart5 = new DevExpress.XtraReports.UI.XRChart();
            this.chart4 = new DevExpress.XtraReports.UI.XRChart();
            this.chart3 = new DevExpress.XtraReports.UI.XRChart();
            this.chart2 = new DevExpress.XtraReports.UI.XRChart();
            this.label4 = new DevExpress.XtraReports.UI.XRLabel();
            this.chart1 = new DevExpress.XtraReports.UI.XRChart();
            this.groupHeaderBand3 = new DevExpress.XtraReports.UI.GroupHeaderBand();
            this.detailBand4 = new DevExpress.XtraReports.UI.DetailBand();
            this.GroupFooter1 = new DevExpress.XtraReports.UI.GroupFooterBand();
            this.panel3 = new DevExpress.XtraReports.UI.XRPanel();
            this.line9 = new DevExpress.XtraReports.UI.XRLine();
            this.line8 = new DevExpress.XtraReports.UI.XRLine();
            this.line7 = new DevExpress.XtraReports.UI.XRLine();
            this.label3 = new DevExpress.XtraReports.UI.XRLabel();
            this.table5 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow5 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell17 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell18 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell19 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell20 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell21 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line5 = new DevExpress.XtraReports.UI.XRLine();
            this.line4 = new DevExpress.XtraReports.UI.XRLine();
            this.table6 = new DevExpress.XtraReports.UI.XRTable();
            this.tableRow6 = new DevExpress.XtraReports.UI.XRTableRow();
            this.tableCell23 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell24 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell25 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell26 = new DevExpress.XtraReports.UI.XRTableCell();
            this.tableCell27 = new DevExpress.XtraReports.UI.XRTableCell();
            this.line3 = new DevExpress.XtraReports.UI.XRLine();
            this.line2 = new DevExpress.XtraReports.UI.XRLine();
            this.line1 = new DevExpress.XtraReports.UI.XRLine();
            this.Title = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailCaption3 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailData3 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailData3_Odd = new DevExpress.XtraReports.UI.XRControlStyle();
            this.DetailCaptionBackground3 = new DevExpress.XtraReports.UI.XRControlStyle();
            this.PageInfo = new DevExpress.XtraReports.UI.XRControlStyle();
            ((System.ComponentModel.ISupportInitialize)(this.table1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView4)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series7)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(series8)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).BeginInit();
            ((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
            // 
            // topMarginBand1
            // 
            this.topMarginBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.pictureBox1});
            this.topMarginBand1.HeightF = 120.3333F;
            this.topMarginBand1.Name = "topMarginBand1";
            // 
            // bottomMarginBand1
            // 
            this.bottomMarginBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line17,
                        this.pageInfo1,
                        this.pageInfo2,
                        this.label6,
                        this.pictureBox2});
            this.bottomMarginBand1.HeightF = 100F;
            this.bottomMarginBand1.Name = "bottomMarginBand1";
            // 
            // reportHeaderBand1
            // 
            this.reportHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.label2,
                        this.label1});
            this.reportHeaderBand1.HeightF = 74.03506F;
            this.reportHeaderBand1.Name = "reportHeaderBand1";
            // 
            // detailBand1
            // 
            this.detailBand1.HeightF = 13.54167F;
            this.detailBand1.Name = "detailBand1";
            // 
            // detailReportBand1
            // 
            this.detailReportBand1.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.groupHeaderBand1,
                        this.detailBand2,
                        this.GroupFooter2});
            this.detailReportBand1.DataMember = "Spark_Filtered_EventLogger";
            this.detailReportBand1.DataSource = this.sqlDataSource1;
            this.detailReportBand1.Expanded = false;
            this.detailReportBand1.Level = 1;
            this.detailReportBand1.Name = "detailReportBand1";
            // 
            // detailReportBand2
            // 
            this.detailReportBand2.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.groupHeaderBand2,
                        this.detailBand3});
            this.detailReportBand2.DataMember = "Spark_Filtered_VSRxx";
            this.detailReportBand2.DataSource = this.sqlDataSource1;
            this.detailReportBand2.Level = 2;
            this.detailReportBand2.Name = "detailReportBand2";
            // 
            // detailReportBand3
            // 
            this.detailReportBand3.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.groupHeaderBand3,
                        this.detailBand4,
                        this.GroupFooter1});
            this.detailReportBand3.DataMember = "Spark_Filtered_Treatment_VSRxx";
            this.detailReportBand3.DataSource = this.sqlDataSource1;
            this.detailReportBand3.Level = 0;
            this.detailReportBand3.Name = "detailReportBand3";
            // 
            // pictureBox1
            // 
            this.pictureBox1.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox1.Image")));
            this.pictureBox1.LocationFloat = new DevExpress.Utils.PointFloat(154.6864F, 29.46969F);
            this.pictureBox1.Name = "pictureBox1";
            this.pictureBox1.SizeF = new System.Drawing.SizeF(410.6273F, 82.49204F);
            this.pictureBox1.Sizing = DevExpress.XtraPrinting.ImageSizeMode.Squeeze;
            // 
            // line17
            // 
            this.line17.LineWidth = 2;
            this.line17.LocationFloat = new DevExpress.Utils.PointFloat(0.0001589457F, 0F);
            this.line17.Name = "line17";
            this.line17.SizeF = new System.Drawing.SizeF(719.9998F, 7.375015F);
            // 
            // pageInfo1
            // 
            this.pageInfo1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10.00001F);
            this.pageInfo1.Name = "pageInfo1";
            this.pageInfo1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo1.PageInfo = DevExpress.XtraPrinting.PageInfo.DateTime;
            this.pageInfo1.SizeF = new System.Drawing.SizeF(313F, 23F);
            this.pageInfo1.StyleName = "PageInfo";
            // 
            // pageInfo2
            // 
            this.pageInfo2.Format = "Page {0} of {1}";
            this.pageInfo2.LocationFloat = new DevExpress.Utils.PointFloat(406.9999F, 10.00001F);
            this.pageInfo2.Name = "pageInfo2";
            this.pageInfo2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.pageInfo2.SizeF = new System.Drawing.SizeF(313F, 23F);
            this.pageInfo2.StyleName = "PageInfo";
            this.pageInfo2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.TopRight;
            // 
            // label6
            // 
            this.label6.Font = new System.Drawing.Font("Tahoma", 8.25F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label6.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.label6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 32.99983F);
            this.label6.Name = "label6";
            this.label6.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label6.SizeF = new System.Drawing.SizeF(68F, 18F);
            this.label6.StylePriority.UseFont = false;
            this.label6.StylePriority.UseForeColor = false;
            this.label6.StylePriority.UseTextAlignment = false;
            this.label6.Text = "Powered by:";
            this.label6.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // pictureBox2
            // 
            this.pictureBox2.Image = ((System.Drawing.Image)(resources.GetObject("pictureBox2.Image")));
            this.pictureBox2.LocationFloat = new DevExpress.Utils.PointFloat(68F, 32.99983F);
            this.pictureBox2.Name = "pictureBox2";
            this.pictureBox2.SizeF = new System.Drawing.SizeF(80F, 18F);
            this.pictureBox2.Sizing = DevExpress.XtraPrinting.ImageSizeMode.Squeeze;
            // 
            // label2
            // 
            this.label2.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.label2.BorderColor = System.Drawing.Color.Transparent;
            this.label2.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.VSR")});
            this.label2.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label2.LocationFloat = new DevExpress.Utils.PointFloat(438.6864F, 10.00001F);
            this.label2.Name = "label2";
            this.label2.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label2.SizeF = new System.Drawing.SizeF(281.3135F, 59.33335F);
            this.label2.StylePriority.UseBackColor = false;
            this.label2.StylePriority.UseBorderColor = false;
            this.label2.StylePriority.UseFont = false;
            this.label2.StylePriority.UseForeColor = false;
            this.label2.StylePriority.UseTextAlignment = false;
            this.label2.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // label1
            // 
            this.label1.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.label1.BorderColor = System.Drawing.Color.Transparent;
            this.label1.BorderWidth = 0F;
            this.label1.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 10.00001F);
            this.label1.Name = "label1";
            this.label1.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label1.SizeF = new System.Drawing.SizeF(438.6864F, 59.33332F);
            this.label1.StyleName = "Title";
            this.label1.StylePriority.UseBackColor = false;
            this.label1.StylePriority.UseBorderColor = false;
            this.label1.StylePriority.UseBorderWidth = false;
            this.label1.StylePriority.UseFont = false;
            this.label1.StylePriority.UseForeColor = false;
            this.label1.StylePriority.UseTextAlignment = false;
            this.label1.Text = "Report of VL,";
            this.label1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleRight;
            // 
            // groupHeaderBand1
            // 
            this.groupHeaderBand1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.panel1});
            this.groupHeaderBand1.GroupUnion = DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail;
            this.groupHeaderBand1.HeightF = 129.4073F;
            this.groupHeaderBand1.Name = "groupHeaderBand1";
            // 
            // detailBand2
            // 
            this.detailBand2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line15,
                        this.line16,
                        this.table2});
            this.detailBand2.HeightF = 25F;
            this.detailBand2.Name = "detailBand2";
            // 
            // GroupFooter2
            // 
            this.GroupFooter2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line6,
                        this.line10,
                        this.line11});
            this.GroupFooter2.HeightF = 12F;
            this.GroupFooter2.Name = "GroupFooter2";
            // 
            // panel1
            // 
            this.panel1.BorderWidth = 0F;
            this.panel1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line12,
                        this.line13,
                        this.line14,
                        this.label5,
                        this.table1});
            this.panel1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.panel1.Name = "panel1";
            this.panel1.SizeF = new System.Drawing.SizeF(719.9999F, 129.4073F);
            this.panel1.StyleName = "DetailCaptionBackground3";
            this.panel1.StylePriority.UseBorderWidth = false;
            // 
            // line12
            // 
            this.line12.BorderWidth = 0F;
            this.line12.ForeColor = System.Drawing.Color.Red;
            this.line12.LineWidth = 2;
            this.line12.LocationFloat = new DevExpress.Utils.PointFloat(0F, 99.8959F);
            this.line12.Name = "line12";
            this.line12.SizeF = new System.Drawing.SizeF(720F, 2.125916F);
            this.line12.StylePriority.UseBorderWidth = false;
            this.line12.StylePriority.UseForeColor = false;
            // 
            // line13
            // 
            this.line13.ForeColor = System.Drawing.Color.Red;
            this.line13.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line13.LineWidth = 2;
            this.line13.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 102.0218F);
            this.line13.Name = "line13";
            this.line13.SizeF = new System.Drawing.SizeF(2.125854F, 28.00001F);
            this.line13.StylePriority.UseForeColor = false;
            // 
            // line14
            // 
            this.line14.ForeColor = System.Drawing.Color.Red;
            this.line14.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line14.LineWidth = 2;
            this.line14.LocationFloat = new DevExpress.Utils.PointFloat(0F, 102.0217F);
            this.line14.Name = "line14";
            this.line14.SizeF = new System.Drawing.SizeF(2.125854F, 28.00005F);
            this.line14.StylePriority.UseForeColor = false;
            // 
            // label5
            // 
            this.label5.BackColor = System.Drawing.Color.Red;
            this.label5.BorderColor = System.Drawing.Color.Transparent;
            this.label5.BorderWidth = 0F;
            this.label5.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label5.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 38.56259F);
            this.label5.Name = "label5";
            this.label5.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label5.SizeF = new System.Drawing.SizeF(217.3927F, 59.33333F);
            this.label5.StyleName = "Title";
            this.label5.StylePriority.UseBackColor = false;
            this.label5.StylePriority.UseBorderColor = false;
            this.label5.StylePriority.UseBorderWidth = false;
            this.label5.StylePriority.UseFont = false;
            this.label5.StylePriority.UseForeColor = false;
            this.label5.StylePriority.UseTextAlignment = false;
            this.label5.Text = "Alarms";
            this.label5.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // table1
            // 
            this.table1.LocationFloat = new DevExpress.Utils.PointFloat(2.125852F, 102.0218F);
            this.table1.Name = "table1";
            this.table1.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow1});
            this.table1.SizeF = new System.Drawing.SizeF(715.7483F, 27.99999F);
            // 
            // tableRow1
            // 
            this.tableRow1.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell1,
                        this.tableCell2,
                        this.tableCell3});
            this.tableRow1.Name = "tableRow1";
            this.tableRow1.Weight = 1D;
            // 
            // tableCell1
            // 
            this.tableCell1.BackColor = System.Drawing.Color.Red;
            this.tableCell1.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell1.Name = "tableCell1";
            this.tableCell1.StyleName = "DetailCaption3";
            this.tableCell1.StylePriority.UseBackColor = false;
            this.tableCell1.StylePriority.UseFont = false;
            this.tableCell1.StylePriority.UseForeColor = false;
            this.tableCell1.StylePriority.UseTextAlignment = false;
            this.tableCell1.Text = "OID";
            this.tableCell1.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell1.Weight = 0.10628080929377688D;
            // 
            // tableCell2
            // 
            this.tableCell2.BackColor = System.Drawing.Color.Red;
            this.tableCell2.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell2.Name = "tableCell2";
            this.tableCell2.StyleName = "DetailCaption3";
            this.tableCell2.StylePriority.UseBackColor = false;
            this.tableCell2.StylePriority.UseFont = false;
            this.tableCell2.StylePriority.UseForeColor = false;
            this.tableCell2.Text = "Alarm Date Time";
            this.tableCell2.Weight = 0.20435723779149748D;
            // 
            // tableCell3
            // 
            this.tableCell3.BackColor = System.Drawing.Color.Red;
            this.tableCell3.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell3.Name = "tableCell3";
            this.tableCell3.StyleName = "DetailCaption3";
            this.tableCell3.StylePriority.UseBackColor = false;
            this.tableCell3.StylePriority.UseFont = false;
            this.tableCell3.StylePriority.UseForeColor = false;
            this.tableCell3.Text = "Alarm Message";
            this.tableCell3.Weight = 0.67090044901166013D;
            // 
            // line15
            // 
            this.line15.ForeColor = System.Drawing.Color.Red;
            this.line15.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line15.LineWidth = 2;
            this.line15.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 0F);
            this.line15.Name = "line15";
            this.line15.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line15.StylePriority.UseForeColor = false;
            // 
            // line16
            // 
            this.line16.BorderColor = System.Drawing.Color.Red;
            this.line16.ForeColor = System.Drawing.Color.Red;
            this.line16.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line16.LineWidth = 2;
            this.line16.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line16.Name = "line16";
            this.line16.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line16.StylePriority.UseBorderColor = false;
            this.line16.StylePriority.UseForeColor = false;
            // 
            // table2
            // 
            this.table2.LocationFloat = new DevExpress.Utils.PointFloat(2.125899F, 0F);
            this.table2.Name = "table2";
            this.table2.OddStyleName = "DetailData3_Odd";
            this.table2.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow2});
            this.table2.SizeF = new System.Drawing.SizeF(715.7481F, 25F);
            // 
            // tableRow2
            // 
            this.tableRow2.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell4,
                        this.tableCell5,
                        this.tableCell6});
            this.tableRow2.Name = "tableRow2";
            this.tableRow2.Weight = 11.5D;
            // 
            // tableCell4
            // 
            this.tableCell4.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_EventLogger.OID")});
            this.tableCell4.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell4.Name = "tableCell4";
            this.tableCell4.StyleName = "DetailData3";
            this.tableCell4.StylePriority.UseFont = false;
            this.tableCell4.StylePriority.UseTextAlignment = false;
            this.tableCell4.Text = "tableCell4";
            this.tableCell4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            this.tableCell4.Weight = 0.1062807506061248D;
            // 
            // tableCell5
            // 
            this.tableCell5.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_EventLogger.EventDateTime")});
            this.tableCell5.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell5.Name = "tableCell5";
            this.tableCell5.StyleName = "DetailData3";
            this.tableCell5.StylePriority.UseFont = false;
            this.tableCell5.Text = "tableCell5";
            this.tableCell5.Weight = 0.20435729647914985D;
            // 
            // tableCell6
            // 
            this.tableCell6.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_EventLogger.EventMessage")});
            this.tableCell6.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Regular, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell6.Name = "tableCell6";
            this.tableCell6.StyleName = "DetailData3";
            this.tableCell6.StylePriority.UseFont = false;
            this.tableCell6.Text = "tableCell6";
            this.tableCell6.Weight = 0.67090063681214285D;
            // 
            // line6
            // 
            this.line6.BorderWidth = 0F;
            this.line6.ForeColor = System.Drawing.Color.Red;
            this.line6.LineWidth = 2;
            this.line6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 9.99999F);
            this.line6.Name = "line6";
            this.line6.SizeF = new System.Drawing.SizeF(719.9999F, 2F);
            this.line6.StylePriority.UseBorderWidth = false;
            this.line6.StylePriority.UseForeColor = false;
            // 
            // line10
            // 
            this.line10.ForeColor = System.Drawing.Color.Red;
            this.line10.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line10.LineWidth = 2;
            this.line10.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line10.Name = "line10";
            this.line10.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line10.StylePriority.UseForeColor = false;
            // 
            // line11
            // 
            this.line11.ForeColor = System.Drawing.Color.Red;
            this.line11.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line11.LineWidth = 2;
            this.line11.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 0F);
            this.line11.Name = "line11";
            this.line11.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line11.StylePriority.UseForeColor = false;
            // 
            // sqlDataSource1
            // 
            this.sqlDataSource1.ConnectionName = "localhost_ScadaAC_Connection";
            msSqlConnectionParameters1.AuthorizationType = DevExpress.DataAccess.ConnectionParameters.MsSqlAuthorizationType.SqlServer;
            msSqlConnectionParameters1.DatabaseName = "ScadaAC";
            msSqlConnectionParameters1.Password = "WkIlE!A2njfa";
            msSqlConnectionParameters1.ServerName = "AMR-DBVM16";
            msSqlConnectionParameters1.UserName = "scada";
            this.sqlDataSource1.ConnectionParameters = msSqlConnectionParameters1;
            this.sqlDataSource1.Name = "sqlDataSource1";
            customSqlQuery1.Name = "Spark_Filtered_EventLogger";
            customSqlQuery1.Sql = resources.GetString("customSqlQuery1.Sql");
            customSqlQuery2.Name = "Spark_Filtered_VSRxx";
            customSqlQuery2.Sql = resources.GetString("customSqlQuery2.Sql");
            customSqlQuery3.Name = "Spark_Filtered_Treatment_VSRxx";
            customSqlQuery3.Sql = resources.GetString("customSqlQuery3.Sql");
            this.sqlDataSource1.Queries.AddRange(new DevExpress.DataAccess.Sql.SqlQuery[] {
                        customSqlQuery1,
                        customSqlQuery2,
                        customSqlQuery3});
            this.sqlDataSource1.ResultSchemaSerializable = resources.GetString("sqlDataSource1.ResultSchemaSerializable");
            // 
            // groupHeaderBand2
            // 
            this.groupHeaderBand2.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.chart6,
                        this.chart5,
                        this.chart4,
                        this.chart3,
                        this.chart2,
                        this.label4,
                        this.chart1});
            this.groupHeaderBand2.GroupUnion = DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail;
            this.groupHeaderBand2.HeightF = 2609.478F;
            this.groupHeaderBand2.Name = "groupHeaderBand2";
            this.groupHeaderBand2.PageBreak = DevExpress.XtraReports.UI.PageBreak.BeforeBand;
            // 
            // detailBand3
            // 
            this.detailBand3.HeightF = 25F;
            this.detailBand3.Name = "detailBand3";
            // 
            // chart6
            // 
            this.chart6.BorderColor = System.Drawing.Color.Black;
            this.chart6.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram1.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram1.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram1.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram1.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram1.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram1.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram1.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram1.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart6.Diagram = xYDiagram1;
            this.chart6.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart6.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart6.Legend.Name = "Default Legend";
            this.chart6.LocationFloat = new DevExpress.Utils.PointFloat(0F, 2219.478F);
            this.chart6.Name = "chart6";
            this.chart6.PaletteName = "Civic";
            series1.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series1.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series1.Name = "Corck Temperatue";
            series1.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Corck_Temp_VSR";
            stackedLineSeriesView1.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series1.View = stackedLineSeriesView1;
            series2.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series2.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series2.Name = "Chamber Termprature";
            series2.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Champ_Temp_VSR";
            lineSeriesView1.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series2.View = lineSeriesView1;
            this.chart6.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series1,
                    series2};
            this.chart6.SizeF = new System.Drawing.SizeF(719.9999F, 380F);
            // 
            // chart5
            // 
            this.chart5.BorderColor = System.Drawing.Color.Black;
            this.chart5.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram2.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram2.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram2.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram2.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram2.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram2.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram2.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram2.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart5.Diagram = xYDiagram2;
            this.chart5.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart5.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart5.Legend.Name = "Default Legend";
            this.chart5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 1813.227F);
            this.chart5.Name = "chart5";
            series3.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series3.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series3.Name = "Chamber Pressure";
            series3.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Chamb_Press_VSR";
            stackedLineSeriesView2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(172)))), ((int)(((byte)(198)))));
            stackedLineSeriesView2.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series3.View = stackedLineSeriesView2;
            series4.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series4.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series4.Name = "Pump Pressure";
            series4.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Pump_Press_VSR";
            lineSeriesView2.Color = System.Drawing.Color.FromArgb(((int)(((byte)(31)))), ((int)(((byte)(73)))), ((int)(((byte)(125)))));
            lineSeriesView2.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series4.View = lineSeriesView2;
            this.chart5.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series3,
                    series4};
            this.chart5.SizeF = new System.Drawing.SizeF(720F, 380F);
            // 
            // chart4
            // 
            this.chart4.BorderColor = System.Drawing.Color.Black;
            this.chart4.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram3.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram3.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram3.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram3.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram3.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram3.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram3.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram3.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart4.Diagram = xYDiagram3;
            this.chart4.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart4.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart4.Legend.Name = "Default Legend";
            this.chart4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 492.5833F);
            this.chart4.Name = "chart4";
            series5.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series5.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series5.Name = "Pump Pressure";
            series5.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Pump_Press_VSR";
            stackedLineSeriesView3.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series5.View = stackedLineSeriesView3;
            this.chart4.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series5};
            this.chart4.SizeF = new System.Drawing.SizeF(719.9999F, 379.9999F);
            // 
            // chart3
            // 
            this.chart3.BorderColor = System.Drawing.Color.Black;
            this.chart3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram4.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram4.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram4.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram4.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram4.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram4.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram4.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram4.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart3.Diagram = xYDiagram4;
            this.chart3.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart3.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart3.Legend.Name = "Default Legend";
            this.chart3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 1347F);
            this.chart3.Name = "chart3";
            this.chart3.PaletteName = "Civic";
            series6.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series6.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series6.Name = "Corck Temperatue";
            series6.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Corck_Temp_VSR";
            stackedLineSeriesView4.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series6.View = stackedLineSeriesView4;
            this.chart3.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series6};
            this.chart3.SizeF = new System.Drawing.SizeF(719.9999F, 380F);
            // 
            // chart2
            // 
            this.chart2.BorderColor = System.Drawing.Color.Black;
            this.chart2.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram5.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram5.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram5.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram5.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram5.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram5.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram5.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram5.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart2.Diagram = xYDiagram5;
            this.chart2.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart2.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart2.Legend.Name = "Default Legend";
            this.chart2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 944.0833F);
            this.chart2.Name = "chart2";
            this.chart2.PaletteName = "Civic";
            series7.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series7.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series7.Name = "Chamber Temperatue";
            series7.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Champ_Temp_VSR";
            stackedLineSeriesView5.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series7.View = stackedLineSeriesView5;
            this.chart2.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series7};
            this.chart2.SizeF = new System.Drawing.SizeF(720F, 380F);
            // 
            // label4
            // 
            this.label4.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(0)))), ((int)(((byte)(192)))));
            this.label4.BorderColor = System.Drawing.Color.Transparent;
            this.label4.BorderWidth = 0F;
            this.label4.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label4.LocationFloat = new DevExpress.Utils.PointFloat(0F, 36.66667F);
            this.label4.Name = "label4";
            this.label4.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label4.SizeF = new System.Drawing.SizeF(217.3927F, 59.33333F);
            this.label4.StyleName = "Title";
            this.label4.StylePriority.UseBackColor = false;
            this.label4.StylePriority.UseBorderColor = false;
            this.label4.StylePriority.UseBorderWidth = false;
            this.label4.StylePriority.UseFont = false;
            this.label4.StylePriority.UseForeColor = false;
            this.label4.StylePriority.UseTextAlignment = false;
            this.label4.Text = "Figures";
            this.label4.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // chart1
            // 
            this.chart1.BorderColor = System.Drawing.Color.Black;
            this.chart1.Borders = DevExpress.XtraPrinting.BorderSide.None;
            xYDiagram6.AxisX.DateTimeScaleOptions.AggregateFunction = DevExpress.XtraCharts.AggregateFunction.None;
            xYDiagram6.AxisX.DateTimeScaleOptions.ScaleMode = DevExpress.XtraCharts.ScaleMode.Automatic;
            xYDiagram6.AxisX.VisibleInPanesSerializable = "-1";
            xYDiagram6.AxisY.VisibleInPanesSerializable = "-1";
            xYDiagram6.DefaultPane.EnableAxisXScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram6.DefaultPane.EnableAxisXZooming = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram6.DefaultPane.EnableAxisYScrolling = DevExpress.Utils.DefaultBoolean.False;
            xYDiagram6.DefaultPane.EnableAxisYZooming = DevExpress.Utils.DefaultBoolean.False;
            this.chart1.Diagram = xYDiagram6;
            this.chart1.Legend.AlignmentHorizontal = DevExpress.XtraCharts.LegendAlignmentHorizontal.Center;
            this.chart1.Legend.AlignmentVertical = DevExpress.XtraCharts.LegendAlignmentVertical.TopOutside;
            this.chart1.Legend.Name = "Default Legend";
            this.chart1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 98F);
            this.chart1.Name = "chart1";
            series8.ArgumentDataMember = "Spark_Filtered_VSRxx.LocalTimeCol";
            series8.LabelsVisibility = DevExpress.Utils.DefaultBoolean.False;
            series8.Name = "Chamber Pressure";
            series8.ValueDataMembersSerializable = "Spark_Filtered_VSRxx.Chamb_Press_VSR";
            stackedLineSeriesView6.MarkerVisibility = DevExpress.Utils.DefaultBoolean.False;
            series8.View = stackedLineSeriesView6;
            this.chart1.SeriesSerializable = new DevExpress.XtraCharts.Series[] {
                    series8};
            this.chart1.SizeF = new System.Drawing.SizeF(720F, 380F);
            // 
            // groupHeaderBand3
            // 
            this.groupHeaderBand3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.panel3});
            this.groupHeaderBand3.Expanded = false;
            this.groupHeaderBand3.GroupUnion = DevExpress.XtraReports.UI.GroupUnion.WithFirstDetail;
            this.groupHeaderBand3.HeightF = 127.1667F;
            this.groupHeaderBand3.Name = "groupHeaderBand3";
            // 
            // detailBand4
            // 
            this.detailBand4.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line5,
                        this.line4,
                        this.table6});
            this.detailBand4.HeightF = 25F;
            this.detailBand4.Name = "detailBand4";
            // 
            // GroupFooter1
            // 
            this.GroupFooter1.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line3,
                        this.line2,
                        this.line1});
            this.GroupFooter1.HeightF = 12.16399F;
            this.GroupFooter1.Name = "GroupFooter1";
            // 
            // panel3
            // 
            this.panel3.BorderWidth = 0F;
            this.panel3.Controls.AddRange(new DevExpress.XtraReports.UI.XRControl[] {
                        this.line9,
                        this.line8,
                        this.line7,
                        this.label3,
                        this.table5});
            this.panel3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.panel3.Name = "panel3";
            this.panel3.SizeF = new System.Drawing.SizeF(719.9999F, 127.1667F);
            this.panel3.StyleName = "DetailCaptionBackground3";
            this.panel3.StylePriority.UseBorderWidth = false;
            // 
            // line9
            // 
            this.line9.BorderWidth = 0F;
            this.line9.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line9.LineWidth = 2;
            this.line9.LocationFloat = new DevExpress.Utils.PointFloat(0F, 97.04079F);
            this.line9.Name = "line9";
            this.line9.SizeF = new System.Drawing.SizeF(720F, 2.125916F);
            this.line9.StylePriority.UseBorderWidth = false;
            this.line9.StylePriority.UseForeColor = false;
            // 
            // line8
            // 
            this.line8.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line8.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line8.LineWidth = 2;
            this.line8.LocationFloat = new DevExpress.Utils.PointFloat(717.874F, 99.16676F);
            this.line8.Name = "line8";
            this.line8.SizeF = new System.Drawing.SizeF(2.125854F, 28.00001F);
            this.line8.StylePriority.UseForeColor = false;
            // 
            // line7
            // 
            this.line7.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line7.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line7.LineWidth = 2;
            this.line7.LocationFloat = new DevExpress.Utils.PointFloat(0F, 99.16671F);
            this.line7.Name = "line7";
            this.line7.SizeF = new System.Drawing.SizeF(2.125854F, 28.00005F);
            this.line7.StylePriority.UseForeColor = false;
            // 
            // label3
            // 
            this.label3.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.label3.BorderColor = System.Drawing.Color.Transparent;
            this.label3.BorderWidth = 0F;
            this.label3.Font = new System.Drawing.Font("Tahoma", 20.25F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.label3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.label3.LocationFloat = new DevExpress.Utils.PointFloat(0F, 35.70745F);
            this.label3.Name = "label3";
            this.label3.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            this.label3.SizeF = new System.Drawing.SizeF(217.3927F, 59.33333F);
            this.label3.StyleName = "Title";
            this.label3.StylePriority.UseBackColor = false;
            this.label3.StylePriority.UseBorderColor = false;
            this.label3.StylePriority.UseBorderWidth = false;
            this.label3.StylePriority.UseFont = false;
            this.label3.StylePriority.UseForeColor = false;
            this.label3.StylePriority.UseTextAlignment = false;
            this.label3.Text = "Treatment";
            this.label3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleCenter;
            // 
            // table5
            // 
            this.table5.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.table5.LocationFloat = new DevExpress.Utils.PointFloat(2.125875F, 99.16676F);
            this.table5.Name = "table5";
            this.table5.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow5});
            this.table5.SizeF = new System.Drawing.SizeF(715.7483F, 28F);
            this.table5.StylePriority.UseForeColor = false;
            // 
            // tableRow5
            // 
            this.tableRow5.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell17,
                        this.tableCell18,
                        this.tableCell19,
                        this.tableCell20,
                        this.tableCell21});
            this.tableRow5.Name = "tableRow5";
            this.tableRow5.Weight = 1D;
            // 
            // tableCell17
            // 
            this.tableCell17.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell17.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell17.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell17.Name = "tableCell17";
            this.tableCell17.StyleName = "DetailCaption3";
            this.tableCell17.StylePriority.UseBackColor = false;
            this.tableCell17.StylePriority.UseFont = false;
            this.tableCell17.StylePriority.UseForeColor = false;
            this.tableCell17.Text = "VSR";
            this.tableCell17.Weight = 0.081320895632257417D;
            // 
            // tableCell18
            // 
            this.tableCell18.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell18.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell18.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell18.Name = "tableCell18";
            this.tableCell18.StyleName = "DetailCaption3";
            this.tableCell18.StylePriority.UseBackColor = false;
            this.tableCell18.StylePriority.UseFont = false;
            this.tableCell18.StylePriority.UseForeColor = false;
            this.tableCell18.Text = "Treatment Start";
            this.tableCell18.Weight = 0.17929293118990386D;
            // 
            // tableCell19
            // 
            this.tableCell19.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell19.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell19.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell19.Name = "tableCell19";
            this.tableCell19.StyleName = "DetailCaption3";
            this.tableCell19.StylePriority.UseBackColor = false;
            this.tableCell19.StylePriority.UseFont = false;
            this.tableCell19.StylePriority.UseForeColor = false;
            this.tableCell19.Text = "Treatment End";
            this.tableCell19.Weight = 0.17676768376277044D;
            // 
            // tableCell20
            // 
            this.tableCell20.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell20.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell20.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell20.Name = "tableCell20";
            this.tableCell20.StyleName = "DetailCaption3";
            this.tableCell20.StylePriority.UseBackColor = false;
            this.tableCell20.StylePriority.UseFont = false;
            this.tableCell20.StylePriority.UseForeColor = false;
            this.tableCell20.Text = "Unload Start";
            this.tableCell20.Weight = 0.1616161639873798D;
            // 
            // tableCell21
            // 
            this.tableCell21.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.tableCell21.Font = new System.Drawing.Font("Tahoma", 9F, System.Drawing.FontStyle.Bold, System.Drawing.GraphicsUnit.Point, ((byte)(0)));
            this.tableCell21.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(255)))), ((int)(((byte)(255)))), ((int)(((byte)(255)))));
            this.tableCell21.Name = "tableCell21";
            this.tableCell21.StyleName = "DetailCaption3";
            this.tableCell21.StylePriority.UseBackColor = false;
            this.tableCell21.StylePriority.UseFont = false;
            this.tableCell21.StylePriority.UseForeColor = false;
            this.tableCell21.Text = "Unload End";
            this.tableCell21.Weight = 0.15202794345182535D;
            // 
            // line5
            // 
            this.line5.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line5.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line5.LineWidth = 2;
            this.line5.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line5.Name = "line5";
            this.line5.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line5.StylePriority.UseForeColor = false;
            // 
            // line4
            // 
            this.line4.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line4.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line4.LineWidth = 2;
            this.line4.LocationFloat = new DevExpress.Utils.PointFloat(717.8741F, 0F);
            this.line4.Name = "line4";
            this.line4.SizeF = new System.Drawing.SizeF(2.125854F, 25F);
            this.line4.StylePriority.UseForeColor = false;
            // 
            // table6
            // 
            this.table6.LocationFloat = new DevExpress.Utils.PointFloat(2.125875F, 0F);
            this.table6.Name = "table6";
            this.table6.OddStyleName = "DetailData3_Odd";
            this.table6.Rows.AddRange(new DevExpress.XtraReports.UI.XRTableRow[] {
                        this.tableRow6});
            this.table6.SizeF = new System.Drawing.SizeF(715.7483F, 25F);
            // 
            // tableRow6
            // 
            this.tableRow6.Cells.AddRange(new DevExpress.XtraReports.UI.XRTableCell[] {
                        this.tableCell23,
                        this.tableCell24,
                        this.tableCell25,
                        this.tableCell26,
                        this.tableCell27});
            this.tableRow6.Name = "tableRow6";
            this.tableRow6.Weight = 11.5D;
            // 
            // tableCell23
            // 
            this.tableCell23.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.VSR")});
            this.tableCell23.Name = "tableCell23";
            this.tableCell23.StyleName = "DetailData3";
            this.tableCell23.Text = "tableCell23";
            this.tableCell23.Weight = 0.081320895632257417D;
            // 
            // tableCell24
            // 
            this.tableCell24.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.Start Date")});
            this.tableCell24.Name = "tableCell24";
            this.tableCell24.StyleName = "DetailData3";
            this.tableCell24.Weight = 0.17929293118990386D;
            // 
            // tableCell25
            // 
            this.tableCell25.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.Start Time")});
            this.tableCell25.Name = "tableCell25";
            this.tableCell25.StyleName = "DetailData3";
            this.tableCell25.Weight = 0.17676768376277044D;
            // 
            // tableCell26
            // 
            this.tableCell26.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.End Date")});
            this.tableCell26.Name = "tableCell26";
            this.tableCell26.StyleName = "DetailData3";
            this.tableCell26.Weight = 0.1616161639873798D;
            // 
            // tableCell27
            // 
            this.tableCell27.DataBindings.AddRange(new DevExpress.XtraReports.UI.XRBinding[] {
                        new DevExpress.XtraReports.UI.XRBinding("Text", null, "Spark_Filtered_Treatment_VSRxx.End Time")});
            this.tableCell27.Name = "tableCell27";
            this.tableCell27.StyleName = "DetailData3";
            this.tableCell27.Weight = 0.15202812298793433D;
            // 
            // line3
            // 
            this.line3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line3.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line3.LineWidth = 2;
            this.line3.LocationFloat = new DevExpress.Utils.PointFloat(717.874F, 0F);
            this.line3.Name = "line3";
            this.line3.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line3.StylePriority.UseForeColor = false;
            // 
            // line2
            // 
            this.line2.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line2.LineDirection = DevExpress.XtraReports.UI.LineDirection.Vertical;
            this.line2.LineWidth = 2;
            this.line2.LocationFloat = new DevExpress.Utils.PointFloat(0F, 0F);
            this.line2.Name = "line2";
            this.line2.SizeF = new System.Drawing.SizeF(2.12585F, 10F);
            this.line2.StylePriority.UseForeColor = false;
            // 
            // line1
            // 
            this.line1.BorderWidth = 0F;
            this.line1.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(0)))), ((int)(((byte)(128)))), ((int)(((byte)(0)))));
            this.line1.LineWidth = 2;
            this.line1.LocationFloat = new DevExpress.Utils.PointFloat(0F, 9.999997F);
            this.line1.Name = "line1";
            this.line1.SizeF = new System.Drawing.SizeF(719.9999F, 2F);
            this.line1.StylePriority.UseBorderWidth = false;
            this.line1.StylePriority.UseForeColor = false;
            // 
            // Title
            // 
            this.Title.BackColor = System.Drawing.Color.Transparent;
            this.Title.BorderColor = System.Drawing.Color.Black;
            this.Title.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.Title.BorderWidth = 1F;
            this.Title.Font = new System.Drawing.Font("Tahoma", 14F);
            this.Title.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.Title.Name = "Title";
            // 
            // DetailCaption3
            // 
            this.DetailCaption3.BackColor = System.Drawing.Color.Transparent;
            this.DetailCaption3.BorderColor = System.Drawing.Color.Transparent;
            this.DetailCaption3.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DetailCaption3.Font = new System.Drawing.Font("Tahoma", 8F, System.Drawing.FontStyle.Bold);
            this.DetailCaption3.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.DetailCaption3.Name = "DetailCaption3";
            this.DetailCaption3.Padding = new DevExpress.XtraPrinting.PaddingInfo(6, 6, 0, 0, 100F);
            this.DetailCaption3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // DetailData3
            // 
            this.DetailData3.Font = new System.Drawing.Font("Tahoma", 8F);
            this.DetailData3.ForeColor = System.Drawing.Color.Black;
            this.DetailData3.Name = "DetailData3";
            this.DetailData3.Padding = new DevExpress.XtraPrinting.PaddingInfo(6, 6, 0, 0, 100F);
            this.DetailData3.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // DetailData3_Odd
            // 
            this.DetailData3_Odd.BackColor = System.Drawing.Color.FromArgb(((int)(((byte)(231)))), ((int)(((byte)(231)))), ((int)(((byte)(231)))));
            this.DetailData3_Odd.BorderColor = System.Drawing.Color.Transparent;
            this.DetailData3_Odd.Borders = DevExpress.XtraPrinting.BorderSide.None;
            this.DetailData3_Odd.BorderWidth = 1F;
            this.DetailData3_Odd.Font = new System.Drawing.Font("Tahoma", 8F);
            this.DetailData3_Odd.ForeColor = System.Drawing.Color.Black;
            this.DetailData3_Odd.Name = "DetailData3_Odd";
            this.DetailData3_Odd.Padding = new DevExpress.XtraPrinting.PaddingInfo(6, 6, 0, 0, 100F);
            this.DetailData3_Odd.TextAlignment = DevExpress.XtraPrinting.TextAlignment.MiddleLeft;
            // 
            // DetailCaptionBackground3
            // 
            this.DetailCaptionBackground3.BackColor = System.Drawing.Color.Transparent;
            this.DetailCaptionBackground3.BorderColor = System.Drawing.Color.FromArgb(((int)(((byte)(206)))), ((int)(((byte)(206)))), ((int)(((byte)(206)))));
            this.DetailCaptionBackground3.Borders = DevExpress.XtraPrinting.BorderSide.Top;
            this.DetailCaptionBackground3.BorderWidth = 2F;
            this.DetailCaptionBackground3.Name = "DetailCaptionBackground3";
            // 
            // PageInfo
            // 
            this.PageInfo.Font = new System.Drawing.Font("Tahoma", 8F, System.Drawing.FontStyle.Bold);
            this.PageInfo.ForeColor = System.Drawing.Color.FromArgb(((int)(((byte)(75)))), ((int)(((byte)(75)))), ((int)(((byte)(75)))));
            this.PageInfo.Name = "PageInfo";
            this.PageInfo.Padding = new DevExpress.XtraPrinting.PaddingInfo(2, 2, 0, 0, 100F);
            // 
            // XtraReport
            // 
            this.Bands.AddRange(new DevExpress.XtraReports.UI.Band[] {
                        this.topMarginBand1,
                        this.bottomMarginBand1,
                        this.reportHeaderBand1,
                        this.detailBand1,
                        this.detailReportBand1,
                        this.detailReportBand2,
                        this.detailReportBand3});
            this.ComponentStorage.AddRange(new System.ComponentModel.IComponent[] {
                        this.sqlDataSource1});
            this.DataSource = this.sqlDataSource1;
            this.Margins = new System.Drawing.Printing.Margins(65, 65, 120, 100);
            this.Name = "XtraReport";
            this.PageHeight = 1100;
            this.PageWidth = 850;
            this.StyleSheet.AddRange(new DevExpress.XtraReports.UI.XRControlStyle[] {
                        this.Title,
                        this.DetailCaption3,
                        this.DetailData3,
                        this.DetailData3_Odd,
                        this.DetailCaptionBackground3,
                        this.PageInfo});
            this.Version = "17.1";
            ((System.ComponentModel.ISupportInitialize)(this.table1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(lineSeriesView2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView4)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart3)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series7)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart2)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(xYDiagram6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(stackedLineSeriesView6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(series8)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.chart1)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table5)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this.table6)).EndInit();
            ((System.ComponentModel.ISupportInitialize)(this)).EndInit();
        }
    }
}
</_ReportData>
  <height>0</height>
  <id>00000000-0000-0000-0000-000000000000</id>
  <left>0</left>
  <readerItemSources xmlns:d2p1="http://schemas.datacontract.org/2004/07/DataReader">
    <d2p1:Connection i:nil="true" />
    <d2p1:DataColumn i:nil="true" />
    <d2p1:DataProvider i:nil="true" />
    <d2p1:DataProviderDescription i:nil="true" />
    <d2p1:DataProviderDisplayName i:nil="true" />
    <d2p1:DataProviderShortDisplayName i:nil="true" />
    <d2p1:DataSourceDisplayName i:nil="true" />
    <d2p1:DataSourceName i:nil="true" />
    <d2p1:GroupBy i:nil="true" />
    <d2p1:MaxTake>10</d2p1:MaxTake>
    <d2p1:Select i:nil="true" />
    <d2p1:Sort i:nil="true" />
    <d2p1:TableName i:nil="true" />
    <d2p1:TimeColumn i:nil="true" />
    <d2p1:Where i:nil="true" />
    <d2p1:xmlItems i:nil="true" />
    <d2p1:xmlUri i:nil="true" />
  </readerItemSources>
  <resizeMode>CanResize</resizeMode>
  <showInTaskbar>true</showInTaskbar>
  <top>0</top>
  <width>0</width>
  <windowStartupLocation>CenterScreen</windowStartupLocation>
  <windowState>Maximized</windowState>
  <windowStyle>ThreeDBorderWindow</windowStyle>
</ReportDocument>