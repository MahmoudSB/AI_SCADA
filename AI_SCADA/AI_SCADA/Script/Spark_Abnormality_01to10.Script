<?xml version="1.0" encoding="utf-8"?>
<ScriptDocument xmlns:i="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://progea.com">
  <bEnableLog>false</bEnableLog>
  <bEnableSysLog>false</bEnableSysLog>
  <breakpoints xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
  <currentStatusTag i:nil="true" />
  <cycleTimeTag i:nil="true" />
  <disableWhenNotUsed>true</disableWhenNotUsed>
  <fastSamplingInterval>500</fastSamplingInterval>
  <forceWritingOnServer>false</forceWritingOnServer>
  <id>00000000-0000-0000-0000-000000000000</id>
  <listVariableUsed xmlns:d2p1="http://schemas.microsoft.com/2003/10/Serialization/Arrays">
    <d2p1:string>SPARK_VSR01_SCADA_MaxTemperatureTimer</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_unloadingTimer</d2p1:string>
    <d2p1:string>SPARK_VSR01_Status</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_CorkTemp_Max_Time</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_Discharge_Max_Time</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_CorkTemp_Alarm</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_CorkTemp_Max</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_LongDischargeIsAbnormality</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_AlarmTempIsAbnormality</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_LongMaxTempIsAbnormality</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_EmailLongDischarge</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_EmailAlarmTempAbnormality</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_EmailLongMaxTempAbnormality</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_latch1</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_latch2</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_latch3</d2p1:string>
    <d2p1:string>General_Spark_VSR01_PLCStateVariable</d2p1:string>
    <d2p1:string>SPARK_VSR01_PLC_KTP_Temperat_PV_Rolhas</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_abnormalTreatment</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_sendEmailOfAbnormality</d2p1:string>
    <d2p1:string>SPARK_VSR01_SCADA_abnormalityLog</d2p1:string>
  </listVariableUsed>
  <maxCleanCount>2</maxCleanCount>
  <nSelLength>0</nSelLength>
  <nSleepTime>50</nSleepTime>
  <nStartSel>3904</nStartSel>
  <publishingInterval>1000</publishingInterval>
  <removeDisabledItemAfterSecs>30</removeDisabledItemAfterSecs>
  <sCode>'#Language "WWB.NET"

Public Class MachineParameters
    Public machineStatus As Integer
    Public corkTemp_Max_Time As Integer
    Public discharge_Max_Time As Integer
    Public corkTemp_Alarm As Decimal
    Public corkTemp_Max As Decimal
    Public pvCorkTemperature As Decimal
    Public longUnloadIsAbnormality As Boolean
    Public alarmTempIsAbnormality As Boolean
    Public longMaxTempIsAbnormality As Boolean
    Public emailLongUnload As Boolean
    Public emailAlarmTemp As Boolean
    Public emailLongMaxTemp As Boolean
End Class

Public Class Timers
    Public MaxTemperature As Integer
    Public unloading As Integer
End Class

Public Class Commands
    Public bit_abnormalTreatment As Boolean
    Public bit_sendEmail As Boolean
    Public logger As String
End Class

Public Class latches
    Public a As Boolean
    Public b As Boolean
    Public c As Boolean
End Class

Sub Main Handles .Main

    Dim Param = New MachineParameters()
    Dim T_min = New Timers()
    Dim latchSet = New latches()
    Dim results = New Commands()

'VSR01
    T_min.MaxTemperature = SPARK_VSR01_SCADA_MaxTemperatureTimer
    T_min.unloading = SPARK_VSR01_SCADA_unloadingTimer
    Param.machineStatus = SPARK_VSR01_Status
    Param.corkTemp_Max_Time = SPARK_VSR01_SCADA_CorkTemp_Max_Time
    Param.discharge_Max_Time = SPARK_VSR01_SCADA_Discharge_Max_Time
    Param.corkTemp_Alarm = SPARK_VSR01_SCADA_CorkTemp_Alarm
    Param.corkTemp_Max = SPARK_VSR01_SCADA_CorkTemp_Max
    Param.longUnloadIsAbnormality = SPARK_VSR01_SCADA_LongDischargeIsAbnormality
    Param.alarmTempIsAbnormality = SPARK_VSR01_SCADA_AlarmTempIsAbnormality
    Param.longMaxTempIsAbnormality = SPARK_VSR01_SCADA_LongMaxTempIsAbnormality
    Param.emailLongUnload = SPARK_VSR01_SCADA_EmailLongDischarge
    Param.emailAlarmTemp = SPARK_VSR01_SCADA_EmailAlarmTempAbnormality
    Param.emailLongMaxTemp = SPARK_VSR01_SCADA_EmailLongMaxTempAbnormality
    latchSet.a = SPARK_VSR01_SCADA_latch1
    latchSet.b = SPARK_VSR01_SCADA_latch2
    latchSet.c = SPARK_VSR01_SCADA_latch3
    If General_Spark_VSR01_PLCStateVariable = 0 Then
        Try
            Param.pvCorkTemperature = SPARK_VSR01_PLC_KTP_Temperat_PV_Rolhas
        Catch
            Param.pvCorkTemperature = 0
        End Try
    Else
        Param.pvCorkTemperature = 0
    End If

    results = detectAbnormality(Param, T_min, latchSet)

    SPARK_VSR01_SCADA_MaxTemperatureTimer = T_min.MaxTemperature
    SPARK_VSR01_SCADA_unloadingTimer = T_min.unloading
    SPARK_VSR01_SCADA_latch1 = latchSet.a
    SPARK_VSR01_SCADA_latch2 = latchSet.b
    SPARK_VSR01_SCADA_latch3 = latchSet.c
    SPARK_VSR01_SCADA_abnormalTreatment  = results.bit_abnormalTreatment
    SPARK_VSR01_SCADA_sendEmailOfAbnormality  = results.bit_sendEmail
    SPARK_VSR01_SCADA_abnormalityLog  = results.bit_sendEmail

End Sub

 Function  detectAbnormality(M As MachineParameters, ByRef T As Timers, ByRef l As latches)
    Dim cmd = New Commands()
    Dim bit_longWhileUnloading, bit_AlarmTemperature, bit_longWhileMaxTemperature As Boolean
    Dim lactch1, latch2, latch3 As Boolean

' Unloading took so long
     If M.machineStatus = 3 Then
        T.unloading = T.unloading+1
    Else
        T.unloading = 0
    End If
   bit_longWhileUnloading = M.discharge_Max_Time&gt;0 And T.unloading &gt;= M.discharge_Max_Time And M.machineStatus = 1

' Alarm temperature
   bit_AlarmTemperature = M.pvCorkTemperature&gt;= M.corkTemp_Alarm

' Maximume temperature remained so long
    If M.pvCorkTemperature &gt; M.corkTemp_Max And M.machineStatus = 1 Then
        T.MaxTemperature = T.MaxTemperature+1
    Else
        T.MaxTemperature = 0
    End If

   bit_longWhileMaxTemperature = M.corkTemp_Max_Time&gt;0 And T.MaxTemperature&gt;=M.corkTemp_Max_Time

   If M.machineStatus = 0 Then
        cmd.logger = "Normal"
        l.a = False
        l.b = False
        l.c = False
   End If
   If bit_longWhileUnloading And M.longUnloadIsAbnormality And  l.a = False Then
        cmd.logger = cmd.logger &amp; "longUnloading "
         l.a = True
   End If
      If bit_AlarmTemperature And M.alarmTempIsAbnormality And l.b = False Then
        cmd.logger = cmd.logger &amp; "alarmTemp "
        l.b = True
   End If
      If bit_longWhileUnloading And M.longUnloadIsAbnormality And  l.c = False Then
        cmd.logger = cmd.logger &amp; "longMaxTemp "
        l.c = True
   End If

   cmd.bit_abnormalTreatment = (bit_longWhileUnloading And M.longUnloadIsAbnormality) _
                                            Or (bit_AlarmTemperature And M.alarmTempIsAbnormality) _
                                            Or (bit_longWhileMaxTemperature And M.longMaxTempIsAbnormality)

    cmd.bit_sendEmail = (bit_longWhileUnloading And M.emailLongUnload) _
                              Or (bit_AlarmTemperature And M.emailAlarmTemp) _
                              Or (bit_longWhileMaxTemperature And M.emailLongMaxTemp)
   Return cmd
 End Function
</sCode>
  <sessionName i:nil="true" />
  <slowSamplingInterval>5000</slowSamplingInterval>
  <stopCommandTimeout>2000</stopCommandTimeout>
  <threadPriority>Normal</threadPriority>
  <useAlwaysSecureConnections>false</useAlwaysSecureConnections>
  <writeTimeout>0</writeTimeout>
</ScriptDocument>